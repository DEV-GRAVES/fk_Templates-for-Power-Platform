compHeader As CanvasComponent:
    CurrentPage: =App.ActiveScreen
    Fill: =RGBA(0, 0, 0, 0)
    HeaderHeight: =50
    HeaderWidth: =1366
    Height: =compHeader.HeaderHeight
    IsBackSettingsOn: =true
    IsNavTopOn: =true
    MainPageScreen: ='Landing Screen'
    SettingsPageScreen: ='Settings Screen'
    varTextColor: ="E2231B"
    Width: =compHeader.HeaderWidth
    X: =0
    Y: =0
    ZIndex: =1

    conHeader As groupContainer.horizontalAutoLayoutContainer:
        Fill: =ColorValue(varThemeColors.primary)
        Height: =Parent.Height
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        PaddingBottom: =5
        PaddingLeft: =
        PaddingTop: =5
        Width: =App.Width
        ZIndex: =3

        conAppLogo As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            DropShadow: =DropShadow.None
            Height: =Parent.Height - Parent.PaddingTop - Parent.PaddingBottom
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            Width: =Parent.Width
            ZIndex: =2

            lblAppTitle_Header As label:
                Align: =Align.Center
                Color: =ColorValue(varThemeColors.backgroundFill)
                DisplayMode: =DisplayMode.View
                FocusedBorderThickness: =1
                Font: =varThemeFont.B1.face
                FontWeight: =varThemeFont.B1.weight
                Size: =varThemeFont.B1.size
                Text: |-
                    =If(App.ActiveScreen.Size >= 3 ,
                    With(
                        {Text: "Reimbursement Request"},
                        If(
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    ))
                Width: =Self.Size * Len(Self.Text)
                X: =shpVertical_Header.Width + shpVertical_Header.X
                ZIndex: =2

            shpVertical_Header As rectangle:
                Fill: =ColorValue(varThemeColors.backgroundFill)
                Height: =23
                Visible: =If(App.ActiveScreen.Size >= 3 , true, false)
                Width: =2
                X: =AppLogo.Width + AppLogo.X + 36
                Y: =8
                ZIndex: =3

            AppLogo As image:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Logo - Navigate Home"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderThickness: =2
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                FocusedBorderThickness: =varThemeColors.focusBorderThickness
                Height: =40
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: =varThemeColors.iconimg
                OnSelect: =Navigate(compHeader.MainPageScreen)
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedFill: =RGBA(0, 0, 0, 0)
                TabIndex: =0
                Tooltip: |-
                    =With(
                        {Text: "Logo - Navigate Home"},
                        If(
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                Width: =110
                X: =icoBack.X + icoBack.Width 
                ZIndex: =4

            "icoBack As icon.'3DPrinting'":
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Back"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.text)
                Color: =ColorValue(varThemeColors.backgroundFill)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                FocusedBorderThickness: =varThemeColors.focusBorderThickness
                Height: =Parent.Height 
                HoverBorderColor: =Color.Transparent
                HoverColor: =Self.Color
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.ChevronLeft
                OnSelect: =Back();
                PaddingBottom: =10
                PaddingLeft: =10
                PaddingRight: =5
                PaddingTop: =10
                PressedBorderColor: =Color.Transparent
                PressedColor: =Self.Color
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Back"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                Visible: =compHeader.IsBackSettingsOn
                Width: =Self.Height
                ZIndex: =5

        conRightAlignedSetting As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: =Parent.Height - Parent.PaddingTop - Parent.PaddingBottom
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            PaddingRight: =45
            Width: =Self.Height + Self.PaddingLeft + Self.PaddingRight
            ZIndex: =3

            "icoSettings As icon.'3DPrinting'":
                AccessibleLabel: |-
                    =With(
                        {Text: "Settings" },
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: |
                    =ColorValue(varThemeColors.backgroundFill)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                FocusedBorderThickness: =varThemeColors.focusBorderThickness
                Height: |
                    =40
                HoverBorderColor: =
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.Settings
                OnSelect: =Navigate(compHeader.SettingsPageScreen)
                PaddingBottom: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedColor: =ColorValue(varThemeColors.altText)
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =With(
                        {Text: "Settings" },
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Width: =50
                ZIndex: =4

