App As appinfo:
    BackEnabled: =true
    ConfirmExit: =varConfirmExit
    ConfirmExitMessage: |-
        =// Define a variable named "Text" with the value "{value}"
        With(
            {Text: "You may have unsaved data. Are you sure you want to exit without saving?"},
           // Check if a localized text exists for "Text" in the user's preferred language
            If(
                // If the localized text is blank, return the default text
                IsBlank(
                    LookUp(
                        colUserLocalizedStrings,
                        'English Value' = Text
                    ).'Localized Value'
                ),
                Text,
                // If a localized text is found, return that instead of the default text
                LookUp(
                    colUserLocalizedStrings,
                    'English Value' = Text
                ).'Localized Value'
            )
        )
    OnError: |-
        =//Patch a new record in dataverse for unhandled or unexpected errors and trace
        If(
            !IsBlank(FirstError.Message),
            Patch(
                'Employee Experience Errors',
                Defaults('Employee Experience Errors'),
                {
                    Action: FirstError.Source,
                    'Additional Information': App.ActiveScreen.Name,
                    'Error Message': FirstError.Message,
                    Name: "Expense Reimbursements",
                    'Source Type': 'Source Type (Employee Experience Errors)'.'Power App'
                }
            );
         
        //Show the error also in app monitor
        Trace(FirstError.Message);
         
        //Rethrow the error so user can see it
        Error(FirstError);
         
        )
    OnStart: |-
        =//set desktop fonts
        Set(
            varDesktopFonts,
            {
                H1: {
                    face: Font.'Segoe UI',
                    size: 24,
                    weight: FontWeight.Normal,
                    weightBold: FontWeight.Bold,
                    italic: false
                },
                H2: {
                    face: Font.'Segoe UI',
                    size: 18,
                    weight: FontWeight.Normal,
                    weightBold: FontWeight.Bold,
                    italic: false
                },
                H3: {
                    face: Font.'Segoe UI',
                    size: 15,
                    weight: FontWeight.Semibold,
                    weightNormal: FontWeight.Normal,
                    italic: false
                },
                B1: {
                    face: Font.'Segoe UI',
                    size: 12,
                    weight: FontWeight.Normal,
                    weightBold: FontWeight.Bold,
                    weightSemiBold: FontWeight.Semibold,
                    italic: false
                },
                B2: {
                    face: Font.'Segoe UI',
                    size: 10,
                    weight: FontWeight.Normal,
                    weightBold: FontWeight.Semibold,
                    italic: false
                },
                B3: {
                    face: Font.'Segoe UI',
                    size: 8,
                    weight: FontWeight.Normal,
                    weightBold: FontWeight.Semibold,
                    italic: false
                },
                CTA: {
                    face: Font.'Segoe UI',
                    size: 12,
                    weight: FontWeight.Semibold,
                    italic: false
                }
            }
        );
        Set(
            varThemeFont,
            varDesktopFonts
        );
        // set theme colors
        Set(
            varLightTheme,
            {
                name: "light",
                background: "#FAF9F8",
                backgroundFill: "#FFFFFF",
                backgroundFillDisabled: "#F3F2F1",
                text: "#201F1E",
                altText: "#FFFFFF",
                disabledText: "#A19F9D",
                primary: "#0078D4",
                secondary: "#EFF6FC",
                tertiary: "#005A9E",
                primaryGray: "#8A8886",
                secondaryGray: "#EDEBE9",
                tertiaryGray: "#605E5C",
                confirmation: "#107C10",
                warning: "#FFB900",
                error: "#D13438",
                info: "#006FC8",
                iconimg: 'logo-MSFT-light',
                focusBorder: "#000000",
                focusBorderThickness: 2
            }
        );
        Set(
            varDarkTheme,
            {
                name: "dark",
                background: "#201F1E",
                backgroundFill: "#000000",
                backgroundFillDisabled: "#323130",
                text: "#FAF9F8",
                altText: "#000000",
                disabledText: "#A19F90",
                primary: "#0078D4",
                secondary: "#004578",
                tertiary: "#47ADFF",
                primaryGray: "#605E5C",
                secondaryGray: "#323130",
                tertiaryGray: "#E1DFDD",
                confirmation: "#00CC6A",
                warning: "#FDE300",
                error: "#FF4343",
                info: "#3B83F7",
                iconimg: 'logo-MSFT-contrast',
                focusBorder: "#FFFFFF",
                focusBorderThickness: 2
            }
        );
        Set(
            varContrastTheme,
            {
                name: "contrast",
                background: "#000000",
                backgroundFill: "#000000",
                backgroundFillDisabled: "#6B6B6B",
                text: "#FFFFFF",
                altText: "#000000",
                disabledText: "#FFFFFF",
                primary: "#1AEBFF",
                secondary: "#000000",
                tertiary: "#FFFF00",
                primaryGray: "#FFFFFF",
                secondaryGray: "#6B6B6B",
                tertiaryGray: "#FFFFFF",
                confirmation: "#3FF23F",
                warning: "#FFFF00",
                error: "#FF4343",
                info: "#FF00E5",
                iconimg: 'logo-MSFT-contrast',
                focusBorder: "#FFFFFF",
                focusBorderThickness: 2
            }
        );
        
        Set(
            varThemeColors,
            varLightTheme
        );
        //Lookup and set localized text, remove region 
        Set(
            varISOUserLanguageCode,//Get user's language and map to existing choice values that are supported by the 'HR Localizations' entity which can be customized to support more languages
            Switch(
                Left(
                    Language(),
                    2
                ),
                "ar",
                'ISO EE Language Code'.ar,
                "de",
                'ISO EE Language Code'.de,
                "en",
                'ISO EE Language Code'.en,
                "es",
                'ISO EE Language Code'.es,
                "fr",
                'ISO EE Language Code'.fr,
                "he",
                'ISO EE Language Code'.he,
                "it",
                'ISO EE Language Code'.it,
                "ja",
                'ISO EE Language Code'.ja,
                "pt",
                'ISO EE Language Code'.pt,
                "zh",
                'ISO EE Language Code'.zh,
                'ISO EE Language Code'.en
            )
        );
        ClearCollect(
            colUserLocalizedStrings,//Collection used to display localized value according to user's language value
            Filter(
                'Employee Experience Localizations',
                Language = varISOUserLanguageCode,
                'Employee Experience Localizations (Views)'.'Active EE Localizations'
            )
        );
        
        ClearCollect(
            colExpenseSteps,//Collection used to show the steps in adding an expense in a request
            {
                Label: "Step 1",
                Screen: ['Attach Receipt Options Screen'],
                Description: "Choose how you'd upload the expense",
                Index: 1
            },
            {
                Label: "Step 2",
                Screen: ['Add New Image Screen', 'Scan Receipt Screen', 'Upload Screen'],
                Description: "Upload the expense",
                Index: 2
            },
            {
                Label: "Step 3",
                Screen: ['Receipt Details Screen'],
                Description: "Finalize the details",
                Index: 3
            }
        );
        
        //Title of the application
        Set(
            varRcptProcessorMerchantName,
            Blank()
        );//Hold selected merchant name.
        
        //ConfirmExit
        Set(varConfirmExit, false)
    StartScreen: ='Landing Screen'
    Theme: =PowerAppsTheme

    Host As hostControl.DefaultHostControlVariant:
        OnCancel: =false
        OnEdit: =false
        OnNew: =false
        OnSave: =false
        OnView: =false

