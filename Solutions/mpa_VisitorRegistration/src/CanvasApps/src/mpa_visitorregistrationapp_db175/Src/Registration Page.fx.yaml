"'Registration Page' As screen":
    Fill: =Color.White
    LoadingSpinnerColor: =App.Theme.Colors.Primary
    OnVisible: |+
        =Set(varBlankFN,false);
        Set(varBlankLN,false);
        Set(varBlankEmail,false);
        Set(varBlankCompany,false);
        If(
            varFormProcess = FormMode.Edit,
            UpdateContext(
                {
                    varIsMultiDay: LookUp(
                        'Visitor Registrations',
                        'Visitor Registration' = varSelectedVisitor.'Visitor Registration'
                    ).'Is Multi Day Visit'
                }
            );
            , //If new multiday no
            UpdateContext({varIsMultiDay: 'Is Multi Day Visit (Visitor Registrations)'.No})
        );
        UpdateContext({varIsUpdate: false});
        
        
        UpdateContext(
            {
                _LayoutProperties:
                {
                    outerPadding: {top: 40, right: 40, bottom: 40, left: 35},
                    innerPadding: {top: 20, right: 20, bottom: 20, left: 20},
                    labelPadding: {top: 5, right: 5, bottom: 5, left: 5}
                }
            }
        );
        
        
        
        
        

    conMainBody_Registration As groupContainer.verticalAutoLayoutContainer:
        DropShadow: =DropShadow.Light
        Fill: =ColorValue(varTheme.neutralBackground2)
        Height: =Parent.Height - compHeader_Registration.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Visible: |+
            =true
            
        Width: =Parent.Width
        Y: =compHeader_Registration.Height
        ZIndex: =1

        conMainContent_Registration As groupContainer.verticalAutoLayoutContainer:
            Fill: =ColorValue(varTheme.neutralBackground2)
            FillPortions: =0
            Height: =Parent.Height - conButton_Registration.Height - 3
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            LayoutOverflowY: =LayoutOverflow.Scroll
            PaddingBottom: |-
                =If(
                    App.ActiveScreen.Size < 4,
                    _LayoutProperties.outerPadding.top / 5,
                    _LayoutProperties.outerPadding.top / 2
                )
            PaddingLeft: |-
                =If(
                    App.ActiveScreen.Size < 4,
                    _LayoutProperties.outerPadding.left,
                    _LayoutProperties.outerPadding.top 
                )
            PaddingRight: |-
                =If(
                    App.ActiveScreen.Size < 4,
                    _LayoutProperties.outerPadding.left,
                    _LayoutProperties.outerPadding.top 
                )
            PaddingTop: |-
                =If(
                    App.ActiveScreen.Size < 4,
                    _LayoutProperties.outerPadding.top / 5,
                    _LayoutProperties.outerPadding.top / 2
                )
            Width: =Parent.Width
            Y: =compHeader_Registration.Y + compHeader_Registration.Height
            ZIndex: =1

            conTitle_Registration As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                Fill: =ColorValue(varTheme.background)
                FillPortions: =0
                Height: =If(App.ActiveScreen.Size = ScreenSize.Small,60,60)
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutMinHeight: =75
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight - Parent.LayoutGap
                Y: =conBack_Registration.Height
                ZIndex: =1

                con_RegistrationTitle_Registration As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    Fill: =ColorValue(varTheme.background)
                    FillPortions: =0
                    Height: =Parent.Height
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =Parent.Width * .90
                    Y: =conBack_Registration.Height
                    ZIndex: =1

                    txt_RegistrationTitle_Registration As Text:
                        Align: ='TextCanvas.Align'.Start
                        AlignInContainer: =AlignInContainer.Stretch
                        AutoHeight: =false
                        BorderStyle: =""
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.H3.italic
                        Height: =Self.Size * 2
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.H1.size
                        Text: =If(varFormProcess = FormMode.Edit , "Registration ID "& varSelectedVisitor.'Registration Id' ,  "Create registration")
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                        Weight: =varThemeFont.H3.weightBold
                        Width: =Parent.Width
                        X: =0
                        Y: =0
                        ZIndex: =1

                con_RegistrationStatus_Registration As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    Fill: =Color.Transparent
                    FillPortions: =0
                    Height: =Parent.Height / 2
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutJustifyContent: =LayoutJustifyContent.Center
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =Parent.Width - con_RegistrationTitle_Registration.Width - Parent.PaddingLeft - Parent.PaddingRight - Parent.LayoutGap
                    Y: =conBack_Registration.Height
                    ZIndex: =2

                    bdgRegistrationStatus_Registration As Badge:
                        AccessibleLabel: ="Status"
                        Align: =""
                        Appearance: ="Filled"
                        BasePaletteColor: =
                        Content: =varSelectedVisitor.'Status Reason'
                        DisplayMode: =DisplayMode.Edit
                        FontColor: =
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =32
                        ThemeColor: |-
                            =Switch(varSelectedVisitor.'Status Reason',
                            'Status Reason (Visitor Registrations)'.Scheduled, 'BadgeCanvas.ThemeColor'.Brand,
                            'Status Reason (Visitor Registrations)'.'Checked In', 'BadgeCanvas.ThemeColor'.Success,
                            'Status Reason (Visitor Registrations)'.'Checked Out','BadgeCanvas.ThemeColor'.Warning,
                            'BadgeCanvas.ThemeColor'.Warning)
                        VerticalAlign: =""
                        Visible: =If(varFormProcess = FormMode.Edit , false    , true)
                        Width: =Len(Self.Content) * 10
                        X: =724
                        Y: =88
                        ZIndex: =2

            conBodyContent_Registration As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                Fill: =ColorValue(varTheme.neutralBackground2)
                FillPortions: =0
                Height: =conBodyContentInside_Registration.Height + conBodyContentInsideBottom_Registration.Height + 30
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =16
                LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =10
                PaddingRight: =10
                Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                ZIndex: =3

                conBodyContentInside_Registration As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.Semilight
                    Fill: =ColorValue(varTheme.neutralBackground1)
                    FillPortions: =0
                    Height: |-
                        =//210
                        
                        If(
                            App.ActiveScreen.Size = ScreenSize.Small,(txtBuildingitle_Registration.Height+ conInsideContent_Registration.Height) ,210)
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =16
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =16
                    PaddingLeft: =16
                    PaddingRight: =16
                    PaddingTop: =16
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                    ZIndex: =1

                    txtBuildingitle_Registration As Text:
                        AutoHeight: =false
                        BorderStyle: =""
                        DisplayMode: =DisplayMode.Edit
                        FontColor: =ColorValue(varTheme.neutralForeground1)
                        Height: =Self.Size * 1.5
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =16
                        Text: ="Visitor information"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                        Weight: =varDesktopFonts.H3.weightBold
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =1

                    conInsideContent_Registration As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        Fill: =ColorValue(varTheme.neutralBackground1)
                        FillPortions: =0
                        Height: |-
                            =//170
                            
                            
                            If(
                                App.ActiveScreen.Size = ScreenSize.Small, 420, If(App.ActiveScreen.Size=2, 170,170))
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        ZIndex: =3

                        frmVisitorInformation_Registration As form.PowerApps_CoreControls_Form:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            BorderColor: =App.Theme.Colors.Darker40
                            DataSource: =Contacts
                            DefaultMode: =If(And(varFormProcess = FormMode.New  , !IsBlank(varVisitor)) , FormMode.Edit , varFormProcess)
                            Height: =Parent.Height
                            Item: =If(varFormProcess = FormMode.New , LookUp(Contacts , Contact = varVisitor.Contact) , LookUp(Contacts , Contact = varSelectedVisitor.Visitor.Contact))
                            LayoutMinHeight: =250
                            LayoutMinWidth: =400
                            UseFluentV9Cards: =true
                            Width: =Parent.Width
                            ZIndex: =1

                            "'dtcFirst Name_Registration' As typedDataCard.fluentV9TextualEditCard":
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="firstname"
                                Default: =ThisItem.'First Name'
                                DisplayMode: =Parent.DisplayMode
                                DisplayName: =DataSourceInfo([@Contacts],DataSourceInfo.DisplayName,firstname)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =70
                                MaxLength: =DataSourceInfo([@Contacts], DataSourceInfo.MaxLength, firstname)
                                Required: =true
                                Update: =txiFirstName_Registration.Value
                                Width: |-
                                    =
                                    If(
                                        App.ActiveScreen.Size = ScreenSize.Small,Parent.Width,( Parent.Width /3))
                                X: =0
                                Y: =0
                                ZIndex: =1

                                txtFirstNameLabel_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =
                                    Height: =22
                                    Size: =14
                                    Text: ="First name"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                "txiFirstName_Registration As 'Text input'":
                                    AccessibleLabel: =Parent.DisplayName
                                    Appearance: ="FilledDarker"
                                    BasePaletteColor: =
                                    BorderStyle: =""
                                    DisplayMode: =Parent.DisplayMode
                                    FontColor: =
                                    Height: =32
                                    MaxLength: =Parent.MaxLength
                                    Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                                    OnChange: |-
                                        =If(Self.Value <> Parent.Default ,
                                        UpdateContext({varIsUpdate: true}); ,UpdateContext({varIsUpdate: false}););
                                        
                                        
                                        If(IsBlank(Trim(Self.Value)), Set(varBlankFN,true),Set(varBlankFN,false))
                                    Placeholder: ="Enter text"
                                    Required: =Parent.Required
                                    TriggerOutput: ="FocusOut"
                                    ValidationState: =If(IsBlank(Parent.Error) && !varBlankFN, "None", "Error")
                                    Value: =Parent.Default
                                    Width: =Parent.Width - 48
                                    X: =0
                                    Y: =txtFirstNameLabel_Registration.Y + txtFirstNameLabel_Registration.Height + 4
                                    ZIndex: =2

                            "'dtcMiddle Name_Registration' As typedDataCard.fluentV9TextualEditCard":
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="middlename"
                                Default: =ThisItem.'Middle Name'
                                DisplayMode: =Parent.DisplayMode
                                DisplayName: =DataSourceInfo([@Contacts],DataSourceInfo.DisplayName,middlename)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =70
                                MaxLength: =DataSourceInfo([@Contacts], DataSourceInfo.MaxLength, middlename)
                                Required: =false
                                Update: =txiMiddleName_Registration.Value
                                Width: |-
                                    =//Parent.Width /3
                                    
                                    If(
                                        App.ActiveScreen.Size = ScreenSize.Small,Parent.Width,( Parent.Width /3))
                                X: =1
                                Y: =0
                                ZIndex: =1

                                txtMiddleNameLabel_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =
                                    Height: =22
                                    Size: =14
                                    Text: ="Middle name (optional)"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                "txiMiddleName_Registration As 'Text input'":
                                    AccessibleLabel: =Parent.DisplayName
                                    Appearance: ="FilledDarker"
                                    BasePaletteColor: =
                                    BorderStyle: =""
                                    DisplayMode: =Parent.DisplayMode
                                    FontColor: =
                                    Height: =32
                                    MaxLength: =Parent.MaxLength
                                    Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                                    OnChange: |-
                                        =If(Self.Value <> Parent.Default ,
                                        UpdateContext({varIsUpdate: true}); ,UpdateContext({varIsUpdate: false});)
                                    Placeholder: ="Enter text"
                                    Required: =Parent.Required
                                    TriggerOutput: ="FocusOut"
                                    ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                    Value: =Parent.Default
                                    Width: =Parent.Width - 48
                                    X: =0
                                    Y: =txtMiddleNameLabel_Registration.Y + txtMiddleNameLabel_Registration.Height + 4
                                    ZIndex: =2

                            dtcEmail_Registration As typedDataCard.fluentV9TextualEditCard:
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="emailaddress1"
                                Default: =ThisItem.Email
                                DisplayMode: =Parent.DisplayMode
                                DisplayName: =DataSourceInfo([@Contacts],DataSourceInfo.DisplayName,emailaddress1)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =70
                                MaxLength: =DataSourceInfo([@Contacts], DataSourceInfo.MaxLength, emailaddress1)
                                Required: =true
                                Update: =txiEmail_Registration.Value
                                Width: |-
                                    =//Parent.Width /3
                                    
                                    
                                    If(
                                        App.ActiveScreen.Size = ScreenSize.Small,Parent.Width,( Parent.Width /3))
                                X: =0
                                Y: =1
                                ZIndex: =1

                                txtemailLabel_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =
                                    Height: =22
                                    Size: =14
                                    Text: ="Email address"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                "txiEmail_Registration As 'Text input'":
                                    AccessibleLabel: =Parent.DisplayName
                                    Appearance: ="FilledDarker"
                                    BasePaletteColor: =
                                    BorderStyle: =""
                                    DisplayMode: =Parent.DisplayMode
                                    FontColor: =
                                    Height: =32
                                    MaxLength: =Parent.MaxLength
                                    Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                                    OnChange: |-
                                        =If(IsBlank(Trim(Self.Value)), Set(varBlankEmail,true),Set(varBlankEmail,false));
                                        If(Self.Value <> Parent.Default ,
                                        UpdateContext({varIsUpdate: true}); ,UpdateContext({varIsUpdate: false});)
                                    Placeholder: ="Enter text"
                                    Required: =Parent.Required
                                    TriggerOutput: ="FocusOut"
                                    ValidationState: =If(IsBlank(Parent.Error) && !varBlankEmail, "None", "Error")
                                    Value: =Parent.Default
                                    Width: =Parent.Width - 48
                                    X: =0
                                    Y: =txtemailLabel_Registration.Y + txtemailLabel_Registration.Height + 4
                                    ZIndex: =2

                            dtcPhone_DataCard_Registration As typedDataCard.fluentV9TextualEditCard:
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="address1_telephone1"
                                Default: |-
                                    =ThisItem.'Address 1: Phone'
                                DisplayMode: =Parent.DisplayMode
                                DisplayName: =DataSourceInfo([@Contacts],DataSourceInfo.DisplayName,address1_telephone1)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =70
                                MaxLength: =DataSourceInfo([@Contacts], DataSourceInfo.MaxLength, address1_telephone1)
                                Required: =false
                                Update: =txiPhone_Registration.Value
                                Width: |-
                                    =//Parent.Width /3
                                    
                                    
                                    If(
                                        App.ActiveScreen.Size = ScreenSize.Small,Parent.Width,( Parent.Width /3))
                                X: =1
                                Y: =1
                                ZIndex: =1

                                txtPhoneLabel_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =
                                    Height: =22
                                    Size: =14
                                    Text: ="Phone (optional)"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                "txiPhone_Registration As 'Text input'":
                                    AccessibleLabel: =Parent.DisplayName
                                    Appearance: ="FilledDarker"
                                    BasePaletteColor: =
                                    BorderStyle: =""
                                    DisplayMode: =Parent.DisplayMode
                                    FontColor: =
                                    Height: =32
                                    MaxLength: =Parent.MaxLength
                                    Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                                    OnChange: |-
                                        =If(Self.Value <> Parent.Default ,
                                        UpdateContext({varIsUpdate: true}); ,UpdateContext({varIsUpdate: false});)
                                    Placeholder: ="Enter text"
                                    Required: =Parent.Required
                                    TriggerOutput: ="FocusOut"
                                    ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                    Value: =Parent.Default
                                    Width: =Parent.Width - 48
                                    X: =0
                                    Y: =txtPhoneLabel_Registration.Y + txtPhoneLabel_Registration.Height + 4
                                    ZIndex: =2

                            "'dtcLast Name_Registration' As typedDataCard.fluentV9TextualEditCard":
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="lastname"
                                Default: =ThisItem.'Last Name'
                                DisplayMode: =Parent.DisplayMode
                                DisplayName: =DataSourceInfo([@Contacts],DataSourceInfo.DisplayName,lastname)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =70
                                MaxLength: =DataSourceInfo([@Contacts], DataSourceInfo.MaxLength, lastname)
                                Required: =true
                                Update: =txiLastName_Registration.Value
                                Width: |-
                                    =
                                    If(
                                        App.ActiveScreen.Size = ScreenSize.Small,Parent.Width, (Parent.Width /3))
                                X: =2
                                Y: =0
                                ZIndex: =2

                                txtLastNameLabel_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =
                                    Height: =22
                                    Size: =14
                                    Text: ="Last name"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                "txiLastName_Registration As 'Text input'":
                                    AccessibleLabel: =Parent.DisplayName
                                    Appearance: ="FilledDarker"
                                    BasePaletteColor: =
                                    BorderStyle: =""
                                    DisplayMode: =Parent.DisplayMode
                                    FontColor: =
                                    Height: =32
                                    MaxLength: =Parent.MaxLength
                                    Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                                    OnChange: |-
                                        =If(IsBlank(Trim(Self.Value)), Set(varBlankLN,true),Set(varBlankLN,false));
                                        
                                        If(Self.Value <> Parent.Default ,
                                        UpdateContext({varIsUpdate: true}); ,UpdateContext({varIsUpdate: false});)
                                    Placeholder: ="Enter text"
                                    Required: =Parent.Required
                                    TriggerOutput: ="FocusOut"
                                    ValidationState: =If(IsBlank(Parent.Error) && !varBlankLN, "None", "Error")
                                    Value: =Parent.Default
                                    Width: =Parent.Width - 48
                                    X: =0
                                    Y: =txtLastNameLabel_Registration.Y + txtLastNameLabel_Registration.Height + 4
                                    ZIndex: =2

                conBodyContentInsideBottom_Registration As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.Semilight
                    Fill: =ColorValue(varTheme.neutralBackground1)
                    FillPortions: =0
                    Height: |-
                        =//conInsideVisitDetails_Registration.Height + 80
                        //210
                        
                        If(
                            App.ActiveScreen.Size = ScreenSize.Small,(txtVisitDetails_Registration.Height+ conInsideVisitDetails_Registration.Height),conInsideVisitDetails_Registration.Height + 80)
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =16
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =16
                    PaddingLeft: =16
                    PaddingRight: =16
                    PaddingTop: =16
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                    ZIndex: =2

                    txtVisitDetails_Registration As Text:
                        AutoHeight: =false
                        BorderStyle: =""
                        DisplayMode: =DisplayMode.Edit
                        FontColor: =ColorValue(varTheme.neutralForeground1)
                        Height: =Self.Size * 1.5
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =16
                        Text: ="Visit details"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                        Weight: =varDesktopFonts.H3.weightBold
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =1

                    conInsideVisitDetails_Registration As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        Fill: =ColorValue(varTheme.neutralBackground1)
                        FillPortions: =0
                        Height: =frmVisitType_Registration.Height
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =2
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        ZIndex: =4

                        frmVisitType_Registration As form.PowerApps_CoreControls_Form:
                            BorderColor: =App.Theme.Colors.Darker40
                            DataSource: ='Visitor Registrations'
                            DefaultMode: =varFormProcess
                            FillPortions: =0
                            Height: |-
                                =//500
                                If(App.ActiveScreen.Size=ScreenSize.Small,800,500)
                            Item: =LookUp('Visitor Registrations' , 'Visitor Registration' =  varSelectedVisitor.'Visitor Registration')
                            LayoutMinHeight: =250
                            LayoutMinWidth: =Parent.Width
                            NumberOfColumns: =2
                            SnapToColumns: =false
                            UseFluentV9Cards: =true
                            ZIndex: =1

                            "'dtcVisit Type_Registration' As typedDataCard.fluentV9ComboBoxOptionSetSingleEditCard":
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="mpa_visittype"
                                Default: =ThisItem.'Visit Type'
                                DisplayMode: =Parent.DisplayMode
                                DisplayName: =DataSourceInfo([@'Visitor Registrations'],DataSourceInfo.DisplayName,mpa_visittype)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: |
                                    =//100
                                    If(App.ActiveScreen.Size=ScreenSize.Small,70,100)
                                Required: =true
                                Update: =cmbVisitType_Registration.Selected.Value
                                Width: =If(App.ActiveScreen.Size=ScreenSize.Small,Parent.Width, Parent.Width / 3)
                                WidthFit: =false
                                X: =0
                                Y: =0
                                ZIndex: =1

                                txtVisitType_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =ColorValue(varTheme.neutralForeground1)
                                    Height: =22
                                    Size: =14
                                    Text: ="Visit type"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                cmbVisitType_Registration As Combobox.pcfdataset:
                                    AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                                    Appearance: ="FilledDarker"
                                    BorderStyle: =""
                                    DefaultSelectedItems: =[Parent.Default]
                                    DisplayMode: =Parent.DisplayMode
                                    Height: =32
                                    IsSearchable: =true
                                    Items: =Choices('Visitor Type')
                                    OnChange: |-
                                        =If(
                                            Self.Selected.Value <> Parent.Default,
                                            UpdateContext({varIsUpdate: true});
                                            ,
                                            UpdateContext({varIsUpdate: false});
                                            
                                        );
                                        If(
                                            !Or(
                                                cmbVisitType_Registration.Selected.Value = 'Visitor Type'.Customer,
                                                cmbVisitType_Registration.Selected.Value = 'Visitor Type'.Vendor
                                            ),
                                            Reset(txiCompanyName_Registration)
                                        )
                                    ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                    Width: =Parent.Width  - 48
                                    X: =0
                                    Y: =txtVisitType_Registration.Y + txtVisitType_Registration.Height + 4
                                    ZIndex: =2

                            dtcCompany_Registration As typedDataCard.fluentV9TextualEditCard:
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="mpa_company"
                                Default: =ThisItem.Company
                                DisplayMode: =If(Or(cmbVisitType_Registration.Selected.Value = 'Visitor Type'.Customer , cmbVisitType_Registration.Selected.Value = 'Visitor Type'.Vendor ),  DisplayMode.Edit , DisplayMode.Disabled)
                                DisplayName: =DataSourceInfo([@'Visitor Registrations'],DataSourceInfo.DisplayName,mpa_company)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =70
                                MaxLength: =DataSourceInfo([@'Visitor Registrations'], DataSourceInfo.MaxLength, mpa_company)
                                Required: =If(Or(cmbVisitType_Registration.Selected.Value = 'Visitor Type'.Customer , cmbVisitType_Registration.Selected.Value = 'Visitor Type'.Vendor ),  true , false)
                                Update: =txiCompanyName_Registration.Value
                                Width: |-
                                    =//Parent.Width / 2
                                    If(App.ActiveScreen.Size=ScreenSize.Small,Parent.Width, Parent.Width / 2)
                                WidthFit: =false
                                X: =1
                                Y: =0
                                ZIndex: =1

                                txtCompanyNameLabel_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =ColorValue(varTheme.neutralForeground1)
                                    Height: =22
                                    Size: =14
                                    Text: ="Company name"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                "txiCompanyName_Registration As 'Text input'":
                                    AccessibleLabel: =Parent.DisplayName
                                    Appearance: ="FilledDarker"
                                    BasePaletteColor: =
                                    BorderStyle: =""
                                    DisplayMode: =Parent.DisplayMode
                                    FontColor: =
                                    Height: =32
                                    MaxLength: =Parent.MaxLength
                                    Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                                    OnChange: |-
                                        =If(IsBlank(Trim(Self.Value)), Set(varBlankCompany,true),Set(varBlankCompany,false));
                                        If(Self.Value <> Parent.Default ,
                                        UpdateContext({varIsUpdate: true}); ,UpdateContext({varIsUpdate: false}););
                                    Placeholder: ="Enter text"
                                    Required: =Parent.Required
                                    TriggerOutput: ="FocusOut"
                                    ValidationState: |-
                                        =If(cmbVisitType_Registration.Selected.Value = 'Visitor Type'.Customer || cmbVisitType_Registration.Selected.Value = 'Visitor Type'.Vendor,
                                        If(IsBlank(Parent.Error) && !varBlankCompany, "None", "Error"),
                                        If(IsBlank(Parent.Error), "None", "Error"))
                                    Value: =Parent.Default
                                    Width: =Parent.Width  * 2 / 3 - 48
                                    X: =0
                                    Y: =txtCompanyNameLabel_Registration.Y + txtCompanyNameLabel_Registration.Height + 4
                                    ZIndex: =2

                                txtCompanyNameLabel_Registration_Message As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =ColorValue(varTheme.neutralForeground3)
                                    Height: =22
                                    Size: =12
                                    Text: ="For Customer and Vendor visit type"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =68
                                    ZIndex: =3

                            dtcLocation_Registration As typedDataCard.fluentV9ComboBoxEditCard:
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="mpa_location"
                                Default: =ThisItem.Location
                                DisplayMode: =Parent.DisplayMode
                                DisplayName: =DataSourceInfo([@'Visitor Registrations'],DataSourceInfo.DisplayName,mpa_location)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =70
                                Required: =true
                                Update: =cmbLocation_Registration.Selected
                                Width: |-
                                    =//Parent.Width / 3
                                    If(App.ActiveScreen.Size=ScreenSize.Small,Parent.Width, Parent.Width / 3)
                                X: =0
                                Y: =1
                                ZIndex: =1

                                txtLocationLabel_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =ColorValue(varTheme.neutralForeground1)
                                    Height: =22
                                    Size: =14
                                    Text: =Parent.DisplayName
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                cmbLocation_Registration As Combobox.pcfdataset:
                                    AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                                    Appearance: ="FilledDarker"
                                    BorderStyle: =""
                                    DefaultSelectedItems: =[Parent.Default]
                                    DisplayMode: =Parent.DisplayMode
                                    Height: =32
                                    Items: =Choices([@'Visitor Registrations'].Location)
                                    OnChange: |-
                                        =
                                        UpdateContext({varIsUpdate: true});
                                    ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                    Width: =Parent.Width - 48
                                    X: =0
                                    Y: =txtLocationLabel_Registration.Y + txtLocationLabel_Registration.Height + 4
                                    ZIndex: =2

                                    txtStateLocation_Registration As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField:
                                        FieldDisplayName: ="State or Province"
                                        FieldName: ="mpa_stateorprovince"
                                        FieldType: ="E"
                                        FieldVariantName: ="complexTypeColumn"
                                        Order: =8
                                        ZIndex: =8

                                    txtPostalCodeLocation_Registration As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                        FieldDisplayName: ="Postal Code"
                                        FieldName: ="mpa_postalcode"
                                        FieldType: ="s"
                                        FieldVariantName: ="textualColumn"
                                        Order: =7
                                        ZIndex: =9

                                    txtCountryLocation_Registration As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField:
                                        FieldDisplayName: ="Country"
                                        FieldName: ="mpa_country"
                                        FieldType: ="E"
                                        FieldVariantName: ="complexTypeColumn"
                                        Order: =5
                                        ZIndex: =10

                                    txtCompanyLocation_Registration As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                        FieldDisplayName: ="Company"
                                        FieldName: ="mpa_company"
                                        FieldType: ="s"
                                        FieldVariantName: ="textualColumn"
                                        Order: =4
                                        ZIndex: =11

                                    txtCityLocation_Registration As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                        FieldDisplayName: ="City"
                                        FieldName: ="mpa_city"
                                        FieldType: ="s"
                                        FieldVariantName: ="textualColumn"
                                        Order: =3
                                        ZIndex: =12

                                    txtAddressLocation_Registration As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                        FieldDisplayName: ="Address"
                                        FieldName: ="mpa_address"
                                        FieldType: ="s"
                                        FieldVariantName: ="textualColumn"
                                        Order: =2
                                        ZIndex: =13

                                    txtNameLocation_Registration As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                        FieldDisplayName: ="Name"
                                        FieldName: ="mpa_name"
                                        FieldType: ="s"
                                        FieldVariantName: ="textualColumn"
                                        Order: =1
                                        ZIndex: =14

                            "'dtcHost Id_Registration' As typedDataCard.fluentV9ComboBoxEditCard":
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="mpa_hostid"
                                Default: =ThisItem.'Host Id'
                                DisplayMode: =Parent.DisplayMode
                                DisplayName: =DataSourceInfo([@'Visitor Registrations'],DataSourceInfo.DisplayName,mpa_hostid)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =70
                                Required: =true
                                Update: =cmbHost_Registration.Selected
                                Width: |-
                                    =//Parent.Width / 3
                                    If(App.ActiveScreen.Size=ScreenSize.Small,Parent.Width, Parent.Width / 3)
                                X: =1
                                Y: =1
                                ZIndex: =1

                                txtHost_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =ColorValue(varTheme.neutralForeground1)
                                    Height: =22
                                    Size: =14
                                    Text: ="Host"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                cmbHost_Registration As Combobox.pcfdataset:
                                    AccessibleLabel: ="Host"
                                    Appearance: ="FilledDarker"
                                    BorderStyle: =""
                                    DefaultSelectedItems: =[Parent.Default]
                                    DisplayMode: =Parent.DisplayMode
                                    Height: =32
                                    Items: =Choices([@'Visitor Registrations'].mpa_hostid)
                                    OnChange: |-
                                        =UpdateContext({varIsUpdate: true});
                                    ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                    Width: =Parent.Width - 48
                                    X: =0
                                    Y: =txtHost_Registration.Y + txtHost_Registration.Height + 4
                                    ZIndex: =2

                                    "'Display Name' As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn":
                                        FieldDisplayName: ="Display Name"
                                        FieldName: ="displayname"
                                        FieldType: ="s"
                                        FieldVariantName: ="textualColumn"
                                        Order: =1
                                        ZIndex: =15

                            "'dtcIs Multi Day Visit_Registration' As typedDataCard.fluentV9ComboBoxOptionSetSingleEditCard":
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="mpa_ismultidayvisit"
                                Default: =ThisItem.'Is Multi Day Visit'
                                DisplayMode: =Parent.DisplayMode
                                DisplayName: =DataSourceInfo([@'Visitor Registrations'],DataSourceInfo.DisplayName,mpa_ismultidayvisit)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =70
                                Required: =false
                                Update: =varIsMultiDay
                                Width: =Parent.Width
                                X: =-1
                                Y: =2
                                ZIndex: =1

                                txtMultidayVisitlabel_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =ColorValue(varTheme.neutralForeground1)
                                    Height: =22
                                    Size: =14
                                    Text: ="Multi-day visit"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                togMultiVisit_Registration As Toggle:
                                    AccessibleLabel: ="Is multi visit"
                                    BasePaletteColor: =
                                    Checked: =varIsMultiDay
                                    DisplayMode: =DisplayMode.Edit
                                    Font: =""
                                    FontColor: =
                                    FontItalic: =
                                    FontSize: =0
                                    FontWeight: =""
                                    Height: =32
                                    Label: =If(Self.Checked , "Yes" , "No")
                                    OnCheck: |-
                                        =UpdateContext({varIsMultiDay : 'Is Multi Day Visit (Visitor Registrations)'.Yes});
                                        
                                        UpdateContext({varIsUpdate: true});
                                    OnUncheck: |-
                                        =UpdateContext({varIsMultiDay : 'Is Multi Day Visit (Visitor Registrations)'.No});
                                        Reset(dteEndDate_Registration);
                                        Reset(drpHourEnddate_Registration);
                                        Reset(drpMinuteEnddate_Registration);
                                        UpdateContext({varIsUpdate: true});
                                    ToggleSize: =40
                                    Width: =110
                                    X: =0
                                    Y: =38
                                    ZIndex: =5

                            "'dtcAppointment Start Date_Registration' As typedDataCard.fluentV9DateTimeEditCard":
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="mpa_appointmentstartdate"
                                Default: =ThisItem.'Appointment Start Date'
                                DisplayMode: =Parent.DisplayMode
                                DisplayName: =DataSourceInfo([@'Visitor Registrations'],DataSourceInfo.DisplayName,mpa_appointmentstartdate)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =70
                                Required: =true
                                Update: =If(Not IsBlank(dteStartDate.SelectedDate), DateTime(Year(dteStartDate.SelectedDate), Month(dteStartDate.SelectedDate), Day(dteStartDate.SelectedDate), Value(drpHour_Registration.Selected.Value), Value(drpMinute_Registration.Selected.Value), Second(dteStartDate.SelectedDate)))
                                Width: |-
                                    =//Parent.Width / 3
                                    If(App.ActiveScreen.Size=ScreenSize.Small,Parent.Width, Parent.Width / 3)
                                X: =0
                                Y: =2
                                ZIndex: =1

                                txtFromLabel_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =ColorValue(varTheme.neutralForeground1)
                                    Height: =22
                                    Size: =14  
                                    Text: ="From"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                "dteStartDate As 'Date picker'":
                                    AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                                    Appearance: ="FilledDarker"
                                    BasePaletteColor: =
                                    BorderStyle: =""
                                    DisplayMode: =Parent.DisplayMode
                                    FontColor: =
                                    Height: =32
                                    OnChange: |-
                                        =If(//Self.SelectedDate less than DateNow
                                            And(DateValue(Self.SelectedDate) <= DateValue(Now()) , !varIsMultiDay),
                                            Notify(
                                                "Start date must be a future date",
                                                NotificationType.Warning,
                                                3000
                                            );
                                            Reset(Self),
                                            And(
                                                DateValue(Self.SelectedDate) >= DateValue(dteEndDate_Registration.SelectedDate),
                                                varIsMultiDay,
                                                !IsBlank(dteEndDate_Registration.SelectedDate)
                                            ),
                                            Notify(
                                                "Start date should be less than the End date",
                                                NotificationType.Warning,
                                                3000
                                            );
                                            Reset(Self),
                                            And(Self.SelectedDate <= Now() , varIsMultiDay),
                                            Notify(
                                                "Start date must be a future date",
                                                NotificationType.Warning,
                                                3000
                                            );
                                            Reset(Self)
                                        )
                                    SelectedDate: =Parent.Default
                                    ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                    Width: =(Parent.Width - 48) / 2
                                    X: =0
                                    Y: =txtFromLabel_Registration.Y + txtFromLabel_Registration.Height + 4
                                    ZIndex: =2

                                drpHour_Registration As Dropdown.pcfdataset:
                                    AccessibleLabel: ="Hour"
                                    Appearance: ="FilledDarker"
                                    BorderStyle: =""
                                    DefaultSelectedItems: =[Text(Hour(Parent.Default),"00")]
                                    DisplayMode: =Parent.DisplayMode
                                    Height: =28
                                    Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                                    Width: =dteStartDate.Width / 2 - 10
                                    X: =dteStartDate.X + dteStartDate.Width + 10
                                    Y: =dteStartDate.Y + 1
                                    ZIndex: =3

                                txtSeparator_Registration As Text:
                                    Align: ='TextCanvas.Align'.Center
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =
                                    Height: =drpHour_Registration.Height
                                    Text: |-
                                        =":"
                                    Width: =10
                                    X: =drpHour_Registration.X + drpHour_Registration.Width
                                    Y: =drpHour_Registration.Y
                                    ZIndex: =4

                                drpMinute_Registration As Dropdown.pcfdataset:
                                    AccessibleLabel: ="Minutes"
                                    Appearance: ="FilledDarker"
                                    BorderStyle: =""
                                    DefaultSelectedItems: =[Text(Minute(Parent.Default),"00")]
                                    DisplayMode: =Parent.DisplayMode
                                    Height: =28
                                    Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"]
                                    Width: =drpHour_Registration.Width
                                    X: =drpHour_Registration.X + drpHour_Registration.Width + txtSeparator_Registration.Width
                                    Y: =drpHour_Registration.Y + 1
                                    ZIndex: =5

                            "'dtcAppointment End Date_Registration' As typedDataCard.fluentV9DateTimeEditCard":
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="mpa_appointmentenddate"
                                Default: =ThisItem.'Appointment End Date'
                                DisplayMode: =If(varIsMultiDay ,DisplayMode.Edit , DisplayMode.Disabled)
                                DisplayName: =DataSourceInfo([@'Visitor Registrations'],DataSourceInfo.DisplayName,mpa_appointmentenddate)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =70
                                Required: =If(varIsMultiDay ,true , false)
                                Update: =If(Not IsBlank(dteEndDate_Registration.SelectedDate), DateTime(Year(dteEndDate_Registration.SelectedDate), Month(dteEndDate_Registration.SelectedDate), Day(dteEndDate_Registration.SelectedDate), Value(drpHourEnddate_Registration.Selected.Value), Value(drpMinuteEnddate_Registration.Selected.Value), Second(dteEndDate_Registration.SelectedDate)))
                                Width: |-
                                    =//Parent.Width / 3
                                    If(App.ActiveScreen.Size=ScreenSize.Small,Parent.Width, Parent.Width / 3)
                                X: =2
                                Y: =2
                                ZIndex: =1

                                txtToLabel_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =ColorValue(varTheme.neutralForeground1)
                                    Height: =22
                                    Size: =14
                                    Text: ="To"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                "dteEndDate_Registration As 'Date picker'":
                                    AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                                    Appearance: ="FilledDarker"
                                    BasePaletteColor: =
                                    BorderStyle: =""
                                    DisplayMode: =Parent.DisplayMode
                                    FontColor: =
                                    Height: =32
                                    OnChange: |+
                                        =If(
                                            And(DateValue(Self.SelectedDate) <= DateValue(dteStartDate.SelectedDate), !IsBlank(Self.SelectedDate)),
                                            Notify(
                                                "End date should be greater than Start date",
                                                NotificationType.Warning,
                                                3000
                                            );
                                            Reset(Self),
                                            DateValue(Self.SelectedDate) <= DateValue(Now()),
                                            Notify(
                                                "End date should be greater than the current date",
                                                NotificationType.Warning,
                                                3000
                                            );
                                            Reset(Self)
                                        );
                                        UpdateContext({varIsUpdate: true});
                                        
                                    SelectedDate: =Parent.Default
                                    ValidationState: |-
                                        =If(
                                            Or(IsBlank(Parent.Error) ,
                                            And(
                                                varIsMultiDay , dteStartDate.SelectedDate < dteEndDate_Registration.SelectedDate
                                            )
                                            ),
                                            "None",
                                            "Error"
                                        )
                                    Width: =(Parent.Width - 48) / 2
                                    X: =0
                                    Y: =txtToLabel_Registration.Y + txtToLabel_Registration.Height + 4
                                    ZIndex: =2

                                drpHourEnddate_Registration As Dropdown.pcfdataset:
                                    AccessibleLabel: ="Hour"
                                    Appearance: ="FilledDarker"
                                    BorderStyle: =""
                                    DefaultSelectedItems: =[Text(Hour(Parent.Default),"00")]
                                    DisplayMode: =Parent.DisplayMode
                                    Height: =28
                                    Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                                    Width: =dteEndDate_Registration.Width / 2 - 10
                                    X: =dteEndDate_Registration.X + dteEndDate_Registration.Width + 10
                                    Y: =dteEndDate_Registration.Y + 1
                                    ZIndex: =3

                                txtAppointmentEnddateSeperator_Registration As Text:
                                    Align: ='TextCanvas.Align'.Center
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =
                                    Height: =drpHourEnddate_Registration.Height
                                    Text: |-
                                        =":"
                                    Width: =10
                                    X: =drpHourEnddate_Registration.X + drpHourEnddate_Registration.Width
                                    Y: =drpHourEnddate_Registration.Y
                                    ZIndex: =4

                                drpMinuteEnddate_Registration As Dropdown.pcfdataset:
                                    AccessibleLabel: ="Minutes"
                                    Appearance: ="FilledDarker"
                                    BorderStyle: =""
                                    DefaultSelectedItems: =[Text(Minute(Parent.Default),"00")]
                                    DisplayMode: =Parent.DisplayMode
                                    Height: =28
                                    Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"]
                                    Width: =drpHourEnddate_Registration.Width
                                    X: =drpHourEnddate_Registration.X + drpHourEnddate_Registration.Width + txtAppointmentEnddateSeperator_Registration.Width
                                    Y: =drpHourEnddate_Registration.Y + 1
                                    ZIndex: =5

                            dtcComment_Registration As typedDataCard.fluentV9TextualMultiLineEditCard:
                                BorderColor: =App.Theme.Colors.Darker40
                                BorderStyle: =BorderStyle.Solid
                                DataField: ="mpa_comment"
                                Default: =ThisItem.Comment
                                DisplayMode: =Parent.DisplayMode
                                DisplayName: =DataSourceInfo([@'Visitor Registrations'],DataSourceInfo.DisplayName,mpa_comment)
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =166
                                Required: =false
                                Update: =txiComment_Registration.Value
                                Width: |-
                                    =//Parent.Width / 3 * 2
                                    If(App.ActiveScreen.Size=ScreenSize.Small,Parent.Width, (Parent.Width / 3*2))
                                X: =0
                                Y: =3
                                ZIndex: =1

                                txtCommentsLabel_Registration As Text:
                                    BorderStyle: =""
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =ColorValue(varTheme.neutralForeground1)
                                    Height: =22
                                    Size: =14
                                    Text: ="Additional comments (optional)"
                                    Weight: ='TextCanvas.Weight'.Regular
                                    Width: =Parent.Width - 48
                                    Wrap: =false
                                    X: =0
                                    Y: =10
                                    ZIndex: =1

                                "txiComment_Registration As 'Text input'":
                                    AccessibleLabel: =Parent.DisplayName
                                    Appearance: ="FilledDarker"
                                    BasePaletteColor: =
                                    BorderStyle: =""
                                    DisplayMode: =Parent.DisplayMode
                                    FontColor: =
                                    FontWeight: =FontWeight.Normal
                                    Height: =144
                                    MaxLength: |
                                        =DataSourceInfo([@'Visitor Registrations'],DataSourceInfo.MaxLength,mpa_comment)
                                    Mode: ='TextInputCanvas.Mode'.Multiline
                                    OnChange: |-
                                        =UpdateContext({varIsUpdate: true});
                                    Placeholder: ="Enter text"
                                    Required: =Parent.Required
                                    TriggerOutput: ="FocusOut"
                                    ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                    Value: =Parent.Default
                                    Width: =Parent.Width - 48
                                    X: =0
                                    Y: =txtCommentsLabel_Registration.Y + txtCommentsLabel_Registration.Height + 4
                                    ZIndex: =2

        conButton_Registration As groupContainer.horizontalAutoLayoutContainer:
            DropShadow: =DropShadow.Semilight
            Fill: =ColorValue(varTheme.neutralBackground1)
            FillPortions: =0
            Height: =50
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutGap: =8
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =8
            PaddingLeft: =100
            PaddingRight: =100
            PaddingTop: =8
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            Width: =Parent.Width
            Y: =Parent.Height - Self.Height
            ZIndex: =2

            btnSubmit_Registration As Button:
                AccessibleLabel: ="Submit"
                Align: =""
                BasePaletteColor: =
                BorderStyle: =""
                DisplayMode: |-
                    =If(
                        Or(
                            frmVisitorInformation_Registration.DisplayMode = DisplayMode.View,
                            IsBlank(txiFirstName_Registration.Value),
                            IsBlank(txiLastName_Registration.Value),
                            IsBlank(txiEmail_Registration.Value),
                            IsBlank(cmbVisitType_Registration.Selected),
                            IsEmpty(cmbVisitType_Registration.SelectedItems),
                            IsBlank(cmbLocation_Registration.Selected),
                            IsEmpty(cmbLocation_Registration.SelectedItems),
                            IsBlank(cmbHost_Registration.Selected),
                            IsEmpty(cmbHost_Registration.SelectedItems),
                            IsBlank(dteStartDate.SelectedDate),
                            varBlankCompany,
                            varBlankEmail,
                            varBlankFN,
                            varBlankLN
                        ),
                        DisplayMode.View,
                        //Check if visitor type is Customer or Vendor
                        If(
                            (cmbVisitType_Registration.Selected.Value = 'Visitor Type'.Customer || cmbVisitType_Registration.Selected.Value = 'Visitor Type'.Vendor) && Or(
                                frmVisitorInformation_Registration.DisplayMode = DisplayMode.View,
                                IsBlank(txiFirstName_Registration.Value),
                                IsBlank(txiLastName_Registration.Value),
                                IsBlank(txiEmail_Registration.Value),
                                IsBlank(cmbVisitType_Registration.Selected),
                                IsEmpty(cmbVisitType_Registration.SelectedItems),
                                IsBlank(cmbLocation_Registration.Selected),
                                IsEmpty(cmbLocation_Registration.SelectedItems),
                                IsBlank(cmbHost_Registration.Selected),
                                IsEmpty(cmbHost_Registration.SelectedItems),
                                IsBlank(dteStartDate.SelectedDate),
                                IsBlank(txiCompanyName_Registration.Value)
                            ),
                            DisplayMode.View,
                            //Check if multiday
                            If(
                                (togMultiVisit_Registration.Checked = true && Or(
                                    frmVisitorInformation_Registration.DisplayMode = DisplayMode.View,
                                    IsBlank(txiFirstName_Registration.Value),
                                    IsBlank(txiLastName_Registration.Value),
                                    IsBlank(txiEmail_Registration.Value),
                                    IsBlank(cmbVisitType_Registration.Selected),
                                    IsEmpty(cmbVisitType_Registration.SelectedItems),
                                    IsBlank(cmbLocation_Registration.Selected),
                                    IsEmpty(cmbLocation_Registration.SelectedItems),
                                    IsBlank(cmbHost_Registration.Selected),
                                    IsEmpty(cmbHost_Registration.SelectedItems),
                                    IsBlank(dteStartDate.SelectedDate),
                                    IsBlank(dteEndDate_Registration.SelectedDate)
                                )),
                                DisplayMode.View,
                                DisplayMode.Edit
                            )
                        )
                    )
                Font: =""
                FontColor: =
                FontItalic: =
                FontSize: =0
                FontWeight: =""
                Height: =32
                Icon: =""
                IconRotation: =0
                IconStyle: ="Outline"
                Layout: ="Icon before"
                LayoutMinHeight: =32
                LayoutMinWidth: =96
                OnSelect: |-
                    =If(IsBlank(Trim(txiFirstName_Registration.Value)) || IsBlank(Trim(txiLastName_Registration.Value)) || IsBlank(Trim(txiEmail_Registration.Value)),
                    
                    Notify("Please fill out required fields.",NotificationType.Warning, 3000);,
                    
                    If(And(varIsMultiDay ,DateValue(dteStartDate.SelectedDate) >= DateValue(dteEndDate_Registration.SelectedDate) , !IsBlank(dteEndDate_Registration.SelectedDate )) ,
                    Notify("Startdate should be greater than Enddate"); ,
                    
                    IfError(
                        SubmitForm(frmVisitorInformation_Registration);
                        Set(
                            varVisitor,
                            frmVisitorInformation_Registration.LastSubmit
                        );
                        SubmitForm(frmVisitType_Registration);
                        ,
                        Notify("Please fill out the highlighted fields."  , NotificationType.Error , 3000);
                        false; //break
                        , //3rd if error
                        Set(
                            varVisitDetails,
                            frmVisitType_Registration.LastSubmit
                        );
                        Patch(
                            'Visitor Registrations',
                            LookUp(
                                'Visitor Registrations',
                                'Visitor Registration' = varVisitDetails.'Visitor Registration'
                            ),
                            {
                                Visitor: varVisitor,
                                'Status Reason': 'Status Reason (Visitor Registrations)'.Scheduled,
                                'Host Email': LookUp('Microsoft Entra IDs' , Id = varVisitDetails.'Host Id'.Id).Mail,
                                 Hostname: LookUp('Microsoft Entra IDs' , Id = varVisitDetails.'Host Id'.Id).'Display Name',
                                'Pin Code': If(varFormProcess = FormMode.Edit , varSelectedVisitor.'Pin Code' , RandBetween( //random of 6 digit number for pincode
                                    000000,
                                    999999
                                ))
                            }
                        );
                    
                        If(!varIsMultiDay, Patch(
                            'Visitor Registrations',
                            LookUp(
                                'Visitor Registrations',
                                'Visitor Registration' = varVisitDetails.'Visitor Registration'
                            ),
                            {
                                'Appointment End Date':Blank()
                            }
                        ));
                        ,
                        Notify("Error saving visitor :" & FirstError.Message , NotificationType.Error , 3000);
                        false;,
                        //Patch the Company Name
                        Patch(Contacts , LookUp(Contacts , Contact = varVisitor.Contact) , {Company:txiCompanyName_Registration.Value });
                        ,
                        Notify("Error saving visitor :" & FirstError.Message , NotificationType.Error , 3000);
                        false;, 
                        true;
                        Navigate('Success Page' , Transition.None , {varHeader : If(varFormProcess = FormMode.Edit ,"Registration updated","Registration created"  ), varMessage : "The registration for the visit of " &  Concatenate(varVisitor.'First Name' , " " , varVisitor.'Last Name') &  " has been " & If(varFormProcess = FormMode.Edit , "updated!" ,"created!" ), varButton : "Return to Visitor registrations"}); 
                    );
                    );
                    )
                Text: =If(varFormProcess = FormMode.New , "Submit" , "Update registration")
                VerticalAlign: =""
                Width: =If(varFormProcess = FormMode.New , 75 , 155)
                X: =0
                Y: =0
                ZIndex: =1

            btnDiscard_Registration As Button:
                AccessibleLabel: ="Cancel registration"
                Align: =""
                Appearance: ='ButtonCanvas.Appearance'.Secondary
                BasePaletteColor: =
                BorderStyle: =""
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =
                FontSize: =0
                FontWeight: =""
                Height: =32
                Icon: =""
                IconRotation: =0
                IconStyle: ="Outline"
                Layout: ="Icon before"
                LayoutMinHeight: =32
                LayoutMinWidth: =96
                OnSelect: |-
                    =If(
                        varIsUpdate, 
                        Navigate('Confirmation Page',ScreenTransition.None,{varHeader:"Discard changes",varMessage:"Are you sure you want to discard changes?" , varUpdated : varIsUpdate})    ,
                        Back()
                    );
                Text: ="Discard" 
                VerticalAlign: =""
                Width: =70 
                X: =0
                Y: =0
                ZIndex: =2

    shpHeaderLine_Registration As rectangle:
        AccessibleLabel: =
        BorderColor: =App.Theme.Colors.Primary
        DisabledFill: =ColorValue(varTheme.neutralBackgroundDisabled)
        Fill: =App.Theme.Colors.Primary
        FocusedBorderColor: =ColorValue(varTheme.info)
        Height: =2
        HoverFill: =App.Theme.Colors.Darker20
        PressedFill: =App.Theme.Colors.Primary
        Width: =Parent.Width
        Y: =conBack_Registration.Height
        ZIndex: =2

    conBack_Registration As groupContainer.verticalAutoLayoutContainer:
        Height: =compHeader_Registration.HeaderHeight
        LayoutDirection: =LayoutDirection.Vertical
        LayoutJustifyContent: =LayoutJustifyContent.Center
        LayoutMode: =LayoutMode.Auto
        Width: =Parent.Width
        ZIndex: =3

        con_Header_Registration As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: =compHeader_Registration.HeaderHeight
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutJustifyContent: =LayoutJustifyContent.Center
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =20
            PaddingLeft: =20
            PaddingRight: =20
            PaddingTop: =20
            Width: =Parent.Width
            ZIndex: =2

            ico_Back_Registration As icon.ChevronLeft:
                AccessibleLabel: ="Back"
                BorderColor: =App.Theme.Colors.Darker40
                Color: =App.Theme.Colors.Darker30
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(244, 244, 244, 1)
                Height: =Parent.Height - Parent.PaddingTop
                Icon: =Icon.ChevronLeft
                OnSelect: |
                    =Back();
                TabIndex: =0
                Width: =Parent.Width * .04
                ZIndex: =1

            compHeader_Registration As compHeaderCompound:
                HeaderHeight: =49
                HeaderWidth: =Parent.Width - ico_Back_Registration.Width
                Height: =compHeader_Registration.HeaderHeight
                LayoutMinHeight: =640
                LayoutMinWidth: =640
                NavigateMenu: ='Landing Page'
                Width: =compHeader_Registration.HeaderWidth
                ZIndex: =2

