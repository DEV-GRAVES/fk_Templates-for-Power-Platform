"'Landing Page' As screen":
    Fill: =Color.White
    LoadingSpinnerColor: =App.Theme.Colors.Primary
    OnVisible: |-
        =Reset(con_Email_LandingScreen);
        Reset(con_PIN_LandingScreen) 

    conMain_LandingPage As groupContainer.horizontalAutoLayoutContainer:
        Fill: =ColorValue(varTheme.neutralBackground2)
        Height: =Parent.Height - compHeaderCompound_LandingPage.HeaderHeight
        LayoutJustifyContent: =LayoutJustifyContent.Center
        LayoutMode: =LayoutMode.Auto
        PaddingBottom: =Self.PaddingTop
        PaddingLeft: =80
        PaddingRight: =Self.PaddingLeft
        PaddingTop: =32
        Width: =Parent.Width
        Y: =compHeaderCompound_LandingPage.Height + 2
        ZIndex: =1

        conSubMain_LandingPage As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            DropShadow: =DropShadow.Semilight
            Fill: =ColorValue(varTheme.backgroundFill)
            FillPortions: =0
            Height: =Parent.Height - Parent.PaddingTop - Parent.PaddingBottom
            LayoutJustifyContent: =LayoutJustifyContent.Center
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =1100
            Y: =compHeaderCompound_LandingPage.Height
            ZIndex: =1

            conLandingPageDetails As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                Height: =Parent.Height - Parent.PaddingTop - Parent.PaddingBottom
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =5
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =Self.PaddingTop
                PaddingLeft: =80
                PaddingRight: =Self.PaddingLeft
                PaddingTop: =Parent.Height / 6
                Width: =Parent.Width
                Y: =compHeaderCompound_LandingPage.Height
                ZIndex: =1

                txt_Title_LandingScreen As Text:
                    AutoHeight: =false
                    BorderColor: =""
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =varThemeFont.H3.italic
                    Height: =varDesktopFonts.H1.size*2
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Size: =varThemeFont.H1.size
                    Text: ="Visitor check-in"
                    VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                    Weight: =varThemeFont.H3.weightBold
                    Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                    Wrap: =true
                    X: =0
                    Y: =0
                    ZIndex: =1

                txt_SubMessage_LandingScreen As Text:
                    AutoHeight: =false
                    BorderColor: =""
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =varThemeFont.H3.italic
                    Height: =Parent.Height * .2
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Size: =
                    Text: ="Enter the email that you used for the registration, and the six-digit personal pin sent to your email."
                    VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                    Weight: =varThemeFont.H3.weight
                    Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                    Wrap: =true
                    X: =0
                    Y: =0
                    ZIndex: =2

                txt_EmailLabel_LandingScreen As Text:
                    AutoHeight: =false
                    BorderColor: =""
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =varThemeFont.H3.italic
                    Height: =Self.Size * 1.5
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Size: =
                    Text: ="Email"
                    VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                    Weight: =varThemeFont.H3.weight
                    Width: =200
                    X: =0
                    Y: =0
                    ZIndex: =3

                "con_Email_LandingScreen As 'Text input'":
                    AccessibleLabel: ="Email address"
                    Appearance: ="FilledDarker"
                    BasePaletteColor: =
                    BorderColor: =""
                    BorderStyle: =""
                    DisabledBorderColor: =""
                    DisplayMode: =DisplayMode.Edit
                    FocusedBorderColor: =""
                    Font: =""
                    FontColor: =
                    FontItalic: =
                    FontSize: =0
                    FontWeight: =""
                    Height: =32
                    HoverBorderColor: =""
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    Mode: ='TextInputCanvas.Mode'.SingleLine
                    Placeholder: ="Enter email address"
                    PressedBorderColor: =""
                    Type: ='TextInputCanvas.Type'.Text
                    ValidationState: =varCheckEmail
                    Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =4

                txt_PINLabel_LandingScreen As Text:
                    AutoHeight: =false
                    BorderColor: =""
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =varThemeFont.H3.italic
                    Height: =Self.Size * 1.5
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Size: =
                    Text: ="PIN"
                    VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                    Weight: =varThemeFont.H3.weight
                    Width: =200
                    X: =0
                    Y: =0
                    ZIndex: =5

                "con_PIN_LandingScreen As 'Text input'":
                    AccessibleLabel: ="Pin"
                    Appearance: ="FilledDarker"
                    BasePaletteColor: =
                    BorderColor: =""
                    BorderStyle: =""
                    DisabledBorderColor: =""
                    DisplayMode: =DisplayMode.Edit
                    FocusedBorderColor: =""
                    Font: =""
                    FontColor: =
                    FontItalic: =
                    FontSize: =0
                    FontWeight: =""
                    Height: =32
                    HoverBorderColor: =""
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    MaxLength: =6
                    Mode: ='TextInputCanvas.Mode'.SingleLine
                    OnChange: =Set(varCheckPin,If(IsMatch(Self.Value,"([A-Za-z]+[0-9]|[0-9]+[A-Za-z])[A-Za-z0-9]*")||IsMatch(Self.Value,"([A-Za-z]|[A-Za-z])[A-Za-z]*"),"Error","None"));
                    Placeholder: ="Enter PIN"
                    PressedBorderColor: =""
                    Required: =true
                    Type: ='TextInputCanvas.Type'.Password
                    ValidationState: =varCheckPin
                    Width: =320
                    X: =0
                    Y: =0
                    ZIndex: =6

                con_Spacer_LandingScreen As groupContainer.verticalAutoLayoutContainer:
                    Fill: =ColorValue(varTheme.backgroundFill)
                    FillPortions: =0
                    Height: =20
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutJustifyContent: =LayoutJustifyContent.Center
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =80
                    Width: =Parent.Width
                    Y: =
                    ZIndex: =7

                btn_CheckIn_LandingScreen As Button:
                    AccessibleLabel: ="Check in"
                    Align: =""
                    BasePaletteColor: =
                    BorderColor: =""
                    BorderStyle: =""
                    DisabledBorderColor: =""
                    DisplayMode: =DisplayMode.Edit
                    FocusedBorderColor: =""
                    Font: =""
                    FontColor: =
                    FontItalic: =
                    FontSize: =0
                    FontWeight: =""
                    Height: =32
                    HoverBorderColor: =""
                    Icon: =""
                    IconRotation: =0
                    IconStyle: ="Outline"
                    Layout: ="Icon before"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |-
                        =Set(
                            varCheckEmail,
                            If(
                                IsBlank(con_Email_LandingScreen.Value),
                                "Error",
                                "None"
                            )
                        );
                        Set(
                            varCheckPin,
                            If(
                                IsBlank(con_PIN_LandingScreen.Value),
                                "Error",
                                "None"
                            )
                        );
                        If(
                            IsMatch(
                                con_PIN_LandingScreen.Value,
                                "([A-Za-z]+[0-9]|[0-9]+[A-Za-z])[A-Za-z0-9]*"
                            ) || IsMatch(
                                con_PIN_LandingScreen.Value,
                                "([A-Za-z]|[A-Za-z])[A-Za-z]*"
                            ),
                            Notify(
                                "PIN must be numbers only",
                                NotificationType.Error,
                                2000
                            );
                            Set(
                                varCheckPin,
                                If(
                                    IsBlank(con_PIN_LandingScreen.Value) || IsMatch(
                                        con_PIN_LandingScreen.Value,
                                        "([A-Za-z]+[0-9]|[0-9]+[A-Za-z])[A-Za-z0-9]*"
                                    ) || IsMatch(
                                        con_PIN_LandingScreen.Value,
                                        "([A-Za-z]|[A-Za-z])[A-Za-z]*"
                                    ),
                                    "Error",
                                    "None"
                                )
                            ),
                            Refresh(Contacts);
                            Refresh('Visitor Registrations');
                            Set(
                                varSelectedVisitor,
                                First(
                                    Filter(
                                        'Visitor Registrations',
                                        'Pin Code' = Value(con_PIN_LandingScreen.Value) && Visitor.Email = con_Email_LandingScreen.Value && Status = 'Status (Visitor Registrations)'.Active
                                    )
                                )
                            );
                            
                        //Check if PIN and Email address exist on the visitor registration table
                        If(
                                IsBlank(con_PIN_LandingScreen.Value) || IsBlank(con_Email_LandingScreen.Value),
                                Notify(
                                    "Please fill out the highlighted fields",
                                    NotificationType.Error,
                                    3000
                                ),
                        //Else Check if visitor is blank
                                If(
                                    IsBlank(varSelectedVisitor),
                                    Notify(
                                        "Email address or PIN code does not match any record/s.",
                                        NotificationType.Error,
                                        3000
                                    ),
                                    If(
                                        !IsBlank(varSelectedVisitor) && varSelectedVisitor.'Status Reason' = 'Status Reason (Visitor Registrations)'.'Checked Out',
                                        Notify(
                                            "Visitor is already checked out. Last checked out: " & varSelectedVisitor.'Check Out End Date',
                                            NotificationType.Information,
                                            3000
                                        ),
                                        //Already checked out
                                        If(
                                            !IsBlank(varSelectedVisitor.'Check Out End Date'),
                                            Notify(
                                                "Visitor is already checked out. Last checked out: " & varSelectedVisitor.'Check Out End Date',
                                                NotificationType.Information,
                                                3000
                                            ),
                                            //Start date is not yet started
                                            If(
                                                varSelectedVisitor.'Appointment Start Date' > Now(),
                                                Notify(
                                                    "Check in time has not yet started. Check in will start at: " & varSelectedVisitor.'Appointment Start Date',
                                                    NotificationType.Information,
                                                    5000
                                                ),
                                                Navigate('Check In Details Screen')
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    PressedBorderColor: =""
                    Text: ="Proceed with check in"
                    VerticalAlign: =""
                    Width: =Len(Self.Text) * 9
                    X: =0
                    Y: =0
                    ZIndex: =8

            img_WelcomePhoto_LandingScreen As image:
                BorderColor: =App.Theme.Colors.Darker40
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                FillPortions: =1
                Height: =Parent.Height
                Image: =img_visitor_check_in_hero
                ImagePosition: =ImagePosition.Fill
                Width: =Parent.Width
                ZIndex: =3

    compHeaderCompound_LandingPage As compHeaderCompound:
        HeaderHeight: =53
        HeaderWidth: =Parent.Width
        Height: =compHeaderCompound_LandingPage.HeaderHeight
        IsMenuScreen: =true
        Width: =compHeaderCompound_LandingPage.HeaderWidth
        ZIndex: =2

