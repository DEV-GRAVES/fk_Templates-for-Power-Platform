{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "mpa_aptbk_dataverseconnection"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_commondataserviceforapps": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "mpa_aptbk_dataverseconnection"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "a8e42feb-e090-4327-86d0-5b7ee7e941b0"
          },
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "UserID",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your UserID",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "text"
              ]
            }
          }
        }
      },
      "actions": {
        "Try": {
          "actions": {
            "Get_User_details": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "8fab3eeb-a966-408d-8c21-e7f6c92555dd"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps_1",
                  "operationId": "GetItem",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "usersettingscollection",
                  "recordId": "@triggerBody()['text']"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              }
            },
            "Set_a_user_Timezone_Code": {
              "runAfter": {
                "Get_User_details": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "4aee1476-f35d-453f-b1c8-c856aad90b4d"
              },
              "type": "Compose",
              "inputs": "@outputs('Get_User_details')?['body/timezonecode']"
            },
            "List_Time_Zone_Definitions": {
              "runAfter": {
                "Set_a_user_Timezone_Code": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9df6d4a2-d62b-4aee-bdbb-82d99596cd0d"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps_1",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "timezonedefinitions",
                  "$filter": "timezonecode eq @{outputs('Set_a_user_Timezone_Code')}"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              },
              "description": "View time zone definitions"
            },
            "Time_Zone_Name": {
              "runAfter": {
                "List_Time_Zone_Definitions": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "ee9a45ca-c9e2-4358-9e91-e9296f745a05"
              },
              "type": "Compose",
              "inputs": "@first(body('List_Time_Zone_Definitions')?['value'])?['standardname']"
            },
            "Respond_to_a_PowerApp_or_flow": {
              "runAfter": {
                "Time_Zone_Name": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "b82e2ba4-4023-44d0-99f2-6bf6fc6f02e0"
              },
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "statusCode": 200,
                "body": {
                  "time_zone_name": "@{outputs('Time_Zone_Name')}"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "time_zone_name": {
                      "title": "Time Zone Name",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "c0fc3265-8e85-4f78-ab3b-3191100db796"
          },
          "type": "Scope",
          "description": "To handle an unexpected error."
        },
        "Catch": {
          "actions": {
            "Filter_Data": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "a5f498e6-fe56-427b-9845-1312aa952e36"
              },
              "type": "Query",
              "inputs": {
                "from": "@result('Try')",
                "where": "@or(equals(item()?['Status'], 'Failed'), equals(item()?['Status'], 'TimedOut'))"
              },
              "description": "Filter data by failed and timeout."
            },
            "Create_entry_in_IT_Error": {
              "runAfter": {
                "ErrorReturn": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "d7b067c6-fe34-4a13-8c87-d22bc89f1a0a"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "CreateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "mpa_iterrors",
                  "item/mpa_name": "@outputs('ErrorReturn')?['body'][0]['FlowName']",
                  "item/mpa_action": "@outputs('ErrorReturn')?['body'][0]['Step']",
                  "item/mpa_errormessage": "@outputs('ErrorReturn')?['body'][0]['InnerErrorMessage']",
                  "item/mpa_sourcetype": 865420001,
                  "item/mpa_workflowinstanceurl": "@outputs('ErrorReturn')?['body'][0]['URL']"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              },
              "description": "Add new record in IT error table."
            },
            "ErrorReturn": {
              "runAfter": {
                "Filter_Data": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "08fe3aa3-bb2e-4039-bf63-e78ad0216a2f"
              },
              "type": "Select",
              "inputs": {
                "from": "@body('Filter_Data')",
                "select": {
                  "Step": "@item()?['name']",
                  "Status": "@item()?['Status']",
                  "InnerErrorMessage": "@{item()?['error']?['message']} \n@{item()?['outputs']?['body']?['error']?['message']}",
                  "Input": "@triggerOutputs()?['body/mpa_aptbk_appointmentbookingname']",
                  "FlowName": "@workflow()?['tags']['flowDisplayName']",
                  "URL": "@concat('https://flow.microsoft.com/manage/environments/', workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                }
              },
              "description": "To hold a specific value."
            },
            "Terminate": {
              "runAfter": {
                "Create_entry_in_IT_Error": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "ddf9f509-d2b5-411d-a2be-61808598c00a"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Failed"
              },
              "description": "Terminate and set status to failed."
            }
          },
          "runAfter": {
            "Try": [
              "Failed",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "4a696b4f-65f1-4257-a4c5-9dc2b45116d4"
          },
          "type": "Scope",
          "description": "To catch the specific error and add to IT error table."
        }
      }
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}