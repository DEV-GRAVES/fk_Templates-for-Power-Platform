{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "mpa_aptbk_dataverseconnection"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "d32f3354-d32f-4d07-b223-5a023e0ae585"
          },
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "title": "Email",
                  "type": "string",
                  "format": "email",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter an e-mail address",
                  "x-ms-content-hint": "EMAIL"
                },
                "text_1": {
                  "title": "FirstName",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                },
                "text": {
                  "title": "LastName",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                },
                "text_2": {
                  "title": "BookingID",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "email",
                "text_1",
                "text",
                "text_2"
              ]
            },
            "headersSchema": {
              "x-ms-user-email-encoded": {
                "title": "User email",
                "type": "string",
                "format": "byte",
                "x-ms-dynamically-added": false
              }
            }
          }
        }
      },
      "actions": {
        "Try": {
          "actions": {
            "Check_if_email_address_is_null": {
              "actions": {
                "Add_new_record_in_contact_table": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "084be0f7-d2ad-4632-8a44-f195f3a5b6b1"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps_1",
                      "operationId": "CreateRecord",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "entityName": "contacts",
                      "item/emailaddress1": "@triggerBody()['email']",
                      "item/lastname": "@triggerBody()['text']",
                      "item/firstname": "@triggerBody()['text_1']"
                    },
                    "authentication": {
                      "type": "Raw",
                      "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                    }
                  },
                  "description": "Adding new record in contact table."
                }
              },
              "runAfter": {
                "Filter_contact_by_email_address_from_Office365_User": [
                  "Succeeded"
                ]
              },
              "expression": {
                "equals": [
                  "@length(outputs('Filter_contact_by_email_address_from_Office365_User')?['body/value'])",
                  0
                ]
              },
              "metadata": {
                "operationMetadataId": "407bf714-1054-42e6-ab74-5a783f2a45d7"
              },
              "type": "If",
              "description": "If email address is not available, this step will add new record in contact table."
            },
            "Respond_to_a_PowerApp_or_flow": {
              "runAfter": {
                "Apply_to_each": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "bc929bc0-6b40-4dc1-80fd-74dc1e5f9bbf"
              },
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "statusCode": 200,
                "body": {
                  "requestordata": "@variables('ContactID')"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "requestordata": {
                      "title": "RequestorData",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  }
                }
              }
            },
            "Filter_contact_by_email_address_from_Office365_User": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "9fa92d34-780f-4abf-84da-fa73037687a3"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps_1",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "contacts",
                  "$filter": "emailaddress1 eq '@{triggerBody()['email']}'"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              },
              "description": "Filter record by email address from Office365 User."
            },
            "Display_email_address_from_contact": {
              "runAfter": {
                "Check_if_email_address_is_null": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9aec9f81-bbe8-43c5-ae6c-3c7897309ef1"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps_1",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "contacts",
                  "$filter": "emailaddress1 eq '@{triggerBody()['email']}'"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              },
              "description": "To get specific email address from contact table."
            },
            "Apply_to_each": {
              "foreach": "@outputs('Display_email_address_from_contact')?['body/value']",
              "actions": {
                "Update_Appointment_Booking": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "60e73622-b496-4d15-9366-eadc271d4276"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps_1",
                      "operationId": "UpdateRecord",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "entityName": "mpa_aptbk_appointmentbookings",
                      "recordId": "@triggerBody()['text_2']",
                      "item/mpa_aptbk_requestor@odata.bind": "/contacts(@{items('Apply_to_each')?['contactid']})"
                    },
                    "authentication": {
                      "type": "Raw",
                      "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                    }
                  },
                  "description": "Modified requestor field based on new added contact."
                },
                "Set_ContactID": {
                  "runAfter": {
                    "Update_Appointment_Booking": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "ada8de5a-1d28-4443-b195-86044d80477c"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "ContactID",
                    "value": "@items('Apply_to_each')?['contactid']"
                  },
                  "description": "Hold contact id."
                }
              },
              "runAfter": {
                "Display_email_address_from_contact": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "f2a015b2-0f25-4bb8-af4f-77a50bbcbc02"
              },
              "type": "Foreach"
            }
          },
          "runAfter": {
            "Initialize_ContactID": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "e910ee0c-36e1-4a92-8ccc-c64b8d66cc98"
          },
          "type": "Scope",
          "description": "To handle an unexpected error."
        },
        "Initialize_ContactID": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "eddcb7df-669e-4ecd-b444-9f84fc503e84"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ContactID",
                "type": "string"
              }
            ]
          },
          "description": "To hold contact ID."
        },
        "Catch": {
          "actions": {
            "Filter_Data": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "a5f498e6-fe56-427b-9845-1312aa952e36"
              },
              "type": "Query",
              "inputs": {
                "from": "@result('Try')",
                "where": "@or(equals(item()?['Status'], 'Failed'), equals(item()?['Status'], 'TimedOut'))"
              },
              "description": "Filter data by failed and timeout."
            },
            "Create_entry_in_IT_Error": {
              "runAfter": {
                "ErrorReturn": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "d7b067c6-fe34-4a13-8c87-d22bc89f1a0a"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps_1",
                  "operationId": "CreateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "mpa_iterrors",
                  "item/mpa_name": "@outputs('ErrorReturn')?['body'][0]['FlowName']",
                  "item/mpa_action": "@outputs('ErrorReturn')?['body'][0]['Step']",
                  "item/mpa_errormessage": "@outputs('ErrorReturn')?['body'][0]['InnerErrorMessage']",
                  "item/mpa_sourcetype": 865420001,
                  "item/mpa_workflowinstanceurl": "@outputs('ErrorReturn')?['body'][0]['URL']"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              },
              "description": "Add new record in IT error table."
            },
            "ErrorReturn": {
              "runAfter": {
                "Filter_Data": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "08fe3aa3-bb2e-4039-bf63-e78ad0216a2f"
              },
              "type": "Select",
              "inputs": {
                "from": "@body('Filter_Data')",
                "select": {
                  "Step": "@item()?['name']",
                  "Status": "@item()?['Status']",
                  "InnerErrorMessage": "@{item()?['error']?['message']} \n@{item()?['outputs']?['body']?['error']?['message']}",
                  "Input": "@triggerOutputs()?['body/mpa_aptbk_appointmentbookingname']",
                  "FlowName": "@workflow()?['tags']['flowDisplayName']",
                  "URL": "@concat('https://flow.microsoft.com/manage/environments/', workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                }
              },
              "description": "To hold a specific value."
            },
            "Terminate": {
              "runAfter": {
                "Create_entry_in_IT_Error": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "ddf9f509-d2b5-411d-a2be-61808598c00a"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Failed"
              },
              "description": "Terminate and set status to failed."
            }
          },
          "runAfter": {
            "Try": [
              "Failed",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "4a696b4f-65f1-4257-a4c5-9dc2b45116d4"
          },
          "type": "Scope",
          "description": "To catch the specific error and add to IT error table."
        }
      }
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}