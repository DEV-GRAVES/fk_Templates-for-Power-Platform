LeftNavigation As CanvasComponent:
    Fill: =ColorValue(varThemeColors.backgroundFillDisabled)
    Height: =600
    MenuExpanded: =varExpandMenu
    MenuWidth: |-
        =//Expand or collapse the over component width based upon whether or expansion of the menu is selected or not
        If(
            varExpandMenu,
            LeftNavigation.SetMenuWith,
            icoLeftNavExpandCollapse.X + icoLeftNavExpandCollapse.Width+1
        )
    OnReset: |-
        =Set(
            varExpandMenu,//Variable that drives expanding or collapsing width of the menu
            LeftNavigation.SetExpandMenu
        )
    SetExpandMenu: =true
    SetMenuWith: =228
    Visible: =true
    Width: =LeftNavigation.MenuWidth
    X: =0
    Y: =0
    ZIndex: =6

    galLeftNavMainMenuItems As gallery.variableTemplateHeightGallery:
        AccessibleLabel: |-
            =// Define a variable named "Text" with the value "{value}"
            With(
                {Text: "Menu groups"},
                // Check if a localized text exists for "Text" in the user's preferred language
                If(
                    // If the localized text is blank, return the default text
                    IsBlank(
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text
                        ).'Localized Value'
                    ),
                    Text,
                    // If a localized text is found, return that instead of the default text
                    LookUp(
                        colUserLocalizedStrings,
                        'English Value' = Text
                    ).'Localized Value'
                )
            )
        BorderColor: =ColorValue(varThemeColors.tertiaryGray)
        DelayItemLoading: =true
        FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
        FocusedBorderThickness: =2
        Height: =Parent.Height - icoLeftNavExpandCollapse.Height + 2
        ItemAccessibleLabel: =lblLeftNavGroupTitle.Text
        Items: =colGroupMenu
        Layout: =Layout.Vertical
        OnSelect: =
        TabIndex: =0
        TemplatePadding: =0
        TemplateSize: =36
        Width: =LeftNavigation.MenuWidth-Self.X*2
        X: =Self.FocusedBorderThickness
        Y: =icoLeftNavExpandCollapse.Y+icoLeftNavExpandCollapse.Height
        ZIndex: =1

        galLeftNavSubMenu As gallery.variableTemplateHeightGallery:
            AccessibleLabel: |-
                =// Define a variable named "Text" with the value "{value}"
                With(
                    {Text: "Main items"},
                    // Check if a localized text exists for "Text" in the user's preferred language
                    If(
                        // If the localized text is blank, return the default text
                        IsBlank(
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        ),
                        Text,
                        // If a localized text is found, return that instead of the default text
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text
                        ).'Localized Value'
                    )
                )
            BorderColor: =ColorValue(varThemeColors.tertiaryGray)
            DelayItemLoading: =true
            Fill: =RGBA(0,0,0,0)
            FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
            FocusedBorderThickness: =2
            Height: =CountRows(Self.AllItems) * (Self.TemplateHeight + Self.TemplatePadding)
            ItemAccessibleLabel: =btnLeftNavMenuItem.Text
            Items: =colMenu
            Layout: =Layout.Vertical
            OnSelect: |+
                =//Onselect and it will navigate to designated screen.
                Set(varRescheduleBooking,false);
                Navigate(ThisItem.Screen);
                
                
                
                
                
            ShowScrollbar: =false
            TabIndex: =0
            TemplateFill: |-
                =If(
                    shpLeftNavSelected.Visible,
                    ColorValue(varThemeColors.background),
                    RGBA(
                        0,
                        0,
                        0,
                        0
                    )
                )
            TemplatePadding: =0
            TemplateSize: =36
            Width: =Parent.Width-Self.X*2
            X: =Self.FocusedBorderThickness
            Y: =lblLeftNavGroupTitle.Height
            ZIndex: =1

            imgLeftNavMenuItem As image:
                AccessibleLabel: |-
                    =With(
                        {Text: Text(ThisItem.Label)},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                FocusedBorderThickness: =Value(varThemeColors.focusBorderThickness)
                Height: =24
                Image: |-
                    =If(
                        varThemeColors.name = "light",
                        ThisItem.Icon,
                        ThisItem.IconWhite
                    )
                OnSelect: =Select(Parent)
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Tooltip: =
                Width: =24
                X: =12
                Y: =6
                ZIndex: =1

            shpLeftNavSelected As rectangle:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {
                            Text: "Menu selected"
                        },
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Fill: =ColorValue(varThemeColors.primary)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                FocusedBorderThickness: =Value(varThemeColors.focusBorderThickness)
                Height: =28
                OnSelect: =Select(Parent)
                Tooltip: =Self.AccessibleLabel
                Visible: =If(App.ActiveScreen = ThisItem.Screen,true,false)
                Width: =4
                X: =4
                Y: =4
                ZIndex: =3

            btnLeftNavMenuItem As button:
                Align: =Align.Left
                Color: |-
                    =//Only show the text (menu item) if menu is expanded, otherwise, make it transparent so only the menu icon shows on a collapsed menu
                    If(
                        varExpandMenu,
                        ColorValue(varThemeColors.text),
                        RGBA(
                            0,
                            0,
                            0,
                            0
                        )
                    )
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                FocusedBorderThickness: =Value(varThemeColors.focusBorderThickness)
                Font: =varThemeFont.B1.face
                FontWeight: =varThemeFont.B1.weight
                Height: =Parent.TemplateHeight-Self.Y*2
                HoverColor: =ColorValue(varThemeColors.primary)
                HoverFill: =
                OnSelect: =Select(Parent)
                PaddingLeft: =48
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =varThemeFont.B1.size
                Text: |-
                    =With(
                        {Text:  ThisItem.Label }, //ThisItem.Label
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Tooltip: =Self.Text
                Width: =Parent.TemplateWidth-4
                X: =2
                Y: =2
                ZIndex: =4

        shpLeftNavCollapsedDivider As rectangle:
            AccessibleLabel: |-
                =// Define a variable named "Text" with the value "{value}"
                With(
                    {
                        Text: "Divider"
                    },
                    If(
                        // If the localized text is blank, return the default text
                        IsBlank(
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        ),
                        Text,
                        // If a localized text is found, return that instead of the default text
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text
                        ).'Localized Value'
                    )
                )
            DisplayMode: =DisplayMode.View
            Fill: =ColorValue(varThemeColors.secondaryGray)
            FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
            FocusedBorderThickness: =Value(varThemeColors.focusBorderThickness)
            Height: =1
            Tooltip: =
            Visible: =!varExpandMenu && !IsBlank(ThisItem.Label)
            Width: =Parent.Width
            ZIndex: =2

        lblLeftNavGroupTitle As label:
            Color: =ColorValue(varThemeColors.text)
            FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
            FocusedBorderThickness: =Value(varThemeColors.focusBorderThickness)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: |-
                =If(
                    varExpandMenu,
                    36,
                    0
                )
            OnSelect: =Select(Parent)
            PaddingLeft: =16
            Role: =TextRole.Heading3
            Size: =10.5
            Text: |-
                =With(
                    {Text: Text(ThisItem.Label)},
                    If(
                        // If the localized text is blank, return the default text
                        IsBlank(
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        ),
                        Text,
                        // If a localized text is found, return that instead of the default text
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text
                        ).'Localized Value'
                    )
                )
            Tooltip: =Self.Text
            Visible: =varExpandMenu
            Width: =Parent.Width
            ZIndex: =3

    "icoLeftNavExpandCollapse As icon.'3DPrinting'":
        AccessibleLabel: =Self.Tooltip
        BorderColor: =RGBA(0,0,0,0)
        Color: =ColorValue(varThemeColors.text)
        DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
        DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
        DisabledFill: =RGBA(0,0,0,0)
        Fill: =RGBA(0,0,0,0)
        FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
        FocusedBorderThickness: =Value(varThemeColors.focusBorderThickness)
        Height: =44
        HoverBorderColor: =
        HoverColor: =ColorValue(varThemeColors.primary)
        HoverFill: =RGBA(0,0,0,0)
        Icon: =Icon.Hamburger
        OnSelect: |-
            =//Toggle global variable of whether or not the menu is expanded.
            Set(
                varExpandMenu,
                !varExpandMenu
            )
        PaddingBottom: =10
        PaddingLeft: =12
        PaddingRight: =12
        PaddingTop: =10
        PressedBorderColor: =
        PressedColor: =ColorValue(varThemeColors.primary)
        PressedFill: =RGBA(0,0,0,0)
        TabIndex: =0
        Tooltip: |-
            =With(
                {Text: If(varExpandMenu,"Collapse menu","Expand menu")},
                If(
                    // If the localized text is blank, return the default text
                    IsBlank(
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text
                        ).'Localized Value'
                    ),
                    Text,
                    // If a localized text is found, return that instead of the default text
                    LookUp(
                        colUserLocalizedStrings,
                        'English Value' = Text
                    ).'Localized Value'
                )
            )
        Width: =48
        X: =2
        Y: =1
        ZIndex: =2

