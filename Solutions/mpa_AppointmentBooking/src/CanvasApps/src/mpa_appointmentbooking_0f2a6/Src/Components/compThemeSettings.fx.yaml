compThemeSettings As CanvasComponent:
    BlockWidth: =250
    Fill: =RGBA(0, 0, 0, 0)
    Height: =compThemeSettings.SettingsHeight
    SettingsHeight: |
        =//Responsive Design Conditions
        If('Settings Screen'.Size > ScreenSize.Large,
            210,
            If('Settings Screen'.Size > ScreenSize.Small,
            140,
            115
            )
        )
    SettingsWidth: =1366
    Width: =compThemeSettings.SettingsWidth
    X: =0
    Y: =0
    ZIndex: =3

    conSettingsThemeSelection_Settings As groupContainer.horizontalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutMode: =LayoutMode.Auto
        Width: =Parent.Width
        ZIndex: =1

        conLightTheme_Settings As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =ColorValue(varThemeColors.backgroundFill)
            FillPortions: =0
            Height: =Parent.Height
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            Width: =Parent.Width / 3 - Parent.LayoutGap
            ZIndex: =1

            lblLightTheme_Settings As label:
                Align: =Align.Center
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H3.face
                FontWeight: =varThemeFont.H3.weight
                Height: =Self.Size * 2.5    
                Italic: =varThemeFont.H3.italic
                PaddingBottom: =10
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Role: =TextRole.Heading3
                Size: |-
                    =//Responsive Design Conditions
                    If(App.ActiveScreen.Size  > ScreenSize.Small,
                        varThemeFont.B1.size,
                        varThemeFont.B3.size
                    )
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Light Theme"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                Tooltip: =Self.Text
                VerticalAlign: =VerticalAlign.Top
                Width: =imgLightTheme_Settings.Width
                Y: =Parent.Height - Self.Height
                ZIndex: =1

            imgLightTheme_Settings As image:
                AccessibleLabel: |-
                    =
                    
                    With(
                        {Text: "Light Theme"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                BorderThickness: =If(varThemeColors.name="light", 2,0)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: |-
                    =//Responsive conditions
                    If(App.ActiveScreen.Size  > ScreenSize.Large,
                        130,
                        If(App.ActiveScreen.Size  > ScreenSize.Small,
                        70,
                        50
                        )
                    )
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: =imgSettingsLight
                OnSelect: =Set(varThemeColors, varLightTheme)
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0, 0, 0, 0)
                TabIndex: =0
                Tooltip: =Self.AccessibleLabel
                Width: |-
                    =//Responsive conditions
                    If(App.ActiveScreen.Size  > ScreenSize.Large,
                        130,
                        If(App.ActiveScreen.Size  > ScreenSize.Small,
                        70,
                        50
                        )
                    )
                X: =5
                Y: =Parent.Height *.1
                ZIndex: =2

        contDarkTheme_Settings As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =ColorValue(varThemeColors.backgroundFill)
            FillPortions: =0
            Height: =Parent.Height
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            Width: =Parent.Width / 3 - Parent.LayoutGap
            ZIndex: =2

            lblDarkTheme_Settings As label:
                Align: =Align.Center
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H3.face
                FontWeight: =varThemeFont.H3.weight
                Height: =Self.Size * 2.5    
                Italic: =varThemeFont.H3.italic
                PaddingBottom: =10
                PaddingLeft: =0
                PaddingTop: =0
                Role: =TextRole.Heading3
                Size: |-
                    =
                    If(App.ActiveScreen.Size > ScreenSize.Small,
                        varThemeFont.B1.size,
                        varThemeFont.B3.size
                    )
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Dark Theme"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                Tooltip: =Self.Text
                VerticalAlign: =VerticalAlign.Top
                Width: =imgDarkTheme_Settings.Width
                X: =Parent.Width / 2 - Self.Width / 2
                Y: =Parent.Height - Self.Height
                ZIndex: =1

            imgDarkTheme_Settings As image:
                AccessibleLabel: |-
                    =
                    With(
                        {Text: "Dark Theme"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                BorderThickness: =If(varThemeColors.name="dark", 2,0)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: |-
                    =//Responsive conditions
                    If(App.ActiveScreen.Size > ScreenSize.Large,
                        130,
                        If(App.ActiveScreen.Size > ScreenSize.Small,
                        70,
                        50
                        )
                    )
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: =imgSettingsDark
                OnSelect: =Set(varThemeColors, varDarkTheme)
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0, 0, 0, 0)
                TabIndex: =0
                Tooltip: =Self.AccessibleLabel
                Width: |-
                    =//Responsive conditions
                    If(App.ActiveScreen.Size > ScreenSize.Large,
                        130,
                        If(App.ActiveScreen.Size  > ScreenSize.Small,
                        70,
                        50
                        )
                    )
                X: =Parent.Width / 2 - Self.Width / 2
                Y: =Parent.Height*.1
                ZIndex: =2

        conContrastTheme_Settings As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =ColorValue(varThemeColors.backgroundFill)
            FillPortions: =0
            Height: =Parent.Height
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            Width: =Parent.Width / 3 - Parent.LayoutGap
            ZIndex: =3

            lblContrastTheme_Settings As label:
                Align: =Align.Center
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H3.face
                FontWeight: =varThemeFont.H3.weight
                Height: =Self.Size * 2.5    
                Italic: =varThemeFont.H3.italic
                PaddingBottom: =10
                PaddingLeft: =0
                PaddingTop: =0
                Role: =TextRole.Heading3
                Size: |-
                    =
                    If(App.ActiveScreen.Size > ScreenSize.Small,
                        varThemeFont.B1.size,
                        varThemeFont.B3.size
                    )
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Contrast Theme"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                Tooltip: =Self.Text
                VerticalAlign: =VerticalAlign.Top
                Width: =imgContrastTheme_Settings.Width
                X: =Parent.Width - Self.Width
                Y: =Parent.Height - Self.Height
                ZIndex: =1

            imgContrastTheme_Settings As image:
                AccessibleLabel: |-
                    =With(
                        {Text: "Contrast Theme"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                BorderThickness: =If(varThemeColors.name="contrast", 2,0)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: |-
                    =//Responsive conditions
                    If(App.ActiveScreen.Size > ScreenSize.Large,
                        130,
                        If(App.ActiveScreen.Size > ScreenSize.Small,
                        70,
                        50
                        )
                    )
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: =imgSettingsContrast
                OnSelect: =Set(varThemeColors, varContrastTheme)
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0, 0, 0, 0)
                TabIndex: =0
                Tooltip: =Self.AccessibleLabel
                Width: |-
                    =//Responsive conditions
                    If(App.ActiveScreen.Size > ScreenSize.Large,
                        130,
                        If(App.ActiveScreen.Size > ScreenSize.Small,
                        70,
                        50
                        )
                    )
                X: =Parent.Width - Self.Width -5
                Y: =Parent.Height*.1
                ZIndex: =2

