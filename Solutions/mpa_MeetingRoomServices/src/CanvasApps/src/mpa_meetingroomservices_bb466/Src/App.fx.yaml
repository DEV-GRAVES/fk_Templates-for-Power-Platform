App As appinfo:
    BackEnabled: =true
    Formulas: |
        =//Desktop Fonts
        varDesktopFonts = {
            H1: {
                face: Font.'Segoe UI',
                size: 24,
                weight: FontWeight.Normal,
                weightSemibold: FontWeight.Semibold,
                italic: false
            },
            H2: {
                face: Font.'Segoe UI',
                size: 18,
                weight: FontWeight.Normal,
                weightSemibold: FontWeight.Semibold,
                italic: false
            },
            H3: {
                face: Font.'Segoe UI',
                size: 15,
                weight: FontWeight.Normal,
                weightSemibold: FontWeight.Semibold,
                italic: false
            },
            B1: {
                face: Font.'Segoe UI',
                size: 12,
                weight: FontWeight.Normal,
                weightSemibold: FontWeight.Semibold,
                italic: false
            },
            B2: {
                face: Font.'Segoe UI',
                size: 10,
                weight: FontWeight.Normal,
                weightSemibold: FontWeight.Semibold,
                italic: false
            },
            B3: {
                face: Font.'Segoe UI',
                size: 8,
                weight: FontWeight.Normal,
                weightSemibold: FontWeight.Semibold,
                italic: false
            },
            CTA: {
                face: Font.'Segoe UI',
                size: 12,
                weight: FontWeight.Normal,
                weightSemibold: FontWeight.Semibold,
                italic: false
            }
        };
        //Light Theme Properties
        varLightTheme = {
            name: "light",
            background: "#FAF9F8",
            backgroundFill: "#FFFFFF",
            backgroundFillDisabled: "#F3F2F1",
            text: "#323130",
            altText: "#FFFFFF",
            disabledText: "#A19F9D",
            primary: "#0078D4",
            secondary: "#EFF6FC",
            tertiary: "#0078D4",
            primaryGray: "#8A8886",
            secondaryGray: "#EDEBE9",
            tertiaryGray: "#605E5C",
            confirmation: "#107C10",
            warning: "#FFB900",
            error: "#D13438",
            info: "#006FC8",
            iconimg: 'Microsoft Logo',
            focusBorder: "#000000",
            focusBorderThickness: 2
        };
        //Dark Theme
        varDarkTheme = {
            name: "dark",
            background: "#201F1E",
            backgroundFill: "#000000",
            backgroundFillDisabled: "#323130",
            text: "#FAF9F8",
            altText: "#000000",
            disabledText: "#A19F90",
            primary: "#0078D4",
            secondary: "#004578",
            tertiary: "#47ADFF",
            primaryGray: "#605E5C",
            secondaryGray: "#323130",
            tertiaryGray: "#E1DFDD",
            confirmation: "#00CC6A",
            warning: "#FDE300",
            error: "#FF4343",
            info: "#3B83F7",
            iconimg: 'Microsoft Logo',
            focusBorder: "#FFFFFF",
            focusBorderThickness: 2
        };
        //Light Theme
        varContrastTheme = {
            name: "contrast",
            background: "#000000",
            backgroundFill: "#000000",
            backgroundFillDisabled: "#6B6B6B",
            text: "#FFFFFF",
            altText: "#000000",
            disabledText: "#FFFFFF",
            primary: "#1AEBFF",
            secondary: "#000000",
            tertiary: "#FFFF00",
            primaryGray: "#FFFFFF",
            secondaryGray: "#6B6B6B",
            tertiaryGray: "#FFFFFF",
            confirmation: "#3FF23F",
            warning: "#FFFF00",
            error: "#FF4343",
            info: "#FF00E5",
            iconimg: 'Microsoft Logo',
            focusBorder: "#FFFFFF",
            focusBorderThickness: 2
        };
            //global container, component and general control properties
        varControlLayoutProperties = {
            button: {
                width: 150,
                paddingTop: 5,
                paddingRight: 5,
                paddingBottom: 5,
                paddingLeft: 5,
                borderRadius: 6
            },
            buttonLink: {
                width: 100,
                paddingTop: 0,
                paddingRight: 0,
                paddingBottom: 5,
                paddingLeft: 5,
                borderRadius: 6
            },
            textInput: {
                paddingTop: 5,
                paddingRight: 5,
                paddingBottom: 5,
                paddingLeft: 12
            },
            dropDown: {
                paddingTop: 5,
                paddingRight: 5,
                paddingBottom: 5,
                paddingLeft: 12
            },
            comboBox: {
                paddingTop: 5,
                paddingRight: 5,
                paddingBottom: 5,
                paddingLeft: 12
            },
            datePicker: {
                paddingTop: 5,
                paddingRight: 5,
                paddingBottom: 5,
                paddingLeft: 12
            },
            radioButton: {
                paddingTop: 5,
                paddingRight: 5,
                paddingBottom: 5,
                paddingLeft: 12
            },
            label: {
                paddingTop: 0,
                paddingRight: 5,
                paddingBottom: 0,
                paddingLeft: 0
            },
            toggle: {
                width: 100,
                height: 30
            },
            navigation: {
                expandedWidth: 228,
                collapsedWidth: 56
            },
            componentGap: {
                extraSmall: 5,
                small: 10,
                medium: 20,
                semiLarge: 30,
                large: 40
            }
        };
    MinScreenHeight: =480
    OnStart: |
        =
        Concurrent(
            Set(
                varThemeFont,
                varDesktopFonts
            ),
            Set(
                varThemeColors,
                varLightTheme
            ),
            //Gather calendar info
            If(
                IsBlank(_userDomain),
                Set(
                    _userDomain,
                    Right(
                        User().Email,
                        Len(User().Email) - Find(
                            "@",
                            User().Email
                        )
                    )
                );
            ),
            //Left Navigation expand variable
            Set(
                varIsNavExpanded,
                true
            ),
            //Left Navigation Items
            ClearCollect(
                colNavigationItems,
                {
                    screen: 'Landing Screen',
                    label: "Upcoming meetings",
                    icon: Icon.CalendarBlank
                },
                {
                    screen: 'My Requests Screen',
                    label: "My requests",
                    icon: Icon.DocumentWithContent
                },
                {
                    screen: 'Feedback and Issue Screen',
                    label: "Feedback and issues",
                    icon: Icon.LikeDislike
                },
                {
                    screen: 'Settings Screen',
                    label: "Settings",
                    icon: Icon.Settings
                }
            ),
            Set(
                varCurrentUser,
                LookUp(
                    Users,
                    'Primary Email' = User().Email
                )
            )
        );
    Theme: =PowerAppsTheme

    Host As hostControl.DefaultHostControlVariant:
        OnCancel: =false
        OnEdit: =false
        OnNew: =false
        OnSave: =false
        OnView: =false

