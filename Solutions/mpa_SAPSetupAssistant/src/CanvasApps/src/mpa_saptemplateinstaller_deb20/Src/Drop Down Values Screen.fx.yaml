"'Drop Down Values Screen' As screen":
    LoadingSpinner: =LoadingSpinner.Data
    OnVisible: |-
        =Set(
            varCurrentActivityStepOrder,
            1
        );
        Set(
            varAppActiveScreen,
            App.ActiveScreen
        );
        Set(
            varDisableControls,
            false
        );
        UpdateContext({_checkBatchStatus: false});
        Reset(CheckboxCanvas5_24);
        Reset(CheckboxCanvas3_13);
        Reset(CheckboxCanvas5_23);
        Reset(CheckboxCanvas5_25);
        Reset(DataCardValue7_3);
        With(
            {
                _batchProcessStepValueId: GUID(
                    LookUp(
                        'Activity Step Values',
                        'Control Name' = "InstallBatchProcessIdDropDowns"
                    ).Value
                )
            },
            UpdateContext(
                {
                    _batchProcess: LookUp(
                        'Install Template Async Processes',
                        'Install Template Async Process' = _batchProcessStepValueId
                    )
                }
            )
        );
        ClearCollect(
            colConnections,
            AddColumns(
                PowerAppsforMakers.GetConnections(
                    {
                        'api-version': BAPAPIVersion,
                        '$filter': "environment eq '" & varCurrentEnvironment.name & "'"
                    }
                ).value As temp,
                _displayName,
                temp.properties.displayName
            )
        )

    Container6_8 As groupContainer.horizontalAutoLayoutContainer:
        DropShadow: =DropShadow.None
        Height: =Parent.Height
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Width: =Parent.Width
        ZIndex: =4

        cmpLeftNav_13 As LeftNavigation:
            Height: =Parent.Height-2
            LayoutMinWidth: =640
            SetExpandMenu: =App.ActiveScreen.Size <= ScreenSize.Medium
            Width: =cmpLeftNav_13.MenuWidth

        conScreenMain_13 As groupContainer.verticalAutoLayoutContainer:
            DropShadow: =DropShadow.Semibold
            Fill: =Color.White
            Height: =Parent.Height
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =LayoutDirection.Vertical
            LayoutGap: =10
            LayoutMinHeight: =App.MinScreenHeight
            LayoutMinWidth: =320 - 3*Self.PaddingLeft
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =20
            PaddingLeft: |-
                =Switch(
                    App.ActiveScreen.Size,
                    ScreenSize.ExtraLarge,
                    100,
                    ScreenSize.Large,
                    50,
                    ScreenSize.Medium,
                    25,
                    ScreenSize.Small,
                    12.5
                )
            PaddingRight: =Self.PaddingLeft
            PaddingTop: =20
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Visible: |-
                =If(
                    And(
                        App.ActiveScreen.Size = ScreenSize.Small,
                        Or(
                            varExpandHelp,
                            varExpandMenu
                        )
                    ),
                    false,
                    true
                )
            Width: =cmpHelpAssistant_13.X-Self.X
            X: =cmpLeftNav_13.Width
            ZIndex: =2

            Header_9 As Header:
                LayoutMinHeight: =640
                LayoutMinWidth: =0

            ProgressBar_7 As ProgressBar:
                LayoutMinHeight: =640
                LayoutMinWidth: =0
                ZIndex: =2

            Container1_42 As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                Visible: =CurrentActivityStep.'Step Name' = "Drop Downs Overview"
                ZIndex: =3

                HtmlText2_23 As htmlViewer:
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: =CurrentActivityStep.Summary
                    ZIndex: =4

            Container1_85 As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =20
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                Visible: =CurrentActivityStep.'Step Name' = "Connection Reference"
                ZIndex: =4

                HtmlText2_71 As htmlViewer:
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: =CurrentActivityStep.Summary
                    ZIndex: =1

                ButtonCanvas3_7 As Button:
                    AccessibleLabel: ="Create Dataverse Connection"
                    Align: =""
                    AlignInContainer: =AlignInContainer.Start
                    BasePaletteColor: =
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =30
                    Icon: =""
                    IconRotation: =0
                    IconStyle: ="Outline"
                    Layout: ="Icon before"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |-
                        =Launch(
                            Concatenate(
                                "https://make.powerapps.com/environments/",
                                varCurrentEnvironment.name,
                                "/connections/available"
                            )
                        )
                    Text: ="Launch to create new connection"
                    VerticalAlign: =""
                    Visible: =true
                    Width: =250
                    X: =0
                    Y: =0
                    ZIndex: =2

                Container12_7 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =35
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =10
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    ZIndex: =4

                    ComboboxCanvas1_19 As Combobox.pcfdataset:
                        AccessibleLabel: ="Select existing Dataverse connections"
                        Appearance: ="FilledDarker"
                        BasePaletteColor: =
                        BorderStyle: =""
                        DefaultSelectedItems: |-
                            =With(
                                {
                                    _activityStepValue: LookUp (
                                        'Activity Step Values',
                                        'Control Name' = "ComboboxCanvas1_6"
                                    ).Value
                                },
                                First(
                                    Filter(
                                        colConnections,
                                        StartsWith(
                                            id,
                                            "/providers/Microsoft.PowerApps/apis/shared_saperp"
                                        ),
                                        If(
                                            !IsBlank(_activityStepValue),
                                            name = _activityStepValue,
                                            !IsBlank(name)
                                        )
                                    )
                                )
                            )
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontItalic: =false
                        FontSize: =0
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        InputTextPlaceholder: ="Select Microsoft Dataverse connection"
                        Items: |
                            =Filter(
                                colConnections,
                                StartsWith(
                                    id,
                                    "/providers/Microsoft.PowerApps/apis/shared_saperp"
                                )
                            )
                        LayoutMinHeight: =32
                        LayoutMinWidth: =320
                        OnChange: =
                        ValidationState: ="None"
                        Visible: =true
                        Width: =400
                        X: =0
                        Y: =0
                        ZIndex: =1

                        _displayName3_6 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                            FieldDisplayName: ="_displayName"
                            FieldName: ="_displayName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =1
                            ZIndex: =11

                    Image3_7 As image:
                        AccessibleLabel: ="SAP ERP logo"
                        Height: =35
                        Image: ='SAP ERP Icon'
                        PaddingBottom: =5
                        PaddingLeft: =5
                        PaddingRight: =5
                        PaddingTop: =5
                        Width: =35
                        ZIndex: =2

                    Icon1_6 As icon.Reload:
                        AccessibleLabel: ="Refresh"
                        Color: =RGBA(0, 0, 0, 1)
                        Height: =35
                        Icon: =Icon.Reload
                        OnSelect: |-
                            =ClearCollect(
                                colConnections,
                                AddColumns(
                                    PowerAppsforMakers.GetConnections(
                                        {
                                            'api-version': BAPAPIVersion,
                                            '$filter': "environment eq '" & varCurrentEnvironment.name & "'"
                                        }
                                    ).value As temp,
                                    _displayName,
                                    temp.properties.displayName
                                )
                            )
                        PaddingBottom: =7
                        PaddingLeft: =7
                        PaddingRight: =7
                        PaddingTop: =7
                        TabIndex: =0
                        Tooltip: ="Refresh"
                        Width: =35
                        ZIndex: =3

                CheckboxCanvas5_24 As Checkbox:
                    AccessibleLabel: ="Confirmed connections selected that will be used for import"
                    AlignInContainer: =AlignInContainer.Stretch
                    BasePaletteColor: =
                    CheckboxSize: =16
                    Checked: |-
                        =With(
                            {
                                _stepValue: LookUp(
                                    'Activity Step Values',
                                    'Control Name' = "CheckboxCanvas5_24"
                                ).Value
                            },
                            If(_stepValue = "true",true,false)
                        )
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =60
                    Label: ="Confirmed connections selected that will be used for import"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =160
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =160
                    X: =40
                    Y: =40
                    ZIndex: =5

            Container1_30 As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =0
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                Visible: =CurrentActivityStep.'Step Name' = "Import Drop Downs Solution"
                Width: =0
                ZIndex: =5

                HtmlText2_18 As htmlViewer:
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: =CurrentActivityStep.Summary
                    ZIndex: =1

                TextCanvas6_14 As Text:
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Step 1 ----"
                    Visible: =true
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =4

                TextCanvas6_1 As Text:
                    AutoHeight: =true
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Download the 'mpa_SAPSetupAssistantDropDownValues_managed' file and save it to your local machine."
                    VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                    Visible: =true
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =5

                ButtonCanvas1_9 As Button:
                    AccessibleLabel: ="Download file"
                    Align: =""
                    AlignInContainer: =AlignInContainer.Start
                    BasePaletteColor: =
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: |-
                        =If(
                           varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    Icon: =""
                    IconRotation: =0
                    IconStyle: ="Outline"
                    Layout: ="Icon before"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |-
                        =Launch(
                            LookUp(
                                SolutionFiles,
                                Solution = "mpa_SAPSetupAssistantDropDownValues" && Type = "Managed"
                            ).Link
                        )
                    Text: ="Download file"
                    VerticalAlign: =""
                    Visible: =true
                    Width: =150
                    X: =0
                    Y: =0
                    ZIndex: =6

                TextCanvas6_19 As Text:
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Step 2 ----"
                    Visible: =true
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =7

                TextCanvas6_20 As Text:
                    AutoHeight: =true
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Select the file downloaded."
                    Visible: =true
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =8

                DataCardValue7_3 As attachments:
                    AccessibleLabel: ="Select downloaded file"
                    AlignInContainer: =AlignInContainer.Start
                    BorderColor: =RGBA(0,0,0,0)
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =Font.'Segoe UI'
                    Height: =100
                    IsInDataCard: =true
                    Items: =
                    MaxAttachments: =1
                    MaxAttachmentSize: =20
                    NoAttachmentsText: ="There is no file selected."
                    OnAddFile: |
                        =Set(
                            varAttachmentControl,
                            JSON(
                                Image4_3.Image,
                                JSONFormat.IncludeBinaryData
                            )
                        );
                        Set(
                            varAttachmentBinaryOnly,
                            Mid(
                                varAttachmentControl,
                                Find(
                                    ",",
                                    varAttachmentControl
                                ) + 1,
                                Len(varAttachmentControl) - Find(
                                    ",",
                                    varAttachmentControl
                                ) - 1
                            )
                        );
                        ClearCollect(
                            colAttachedFiles,
                            {
                                filename: Last(DataCardValue7_3.Attachments).Name,
                                filecontents: varAttachmentBinaryOnly,
                                filelink: ""
                            }
                        );
                    OnRemoveFile: |
                        =RemoveIf(colAttachedFiles, IsBlankOrError(LookUp(Self.Attachments, filename exactin Self.Attachments.Name)));
                        Set(varAttachmentControl, "");
                        Set(varAttachmentBinaryOnly, "");
                        Clear(colAttachedFiles);
                    PaddingBottom: =5
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    PaddingRight: =5
                    PaddingTop: =5
                    Size: =10
                    Tooltip: =
                    Width: =450
                    X: =2
                    Y: =400
                    ZIndex: =9

                TextCanvas6_25 As Text:
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Step 3 ----"
                    Visible: =true
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =10

                TextCanvas6_26 As Text:
                    AutoHeight: =true
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Import the selected file into your environment."
                    Visible: =true
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =11

                Container13_6 As groupContainer.horizontalAutoLayoutContainer:
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =35
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =10
                    LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    ZIndex: =12

                    ButtonCanvas3_11 As Button:
                        AccessibleLabel: ="Import solution"
                        Align: =""
                        BasePaletteColor: =
                        BorderColor: =
                        BorderStyle: =""
                        DisplayMode: |-
                            =If(
                                Or(
                                    IsEmpty(DataCardValue7_3.Attachments),
                                    varDisableControls
                                ),
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Font: =""
                        FontColor: =
                        FontItalic: =false
                        FontSize: =0
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =Switch(
                                true,
                                IsBlank(
                                    Find(
                                        LookUp(
                                            SolutionFiles,
                                            Solution = "mpa_SAPSetupAssistantDropDownValues" && Type = "Managed"
                                        ).ShortFileName,
                                        Last(DataCardValue7_3.Attachments).Name
                                    )
                                ),
                                Notify(
                                    "The file '" & First(DataCardValue7_3.Attachments).Name & "' selected to import is not the expected '" & LookUp(
                                        SolutionFiles,
                                        Solution = "mpa_SAPSetupAssistantDropDownValues" && Type = "Managed"
                                    ).FileName & "' file.",
                                    NotificationType.Error,
                                    0
                                ),
                                //File selected is valid, execute import
                                Notify(
                                    "Currently importing solution " & Last(DataCardValue7_3.Attachments).Name & ". This can take several minutes. Please do not navigate away from this page.",
                                    NotificationType.Information,
                                    0
                                );
                                Set(
                                    varDisableControls,
                                    true
                                );
                                UpdateContext(
                                    {
                                        _importingSolution: true,
                                        _totalDuration: 0
                                    }
                                );
                                UpdateContext(
                                    {
                                        _solutionImport: InstallTemplateImportSolutionFile.Run(
                                            varAttachmentBinaryOnly,
                                            First(
                                                Filter(
                                                    SolutionFiles,
                                                    ShortFileName in First(DataCardValue7_3.Attachments).Name
                                                )
                                            ).Solution,
                                            JSON(
                                                Table(
                                                    {
                                                        '@odata.type': "Microsoft.Dynamics.CRM.connectionreference",
                                                        connectionreferencelogicalname: "mpa_SAPBasisAdministrator",
                                                        connectionid: ComboboxCanvas1_19.Selected.name,
                                                        connectorid: "/providers/Microsoft.PowerApps/apis/shared_saperp"
                                                    }
                                                ),
                                                JSONFormat.IndentFour
                                            )
                                        )
                                    }
                                );
                                If(
                                    _solutionImport.status = "Success",
                                    UpdateContext({_checkImportStatus: true}),
                                    Notify(
                                        _solutionImport.statusmessage,
                                        NotificationType.Error,
                                        0
                                    );
                                    Set(
                                        varDisableControls,
                                        false
                                    );
                                );
                                UpdateContext({_importingSolution: false})
                            )
                        Text: ="Import selected file"
                        VerticalAlign: =""
                        Visible: =true
                        Width: =200
                        X: =0
                        Y: =0
                        ZIndex: =1

                    Spinner1_6 As Spinner:
                        AccessibleLabel: |-
                            =With(
                                {
                                    _solutionHistory: LookUp(
                                        'Solutions History',
                                        'Activity Id' = _solutionImport.solutionhistoryid
                                    )
                                },
                                Switch(
                                    true,
                                    _importingSolution,
                                    "Initiating import",
                                    And(
                                        _checkImportStatus,
                                        IsBlank(_solutionHistory.Result)
                                    ),
                                    _solutionHistory.Status,
                                    _solutionHistory.Result
                                )
                            )
                        AlignInContainer: =AlignInContainer.Stretch
                        Appearance: ='Spinner.Appearance'.Primary
                        BasePaletteColor: =
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =true
                        FontSize: =12
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =Parent.Height
                        Label: |-
                            =With(
                                {
                                    _solutionHistory: LookUp(
                                        'Solutions History',
                                        'Activity Id' = _solutionImport.solutionhistoryid
                                    )
                                },
                                Switch(
                                    true,
                                    _importingSolution,
                                    "Initiating import",
                                    And(
                                        _checkImportStatus,
                                        IsBlank(_solutionHistory.Result)
                                    ),
                                    _solutionHistory.Status,
                                    _solutionHistory.Result
                                )
                            )
                        LabelPosition: ='Spinner.LabelPosition'.Before
                        LayoutMinWidth: =50
                        SpinnerColor: =
                        SpinnerSize: ='Spinner.SpinnerSize'.Tiny
                        TrackColor: =
                        Visible: |-
                            =Or(
                                _importingSolution,
                                _checkImportStatus
                            )
                        Width: =150
                        X: =0
                        Y: =0
                        ZIndex: =2

                Image4_3 As image:
                    AccessibleLabel: ="Attachment icon"
                    DisplayMode: =DisplayMode.Disabled
                    Image: =Last(DataCardValue7_3.Attachments).Value
                    TabIndex: =0
                    Visible: =false
                    ZIndex: =13

                CheckboxCanvas5_25 As Checkbox:
                    AccessibleLabel: ="SAP Base solution file has been imported."
                    AlignInContainer: =AlignInContainer.Stretch
                    BasePaletteColor: =
                    CheckboxSize: =16
                    Checked: |-
                        =With(
                            {
                                _stepValue: LookUp(
                                    'Activity Step Values',
                                    'Control Name' = "CheckboxCanvas5_25"
                                ).Value
                            },
                            If(_stepValue = "true",true,false)
                        )
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =40
                    Label: ="SAP Setup Assistant Drop Down Values solution file has been imported."
                    LayoutMinHeight: =32
                    LayoutMinWidth: =160
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =160
                    X: =40
                    Y: =40
                    ZIndex: =14

                Timer1_2 As timer:
                    Duration: =10000
                    OnSelect: |-
                        =UpdateContext({_checkImportStatus:true})
                    OnTimerEnd: |-
                        =Refresh('Solutions History');
                        With(
                            {
                                _solutionHistory: LookUp(
                                    'Solutions History',
                                    'Activity Id' = _solutionImport.solutionhistoryid
                                )
                            },
                            Switch(
                                true,
                                _totalDuration >= 5 * 60 * 1000,//"Timeout"
                                Notify(
                                    "The import process is taking longer than expected. Please navigate to the solutions history to check on latest import status",
                                    NotificationType.Warning,
                                    0
                                );
                                UpdateContext({_checkImportStatus: false});
                                Set(
                                    varDisableControls,
                                    false
                                ),//Success
                                And(
                                    _solutionHistory.Status = 'Status (Solutions History)'.Completed,
                                    _solutionHistory.Result = 'Result (Solutions History)'.Success
                                ),
                                Patch(
                                    'Activity Step Values',
                                    Coalesce(
                                        LookUp(
                                            'Activity Step Values',
                                            'Control Name' = "CheckboxCanvas5_25"
                                        ),
                                        Defaults('Activity Step Values')
                                    ),
                                    {
                                        'Control Name': "CheckboxCanvas5_25",
                                        'Data Type': 'Data Type (Activity Step Values)'.Boolean,
                                        'Activity Step': CurrentActivityStep,
                                        Value: "true"
                                    }
                                );
                                Reset(CheckboxCanvas5_25);
                                UpdateContext({_checkImportStatus: false});
                                Notify(
                                    "The solution file '" & _solutionHistory.'Solution Name' & "' was imported successfully.",
                                    NotificationType.Success,
                                    5000
                                );
                                Set(
                                    varDisableControls,
                                    false
                                );
                                ,//Failure
                                And(
                                    _solutionHistory.Status = 'Status (Solutions History)'.Completed,
                                    _solutionHistory.Result = 'Result (Solutions History)'.Failure
                                ),
                                Notify(
                                    "The solution file '" & _solutionHistory.'Solution Name' & "' failed to import for reason: " & _solutionHistory.'Exception Message',
                                    NotificationType.Error,
                                    0
                                );
                                UpdateContext({_checkImportStatus: false});
                                Set(
                                    varDisableControls,
                                    false
                                );
                                ,
                                UpdateContext({_totalDuration: Self.Duration + _totalDuration})
                            )
                        )
                    OnTimerStart: =
                    Repeat: =true
                    Start: =_checkImportStatus
                    Visible: =false
                    X: =765
                    Y: =60
                    ZIndex: =15

            Container1_47 As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                Visible: =CurrentActivityStep.'Step Name' = "Update Dataflow"
                ZIndex: =6

                HtmlText2_27 As htmlViewer:
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: =CurrentActivityStep.Summary
                    ZIndex: =1

                TextCanvas13 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Step 1 ---"
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =2

                ButtonCanvas1_11 As Button:
                    AccessibleLabel: ="Launch Dataflows"
                    Align: =""
                    AlignInContainer: =AlignInContainer.Start
                    BasePaletteColor: =
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: |-
                        =If(
                           varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    Icon: =""
                    IconRotation: =0
                    IconStyle: ="Outline"
                    Layout: ="Icon before"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |-
                        =
                        If(
                            IsBlank(
                                LookUp(
                                    Dataflows,
                                    And(
                                        Name = "SAP Sync Domains"
                                    ),OriginalDataflowId
                                )
                            ),
                            Launch(
                            Concatenate(
                                "https://make.powerapps.com/environments/",
                                varCurrentEnvironment.name,
                                "/dataintegration/list"
                            )
                        ),
                            Launch(
                            Concatenate(
                                "https://make.powerapps.com/environments/",
                                varCurrentEnvironment.name,
                                "/dataintegration/list/",
                                LookUp(
                                    Dataflows,
                                    And(
                                        Name = "SAP Sync Domains"
                                    ),OriginalDataflowId
                                ),
                                "/edit"
                            )
                        )
                        )
                    Text: ="Launch Dataflow"
                    VerticalAlign: =""
                    Visible: =true
                    Width: =150
                    X: =0
                    Y: =0
                    ZIndex: =3

                TextCanvas18 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Step 2 ---"
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =4

                TextCanvas20 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: |-
                        =Concatenate("Click on the Source under Applied Steps. Update the dataverse instance to : ",
                        varCurrentEnvironment.domainname,
                        " .")
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =5

                TextCanvas20_1 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: |-
                        =Concatenate(
                        "Click 'Configure Connection',setup the connection and wait for tables to load.Now click on 'Refresh' button")
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =6

                Container25_1 As groupContainer.horizontalAutoLayoutContainer:
                    Height: =400
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    ZIndex: =7

                    Image2_6 As image:
                        FillPortions: =1
                        Height: =180
                        Image: ='Update Dataflow Configure Connection'
                        Width: =200
                        ZIndex: =3

                    Image2_7 As image:
                        FillPortions: =1
                        Height: =180
                        Image: ='Update Dataflow Refresh'
                        Width: =200
                        ZIndex: =4

                TextCanvas21 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Step 3 ---"
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =8

                TextCanvas22 As Text:
                    BorderColor: =
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="After the refresh to complete, Select Next And Publish.Before proceeding to next step , make sure the dataflow is published and refreshed"
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =9

                Container25 As groupContainer.horizontalAutoLayoutContainer:
                    Height: =300
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    ZIndex: =10

                    Image2_4 As image:
                        FillPortions: =1
                        Height: =180
                        Image: ='Update Dataflow Next'
                        Width: =200
                        ZIndex: =3

                    Image2_5 As image:
                        FillPortions: =1
                        Height: =180
                        Image: ='Update Dataflow Publish'
                        Width: =200
                        ZIndex: =4

                CheckboxCanvas5_27 As Checkbox:
                    AccessibleLabel: ="SAP Base solution file has been imported."
                    AlignInContainer: =AlignInContainer.Stretch
                    BasePaletteColor: =
                    CheckboxSize: =16
                    Checked: |-
                        =With(
                            {
                                _stepValue: LookUp(
                                    'Activity Step Values',
                                    'Control Name' = "CheckboxCanvas5_27"
                                ).Value
                            },
                            If(_stepValue = "true",true,false)
                        )
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =40
                    Label: ="Dataflow is updated and published"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =160
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =160
                    X: =40
                    Y: =40
                    ZIndex: =11

                Timer3 As timer:
                    Duration: =10000
                    Visible: =false
                    ZIndex: =12

            Container1_38 As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                PaddingLeft: =2
                PaddingRight: =2
                Visible: |
                    =CurrentActivityStep.'Step Name' = "Load SAP Domains"
                ZIndex: =7

                Timer2 As timer:
                    AutoPause: =false
                    Duration: =15000
                    OnTimerEnd: |-
                        =Concurrent(
                            Refresh('Install Template Async Processes'),
                            Refresh('Install Template Async Process Items')
                        );
                        UpdateContext(
                            {
                                _batchProcess: LookUp(
                                    'Install Template Async Processes',
                                    'Install Template Async Process' = _batchProcess.'Install Template Async Process'
                                )
                            }
                        );
                        With(
                            {
                                _hasErrors: !IsEmpty(
                                    Filter(
                                        'Install Template Async Process Items',
                                        'Install Template Async Process'.'Install Template Async Process' = _batchProcess.'Install Template Async Process',
                                        'Processing Status' = 'Processing Status (Install Template Async Process Items)'.Error || 'Processing Status' = 'Processing Status (Install Template Async Process Items)'.'In Progress' || 'Processing Status' = 'Processing Status (Install Template Async Process Items)'.Error
                                    )
                                )
                            },
                            Switch(
                                true,
                                _totalDuration >= 15 * 60 * 1000,//"Timeout"
                                Notify(
                                    "The SAP domain sync processes are taking longer than expected. Please monitor the 'InstallTemplateSAPDropDownSyncBatchRun' cloud flow runs directly in 'SAP Setup Assistant Drop Down Values' managed solution.",
                                    NotificationType.Warning,
                                    0
                                );
                                UpdateContext({_checkBatchStatus: false});
                                Set(
                                    varDisableControls,
                                    false
                                ),//Success
                                And(
                                    _batchProcess.'Batch Status' = 'Batch Status (Install Template Async Processes)'.Completed,
                                    !_hasErrors
                                ),
                                Patch(
                                    'Activity Step Values',
                                    Coalesce(
                                        LookUp(
                                            'Activity Step Values',
                                            'Control Name' = "CheckboxCanvas5_23"
                                        ),
                                        Defaults('Activity Step Values')
                                    ),
                                    {
                                        'Control Name': "CheckboxCanvas5_23",
                                        'Data Type': 'Data Type (Activity Step Values)'.Boolean,
                                        'Activity Step': CurrentActivityStep,
                                        Value: "true"
                                    }
                                );
                                Reset(CheckboxCanvas5_23);
                                UpdateContext({_checkBatchStatus: false});
                                Notify(
                                    "All SAP values synced successfully to Microsoft Dataverse.",
                                    NotificationType.Success,
                                    5000
                                );
                                Set(
                                    varDisableControls,
                                    false
                                );
                                ,//Failure
                                And(
                                    _batchProcess.'Batch Status' = 'Batch Status (Install Template Async Processes)'.Completed,
                                    _hasErrors
                                ),
                                Notify(
                                    "One or more of the domains failed to sync successfully to Microsoft Dataverse. See error details below.",
                                    NotificationType.Error,
                                    0
                                );
                                UpdateContext({_checkBatchStatus: false});
                                Set(
                                    varDisableControls,
                                    false
                                );
                                ,
                                UpdateContext({_totalDuration: Self.Duration + _totalDuration})
                            )
                        )
                    Repeat: =true
                    Start: =_checkBatchStatus
                    Visible: =false
                    ZIndex: =1

                HtmlText2_24 As htmlViewer:
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: =CurrentActivityStep.Summary
                    ZIndex: =2

                Container13_7 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =35
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =20
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    ZIndex: =3

                    ComboboxCanvas4_1 As Combobox.pcfdataset:
                        AccessibleLabel: ="Select language required"
                        Appearance: ="FilledDarker"
                        BorderStyle: =""
                        DisplayMode: |-
                            =If(
                                varDisableControls,
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Height: =32
                        InputTextPlaceholder: ="Select language"
                        Items: =Sort(SAPtoDVLanguageMappings,Name)
                        LayoutMinHeight: =32
                        LayoutMinWidth: =320
                        Width: =300
                        X: =0
                        Y: =0
                        ZIndex: =1

                        Name1_1 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                            FieldDisplayName: ="Name"
                            FieldName: ="Name"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =1
                            ZIndex: =15

                    ButtonCanvas2_11 As Button:
                        AccessibleLabel: ="Sync SAP domain values to Microsoft Dataverse"
                        Align: =""
                        BasePaletteColor: =
                        BorderColor: =
                        BorderStyle: =""
                        DisplayMode: |-
                            =If(
                                Or(
                                    varDisableControls,
                                    IsBlank(ComboboxCanvas4_1.Selected)
                                ),
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Font: =""
                        FontColor: =
                        FontItalic: =false
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =Set(
                                varDisableControls,
                                true
                            );
                            Notify(
                                "Initiating process to sync domain values from SAP which can take several minutes.You will receive an email when the process is completed",
                                NotificationType.Information,
                                0
                            );
                            IfError(
                                UpdateContext(
                                    {
                                        _batchProcess: Patch(
                                            'Install Template Async Processes',
                                            Defaults('Install Template Async Processes'),
                                            {
                                                'Batch Status': 'Batch Status (Install Template Async Processes)'.'Not Started',
                                                'Batch Type': 'Install Template Batch Type'.'Sync SAP Domains',
                                                Name: "SAP Domain Sync",
                                                Message: "Batch sync process is submitted for processing."
                                            }
                                        )
                                    }
                                );
                                Patch(
                                    'Activity Step Values',
                                    Coalesce(
                                        LookUp(
                                            'Activity Step Values',
                                            'Control Name' = "InstallBatchProcessId"
                                        ),
                                        Defaults('Activity Step Values')
                                    ),
                                    {
                                        'Control Name': "InstallBatchProcessId",
                                        'Activity Step': CurrentActivityStep,
                                        'Data Type': 'Data Type (Activity Step Values)'.String,
                                        Value: _batchProcess.'Install Template Async Process'
                                    }
                                );
                                ForAll(
                                    SAPDomains,
                                    Patch(
                                        'Install Template Async Process Items',
                                        Defaults('Install Template Async Process Items'),
                                        {
                                            'Batch Type': 'Install Template Batch Type'.'Sync SAP Domains',
                                            'Install Template Async Process': _batchProcess,
                                            Name: ThisRecord.description,
                                            'Processing Status': 'Processing Status (Install Template Async Process Items)'.'Not Started',
                                            'Has Dependency?': If(
                                                Or(
                                                    ThisRecord.procedure = "child",
                                                    ThisRecord.procedure = "childNoLanguage"
                                                ),
                                                true,
                                                false
                                            ),
                                            Message: "SAP domain sync submitted for processing.",
                                            'Parameters JSON': JSON(
                                                First(
                                                    Table(
                                                        {
                                                            dataverseDomain: ThisRecord.dataverseDomain,
                                                            domain: ThisRecord.domain,
                                                            language: ComboboxCanvas4_1.Selected.SAPCode,
                                                            procedure: ThisRecord.procedure,
                                                            valuesTable: ThisRecord.table,
                                                            valueField: ThisRecord.valueField,
                                                            labelField: ThisRecord.labelField,
                                                            languageField: ThisRecord.languageField,
                                                            dataverseLanguage: ComboboxCanvas4_1.Selected.DVCode,
                                                            parentField: ThisRecord.parentField,
                                                            dataverseParentDomain: ThisRecord.dataverseParentDomain
                                                        }
                                                    )
                                                ),
                                                JSONFormat.IndentFour
                                            )
                                        }
                                    )
                                );
                                UpdateContext(
                                    {
                                        _batchProcess: Patch(
                                            'Install Template Async Processes',
                                            LookUp(
                                                'Install Template Async Processes',
                                                'Install Template Async Process' = _batchProcess.'Install Template Async Process'
                                            ),
                                            {
                                                'Batch Status': 'Batch Status (Install Template Async Processes)'.'In Progress',
                                                'Started On': Now()
                                            }
                                        )
                                    }
                                );
                                UpdateContext({_checkBatchStatus: true});
                                ,
                                Notify(
                                    FirstError.Message,
                                    NotificationType.Error,
                                    0
                                );
                                
                            );
                            Set(
                                varDisableControls,
                                false
                            )
                        Text: ="Sync SAP domains"
                        VerticalAlign: =""
                        Visible: =true
                        Width: =175
                        X: =0
                        Y: =0
                        ZIndex: =2

                TextCanvas15 As Text:
                    AutoHeight: =true
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    FontItalic: =true
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: |-
                        =Switch(
                            _batchProcess.'Batch Status',
                            'Batch Status (Install Template Async Processes)'.Completed,
                            "Batch process completed at " & Text(
                                _batchProcess.'Completed On',
                                DateTimeFormat.LongDateTime
                            ),
                            'Batch Status (Install Template Async Processes)'.'In Progress',
                            "Batch process started on " & Text(
                                _batchProcess.'Started On',
                                DateTimeFormat.LongDateTime
                            ),
                            'Batch Status (Install Template Async Processes)'.'Not Started',
                            "Batch process submitted on " & Text(
                                _batchProcess.'Created On',
                                DateTimeFormat.LongDateTime
                            )
                        )
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =4

                CheckboxCanvas5_23 As Checkbox:
                    AccessibleLabel: ="SAP domains have been synched to Microsoft Dataverse"
                    BasePaletteColor: =
                    CheckboxSize: =16
                    Checked: |-
                        =With(
                            {
                                _stepValue: LookUp(
                                    'Activity Step Values',
                                    'Control Name' = "CheckboxCanvas5_23"
                                ).Value
                            },
                            If(
                                _stepValue = "true",
                                true,
                                false
                            )
                        )
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =40
                    Label: ="SAP domains have been synched to Microsoft Dataverse"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =160
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =160
                    X: =40
                    Y: =40
                    ZIndex: =5

                Container13_8 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =35
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =20
                    LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    ZIndex: =6

                    TextCanvas12_1 As Text:
                        BorderColor: =
                        BorderStyle: =""
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FillPortions: =1
                        FontColor: =
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Text: ="SAP domains that will be synced"
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =1

                    Icon2_15 As icon.CheckBadge:
                        AccessibleLabel: ="Refresh batch load status"
                        Color: |-
                            =RGBA(
                                0,
                                0,
                                0,
                                1
                            )
                        Height: =25
                        Icon: =Icon.Reload
                        OnSelect: |-
                            =Concurrent(
                                UpdateContext(
                                    {
                                        _batchProcess: LookUp(
                                            'Install Template Async Processes',
                                            'Install Template Async Process' = _batchProcess.'Install Template Async Process'
                                        )
                                    }
                                ),
                                Refresh('Install Template Async Process Items')
                            )
                        PaddingBottom: =2
                        PaddingLeft: =2
                        PaddingRight: =2
                        PaddingTop: =2
                        TabIndex: =0
                        Tooltip: =Self.AccessibleLabel
                        Visible: =And(Gallery1_1.Visible,!IsEmpty(Gallery1_1.AllItems))
                        Width: =Self.Height
                        X: =
                        Y: |-
                            =If(
                                IsBlank(TextCanvas2_5.Text),
                                (TextCanvas2_3.Height + TextCanvas2_3.Y - Self.Height) / 2,
                                (TextCanvas2_5.Height + TextCanvas2_5.Y - Self.Height) / 2
                            )+2
                        ZIndex: =2

                Gallery1_1 As gallery.variableTemplateHeightGallery:
                    '#CopilotOverlayLabel': ="Filtered"
                    AccessibleLabel: ="List of domains being synced"
                    BorderColor: =RGBA(0, 0, 0, 1)
                    DelayItemLoading: =true
                    FocusedBorderThickness: =2
                    ItemAccessibleLabel: =ThisItem.Name
                    Items: |-
                        =If(
                            !IsBlank(_batchProcess),
                            Sort(
                                Filter(
                                    'Install Template Async Process Items',
                                    'Install Template Async Process'.'Install Template Async Process' = _batchProcess.'Install Template Async Process'
                                ),
                                Name
                            )
                        )
                    Layout: =Layout.Vertical
                    LayoutMinHeight: =287
                    LayoutMinWidth: =320
                    LoadingSpinner: =LoadingSpinner.Data
                    TabIndex: =0
                    TemplatePadding: =0
                    TemplateSize: =280
                    Visible: =_batchProcess.'Batch Status' <> 'Batch Status (Install Template Async Processes)'.'Not Started'
                    ZIndex: =9

                    TextCanvas2_5 As Text:
                        AutoHeight: =true
                        BorderColor: =
                        BorderStyle: =""
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        FontItalic: =true
                        Height: =32
                        Size: =12
                        Text: =ThisItem.Message
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                        Weight: ='TextCanvas.Weight'.Medium
                        Width: =Parent.TemplateWidth
                        X: =0
                        Y: =TextCanvas2_3.Height+TextCanvas2_3.Y
                        ZIndex: =1

                    TextCanvas2_3 As Text:
                        BorderColor: =
                        BorderStyle: =""
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =25
                        Text: =ThisItem.Name
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =Parent.TemplateWidth
                        X: =0
                        Y: =1
                        ZIndex: =4

                    Rectangle2_1 As rectangle:
                        Fill: =RGBA(214, 221, 224, 1)
                        Height: =1
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =TextCanvas2_5.Y+TextCanvas2_5.Height-Self.Height+5
                        ZIndex: =5

            Container1_48 As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =20
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                Visible: =CurrentActivityStep.'Step Name' = "Validate List of Values"
                ZIndex: =8

                HtmlText2_31 As htmlViewer:
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: =CurrentActivityStep.Summary
                    ZIndex: =1

                ButtonCanvas6_11 As Button:
                    AccessibleLabel: ="Launch manage domain values in administrator app"
                    Align: =""
                    AlignInContainer: =AlignInContainer.Start
                    BasePaletteColor: =
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    Icon: =""
                    IconRotation: =0
                    IconStyle: ="Outline"
                    Layout: ="Icon before"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |-
                        =If(
                            IsBlank(SAPAdminApp),
                            Notify(
                                "The SAP Template Administrator app has not yet been installed in this environment.",
                                NotificationType.Error,
                                0
                            ),
                            Launch(
                                Concatenate(
                                    SAPAdminApp._AppURL,
                                    "&pagetype=entitylist&etn=mpa_saplistofvalue&viewid=374d0c7a-02f1-4843-ae44-3278fa46da55&viewType=1039"
                                )
                            )
                        )
                    Text: ="Manage domain values"
                    VerticalAlign: =""
                    Visible: =true
                    Width: =200
                    X: =0
                    Y: =0
                    ZIndex: =2

                CheckboxCanvas3_13 As Checkbox:
                    AccessibleLabel: ="Confirmed SAP domain values are valid"
                    BasePaletteColor: =
                    CheckboxSize: =16
                    Checked: |-
                        =If(
                            LookUp(
                                'Activity Step Values',
                                'Control Name' = "CheckboxCanvas3_13"
                            ).Value = "true",
                            true,
                            false
                        )
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    Label: ="Confirmed SAP domain values are valid"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =160
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =160
                    X: =0
                    Y: =0
                    ZIndex: =3

            Container1_45 As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Visible: =CurrentActivityStep.'Step Name' = "Review"
                ZIndex: =9

                ReviewCompletionSteps_9 As ReviewCompletionSteps:
                    FillPortions: =1
                    Height: =Parent.Height
                    LayoutMinHeight: =100
                    LayoutMinWidth: =100
                    Width: =Parent.Width
                    ZIndex: =3

            NavigationButtons_12 As NavigationButtons:
                LayoutMinHeight: =640
                LayoutMinWidth: =0
                StepStatus: |-
                    =If(
                        varSkip,
                        'Step Status (Activity Steps)'.Skipped,
                        Switch(
                            true,
                            Container1_42.Visible,
                            'Step Status (Activity Steps)'.Completed,
                            Container1_85.Visible,
                            If(
                                CheckboxCanvas5_24.Checked = true,
                                'Step Status (Activity Steps)'.Completed,
                                'Step Status (Activity Steps)'.Incomplete
                            ),
                            Container1_38.Visible,
                            If(
                                CheckboxCanvas5_23.Checked = true,
                                'Step Status (Activity Steps)'.Completed,
                                'Step Status (Activity Steps)'.Incomplete
                            ),
                            Container1_48.Visible,
                            If(
                                CheckboxCanvas3_13.Checked = true,
                                'Step Status (Activity Steps)'.Completed,
                                'Step Status (Activity Steps)'.Incomplete
                            ),
                    
                            Container1_30.Visible,
                            If(
                                CheckboxCanvas5_25.Checked = true,
                                'Step Status (Activity Steps)'.Completed,
                                'Step Status (Activity Steps)'.Incomplete
                            ),
                    
                            Container1_47.Visible,
                            If(
                                CheckboxCanvas5_27.Checked = true,
                                'Step Status (Activity Steps)'.Completed,
                                'Step Status (Activity Steps)'.Incomplete
                            )
                        )
                    )
                StepValues: |-
                    =Switch(
                        true,
                        Container1_38.Visible,
                        Table(
                            {
                                Control: "CheckboxCanvas5_3",
                                Value: Text(CheckboxCanvas5_23.Checked),
                                Type: 'Data Type (Activity Step Values)'.Boolean
                            }
                        ),
                        Container1_85.Visible,
                        Table(
                            {
                                Control: "CheckboxCanvas5_24",
                                Value: Text(CheckboxCanvas5_24.Checked),
                                Type: 'Data Type (Activity Step Values)'.Boolean
                            }
                        ),
                        Container1_38.Visible,
                        Table(
                            {
                                Control: "CheckboxCanvas5_23",
                                Value: Text(CheckboxCanvas5_23.Checked),
                                Type: 'Data Type (Activity Step Values)'.Boolean
                            },
                            {
                                Control: "InstallBatchProcessIdDropDowns",
                                Value: Text(_batchProcess.'Install Template Async Process'),
                                Type: 'Data Type (Activity Step Values)'.String
                            }
                        ),
                        Container1_48.Visible,
                        Table(
                            {
                                Control: "CheckboxCanvas3_13",
                                Value: Text(CheckboxCanvas3_13.Checked),
                                Type: 'Data Type (Activity Step Values)'.Boolean
                            }
                        ),
                        Container1_30.Visible,
                        Table(
                            {
                                Control: "CheckboxCanvas5_25",
                                Value: Text(CheckboxCanvas5_25.Checked),
                                Type: 'Data Type (Activity Step Values)'.Boolean
                            }
                        ),
                        Container1_47.Visible,
                        Table(
                            {
                                Control: "CheckboxCanvas5_27",
                                Value: Text(CheckboxCanvas5_27.Checked),
                                Type: 'Data Type (Activity Step Values)'.Boolean
                            }
                        )
                    
                    )
                ZIndex: =10

        "icoConMainScreenExpand_8 As icon.'3DPrinting'":
            AccessibleLabel: ="Expand step detail"
            AlignInContainer: =AlignInContainer.Start
            BorderColor: =RGBA(0,0,0,0)
            Color: =Color.Black
            DisabledBorderColor: |-
                =ColorValue("#A19F9D")
            DisabledColor: |-
                =ColorValue("#F3F2F1")
            DisabledFill: =RGBA(0,0,0,0)
            DisplayMode: |-
                =If(
                    varDisableControls,
                    DisplayMode.Disabled,
                    DisplayMode.Edit
                )
            Fill: =RGBA(0,0,0,0)
            FocusedBorderColor: |-
                =ColorValue("#605E5C")
            Height: =48
            HoverBorderColor: =
            HoverColor: |-
                =ColorValue("#8A8886")
            HoverFill: =RGBA(0,0,0,0)
            Icon: =Icon.ListScrollEmpty
            OnSelect: |-
                =Set(
                    varExpandHelp,
                    false
                );
                Set(
                    varExpandMenu,
                    false
                )
            PaddingBottom: =10
            PaddingLeft: =12
            PaddingRight: =12
            PaddingTop: =10
            PressedBorderColor: =
            PressedColor: |-
                =ColorValue("#8A8886")
            PressedFill: =RGBA(0,0,0,0)
            TabIndex: =0
            Tooltip: ="Expand step detail"
            Visible: |-
                =And(
                    App.ActiveScreen.Size = ScreenSize.Small,
                    Or(
                        varExpandHelp,
                        varExpandMenu
                    )
                )
            Width: =48
            X: =Self.FocusedBorderThickness
            ZIndex: =3

        cmpHelpAssistant_13 As HelpResources:
            Height: =Parent.Height
            LayoutMinWidth: =640
            SetExpandHelp: =App.ActiveScreen.Size <= ScreenSize.Medium
            Width: =cmpHelpAssistant_13.HelpResourcesWidth
            X: =Parent.Width-Self.Width
            ZIndex: =4

