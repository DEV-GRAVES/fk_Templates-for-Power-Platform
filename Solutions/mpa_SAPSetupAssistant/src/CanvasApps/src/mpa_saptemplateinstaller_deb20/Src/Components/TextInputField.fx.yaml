TextInputField As CanvasComponent:
    CollectJSONStrings: =true
    CurrentHeight: |-
        =If(
            And(
                IsBlank(TextInputCanvas3.Value),
                TextInputField.Required
            ),
            96,
            64
        )
    Default: =
    Fill: =RGBA(0, 0, 0, 0)
    Height: =TextInputField.CurrentHeight
    InfoText: ="Text"
    InputDisplayMode: =DisplayMode.Edit
    LabelText: ="Text"
    LabelWidth: =100
    OnReset: =Reset(TextInputCanvas3)
    PropertyLabel: ="Text"
    Required: =true
    ValidState: |-
        =If(
            TextInputField.Required,
            !IsBlank(TextInputCanvas3.Value),
            true
        )
    Value: =TextInputCanvas3.Value
    Width: =300
    X: =0
    Y: =0
    ZIndex: =1

    Container5_1 As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.None
        Height: =Parent.Height
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Width: =Parent.Width
        ZIndex: =1

        TextCanvas19 As Text:
            BorderColor: =
            BorderStyle: =""
            DisplayMode: =DisplayMode.Edit
            Fill: =
            FontColor: =RGBA(255, 0, 0, 1)
            Height: =32
            Text: ="Field is required"
            Visible: =IsBlank(TextInputCanvas3.Value)
            Width: =Parent.Width
            X: =0
            Y: =64
            ZIndex: =1

        "TextInputCanvas3 As 'Text input'":
            AccessibleLabel: ="Enter "&TextCanvas18_1.Text &If(TextInputField.Required," field is required")
            Appearance: ="FilledDarker"
            BasePaletteColor: =
            BorderColor: =
            BorderStyle: =""
            DisplayMode: |-
                =If(
                    varDisableControls,
                    DisplayMode.Disabled,
                    Switch(
                        TextInputField.InputDisplayMode,
                        "view",
                        DisplayMode.View,
                        "disabled",
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                )
            Fill: =
            FontColor: =
            Height: =32
            OnChange: |-
                =If(
                    And(
                        TextInputField.CollectJSONStrings,
                        !IsBlank(Self.Value)
                    ),
                    Patch(
                        colJSONStrings,
                        Coalesce(
                            LookUp(
                                colJSONStrings,
                                Control = TextInputField.PropertyLabel
                            ),
                            Defaults(colJSONStrings)
                        ),
                        {
                            Control: TextInputField.PropertyLabel,
                            Value: Self.Value,
                            Type: 'Data Type (Activity Step Values)'.String,
                            JSONString: With(
                                {
                                    _quotes: """",
                                    _colon: ": "
                                },
                                Concatenate(
                                    _quotes,
                                    TextInputField.PropertyLabel,
                                    _quotes,
                                    _colon,
                                    _quotes,
                                    TextInputCanvas3.Value,
                                    _quotes
                                )
                            )
                        }
                    ),
                    RemoveIf(
                        colJSONStrings,
                        Control = TextInputField.PropertyLabel
                    )
                )
            Required: =TextInputField.Required
            TriggerOutput: ="FocusOut"
            Value: =TextInputField.Default
            Width: =Parent.Width
            X: =0
            Y: =32
            ZIndex: =2

        "InfoButtonCanvas1_1 As 'Information button'":
            AccessibleLabel: ="More information about "&TextInputField.LabelText
            BasePaletteColor: =
            Content: =TextInputField.InfoText
            DisplayMode: =DisplayMode.Edit
            FontColor: =
            Height: =32
            IconColor: =
            Visible: =!IsBlank(TextInputField.InfoText)
            Width: =32
            X: =If(TextInputField.Required,TextCanvas14_2.X+TextCanvas14_2.Width,TextCanvas18_1.Width+10)
            Y: =0
            ZIndex: =3

        TextCanvas14_2 As Text:
            BorderColor: =
            BorderStyle: =""
            DisplayMode: =DisplayMode.Edit
            Fill: =
            FontColor: =RGBA(255, 0, 0, 1)
            Height: =32
            Text: ="*"
            Visible: =TextInputField.Required
            Weight: ='TextCanvas.Weight'.Semibold
            Width: =6
            X: =TextCanvas18_1.Width
            Y: =0
            ZIndex: =4

        TextCanvas18_1 As Text:
            BorderColor: =
            BorderStyle: =""
            DisplayMode: =DisplayMode.Edit
            Fill: =
            FontColor: =
            Height: =32
            Text: =TextInputField.LabelText
            VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
            Weight: ='TextCanvas.Weight'.Semibold
            Width: =TextInputField.LabelWidth
            Wrap: =false
            X: =0
            Y: =0
            ZIndex: =5

