"'Desktop Flows Screen' As screen":
    LoadingSpinner: =LoadingSpinner.Data
    OnVisible: |-
        =Set(
            varCurrentActivityStepOrder,
            1
        );
        Set(
            varAppActiveScreen,
            App.ActiveScreen
        );
        UpdateContext(
            {
                _solutionImport: Blank(),
                _checkImportStatus: false,
                _importingSolution: false,
                _totalDuration: 0
            }
        );
        Set(
            varDisableControls,
            false
        );
        ClearCollect(
            colConnections,
            AddColumns(
                PowerAppsforMakers.GetConnections(
                    {
                        'api-version': BAPAPIVersion,
                        '$filter': "environment eq '" & varCurrentEnvironment.name & "'"
                    }
                ).value As temp,
                _displayName,
                temp.properties.displayName
            )
        );
        Reset(CheckboxCanvas3_25);
        Reset(CheckboxCanvas3_28);
        Reset(CheckboxCanvas3_27);
        Reset(ComboboxCanvas1_10);
        Reset(CheckboxCanvas5_18);
        Reset(CheckboxCanvas5_14);
        Reset(DataCardValue7_2)

    Container6_14 As groupContainer.horizontalAutoLayoutContainer:
        DropShadow: =DropShadow.None
        Height: =Parent.Height
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Width: =Parent.Width
        ZIndex: =4

        cmpLeftNav_16 As LeftNavigation:
            Height: =Parent.Height-2
            LayoutMinHeight: =0
            LayoutMinWidth: =640
            SetExpandMenu: =App.ActiveScreen.Size <= ScreenSize.Medium
            Width: =cmpLeftNav_16.MenuWidth

        conScreenMain_16 As groupContainer.verticalAutoLayoutContainer:
            DropShadow: =DropShadow.Semibold
            Fill: =Color.White
            Height: =Parent.Height
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =LayoutDirection.Vertical
            LayoutGap: =10
            LayoutMinHeight: =App.MinScreenHeight
            LayoutMinWidth: =320 - 3*Self.PaddingLeft
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =20
            PaddingLeft: |-
                =Switch(
                    App.ActiveScreen.Size,
                    ScreenSize.ExtraLarge,
                    100,
                    ScreenSize.Large,
                    50,
                    ScreenSize.Medium,
                    25,
                    ScreenSize.Small,
                    12.5
                )
            PaddingRight: =Self.PaddingLeft
            PaddingTop: =20
            Visible: |-
                =If(
                    And(
                        App.ActiveScreen.Size = ScreenSize.Small,
                        Or(
                            varExpandHelp,
                            varExpandMenu
                        )
                    ),
                    false,
                    true
                )
            Width: =cmpHelpAssistant_16.X-Self.X
            X: =cmpLeftNav_16.Width
            ZIndex: =2

            Header_15 As Header:
                LayoutMinHeight: =640
                LayoutMinWidth: =0

            ProgressBar_12 As ProgressBar:
                LayoutMinHeight: =640
                LayoutMinWidth: =0
                ZIndex: =2

            Container1_63 As groupContainer.verticalAutoLayoutContainer:
                ContentLanguage: ="The installation will require importing multiple solutions. Depending on your deployment plan, you may choose to import either managed or unmanaged versions of the solutions. This activity will walk you through and automate the steps for importing the template solution files into your previously selected target environment of '" & varCurrentEnvironment.displayname & "'"
                DropShadow: =DropShadow.None
                Height: =450
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =0
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                Visible: =CurrentActivityStep.'Step Name' = "Desktop Flows Overview"
                Width: =0
                ZIndex: =3

                HtmlText2_44 As htmlViewer:
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: =CurrentActivityStep.Summary
                    ZIndex: =1

            Container1_64 As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                Height: =450
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =0
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                Visible: =CurrentActivityStep.'Step Name' = "Install Power Automate Desktop" 
                Width: =0
                ZIndex: =4

                HtmlText2_50 As htmlViewer:
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: =CurrentActivityStep.Summary
                    ZIndex: =1

                CheckboxCanvas3_25 As Checkbox:
                    AccessibleLabel: ="Power Automate Desktop (PAD) confirmed to be installed on on-premises data gateway virtual machine"
                    BasePaletteColor: =
                    CheckboxSize: =16
                    Checked: |-
                        =If(
                            LookUp(
                                'Activity Step Values',
                                'Control Name' = "CheckboxCanvas3_25"
                            ).Value = "true",
                            true,
                            false
                        )
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =38
                    Label: ="Power Automate Desktop (PAD) confirmed to be installed on on-premises data gateway virtual machine"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =160
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =300
                    X: =0
                    Y: =0
                    ZIndex: =4

            Container1_66 As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                Height: =450
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =0
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                Visible: =CurrentActivityStep.'Step Name' = "Configure Machine" 
                Width: =0
                ZIndex: =5

                HtmlText2_52 As htmlViewer:
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: =CurrentActivityStep.Summary
                    ZIndex: =1

                TextCanvas11 As Text:
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    FontColor: =
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="          "&varCurrentEnvironment.displayname
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =2

                CheckboxCanvas3_27 As Checkbox:
                    AccessibleLabel: ="Power Automate Desktop (PAD) local machine confirmed to be configured"
                    BasePaletteColor: =
                    CheckboxSize: =16
                    Checked: |-
                        =If(
                            LookUp(
                                'Activity Step Values',
                                'Control Name' = "CheckboxCanvas3_27"
                            ).Value = "true",
                            true,
                            false
                        )
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =38
                    Label: ="Power Automate Desktop (PAD) local machine confirmed to be configured"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =160
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =300
                    X: =0
                    Y: =0
                    ZIndex: =3

            Container1_67 As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                Height: =450
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =0
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                Visible: =CurrentActivityStep.'Step Name' = "Share Machine" 
                Width: =0
                ZIndex: =6

                HtmlText2_53 As htmlViewer:
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: =CurrentActivityStep.Summary
                    ZIndex: =1

                CheckboxCanvas3_28 As Checkbox:
                    AccessibleLabel: ="Power Automate Machine has been shared with necessary deployment team members who have access to the Windows Virtual Machine."
                    BasePaletteColor: =
                    CheckboxSize: =16
                    Checked: |-
                        =If(
                            LookUp(
                                'Activity Step Values',
                                'Control Name' = "CheckboxCanvas3_28"
                            ).Value = "true",
                            true,
                            false
                        )
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =38
                    Label: ="Power Automate Machine has been shared with necessary deployment team members who have access to the Windows Virtual Machine."
                    LayoutMinHeight: =32
                    LayoutMinWidth: =160
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =300
                    X: =0
                    Y: =0
                    ZIndex: =3

            Container1_80 As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =20
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                Visible: =CurrentActivityStep.'Step Name' = "Desktop Flow Connection"
                ZIndex: =7

                HtmlText2_67 As htmlViewer:
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: =CurrentActivityStep.Summary
                    ZIndex: =1

                ButtonCanvas3_6 As Button:
                    AccessibleLabel: ="Create Dataverse Connection"
                    Align: =""
                    AlignInContainer: =AlignInContainer.Start
                    BasePaletteColor: =
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =30
                    Icon: =""
                    IconRotation: =0
                    IconStyle: ="Outline"
                    Layout: ="Icon before"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |-
                        =Launch(
                            Concatenate(
                                "https://make.powerapps.com/environments/",
                                varCurrentEnvironment.name,
                                "/connections/available"
                            )
                        )
                    Text: ="Launch to create new connection"
                    VerticalAlign: =""
                    Visible: =true
                    Width: =250
                    X: =0
                    Y: =0
                    ZIndex: =2

                Container12_10 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =35
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =10
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    ZIndex: =3

                    ComboboxCanvas1_10 As Combobox.pcfdataset:
                        AccessibleLabel: ="Select existing Dataverse connections"
                        Appearance: ="FilledDarker"
                        BasePaletteColor: =
                        BorderStyle: =""
                        DefaultSelectedItems: |-
                            =With(
                                {
                                    _activityStepValue: LookUp (
                                        'Activity Step Values',
                                        'Control Name' = "ComboboxCanvas1_10"
                                    ).Value
                                },
                                First(
                                    Filter(
                                        colConnections,
                                        StartsWith(
                                            id,
                                            "/providers/Microsoft.PowerApps/apis/shared_uiflow/connections"
                                        ),
                                        If(
                                            !IsBlank(_activityStepValue),
                                            name = _activityStepValue,
                                            !IsBlank(name)
                                        )
                                    )
                                )
                            )
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        Font: =""
                        FontItalic: =false
                        FontSize: =0
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        InputTextPlaceholder: ="Select Microsoft Dataverse connection"
                        Items: |
                            =Filter(
                                colConnections,
                                StartsWith(
                                    id,
                                    "/providers/Microsoft.PowerApps/apis/shared_uiflow/connections"
                                )
                            )
                        LayoutMinHeight: =32
                        OnChange: =
                        ValidationState: ="None"
                        Visible: =true
                        Width: =400
                        X: =0
                        Y: =0
                        ZIndex: =1

                        _displayName3_4 As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                            FieldDisplayName: ="_displayName"
                            FieldName: ="_displayName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =1
                            ZIndex: =11

                    Image3_5 As image:
                        AccessibleLabel: ="Dataverse logo"
                        Height: =35
                        Image: ='Desktop Flow Icon'
                        PaddingBottom: =5
                        PaddingLeft: =5
                        PaddingRight: =5
                        PaddingTop: =5
                        Width: =35
                        ZIndex: =2

                    Icon1_4 As icon.Reload:
                        AccessibleLabel: ="Refresh"
                        Color: =RGBA(0, 0, 0, 1)
                        Height: =35
                        Icon: =Icon.Reload
                        OnSelect: |-
                            =ClearCollect(
                                colConnections,
                                AddColumns(
                                    PowerAppsforMakers.GetConnections(
                                        {
                                            'api-version': BAPAPIVersion,
                                            '$filter': "environment eq '" & varCurrentEnvironment.name & "'"
                                        }
                                    ).value As temp,
                                    _displayName,
                                    temp.properties.displayName
                                )
                            )
                        PaddingBottom: =5
                        PaddingLeft: =5
                        PaddingRight: =5
                        PaddingTop: =5
                        TabIndex: =0
                        Tooltip: ="Refresh"
                        Width: =35
                        ZIndex: =3

                CheckboxCanvas5_18 As Checkbox:
                    AccessibleLabel: ="Confirmed connection created"
                    AlignInContainer: =AlignInContainer.Stretch
                    BasePaletteColor: =
                    CheckboxSize: =16
                    Checked: |-
                        =With(
                            {
                                _stepValue: LookUp(
                                    'Activity Step Values',
                                    'Control Name' = "CheckboxCanvas5_18"
                                ).Value
                            },
                            If(_stepValue = "true",true,false)
                        )
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =38
                    Label: ="Confirmed connection created"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =160
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =160
                    X: =40
                    Y: =40
                    ZIndex: =5

            Container1_75 As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =0
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                Visible: =CurrentActivityStep.'Step Name' = "Import Desktop Flows"
                Width: =0
                ZIndex: =8

                HtmlText2_62 As htmlViewer:
                    AutoHeight: =true
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Font: =Font.'Segoe UI'
                    HtmlText: =CurrentActivityStep.Summary
                    ZIndex: =1

                TextCanvas6_17 As Text:
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Step 1 ----"
                    Visible: =true
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =3

                TextCanvas6_18 As Text:
                    AutoHeight: =true
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Download the 'mpa_SAPTemplateInstallerDesktopFlows' file and save it to your local machine."
                    VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                    Visible: =true
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =4

                ButtonCanvas1_10 As Button:
                    AccessibleLabel: ="Download file"
                    Align: =""
                    AlignInContainer: =AlignInContainer.Start
                    BasePaletteColor: =
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: |-
                        =If(
                           varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    Icon: =""
                    IconRotation: =0
                    IconStyle: ="Outline"
                    Layout: ="Icon before"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    OnSelect: |-
                        =Launch(
                            LookUp(
                                SolutionFiles,
                                Solution = "mpa_SAPTemplateInstallerDesktopFlows" && Type = "Managed"
                            ).Link
                        )
                    Text: ="Download file"
                    VerticalAlign: =""
                    Visible: =true
                    Width: =150
                    X: =0
                    Y: =0
                    ZIndex: =5

                TextCanvas6_21 As Text:
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Step 2 ----"
                    Visible: =true
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =6

                TextCanvas6_22 As Text:
                    AutoHeight: =true
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Select the file downloaded."
                    Visible: =true
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =7

                DataCardValue7_2 As attachments:
                    AccessibleLabel: ="Select downloaded file"
                    AlignInContainer: =AlignInContainer.Start
                    BorderColor: =RGBA(0,0,0,0)
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =Font.'Segoe UI'
                    Height: =100
                    IsInDataCard: =true
                    Items: =
                    MaxAttachments: =1
                    NoAttachmentsText: ="There is no file selected."
                    OnAddFile: |
                        =Set(
                            varAttachmentControl,
                            JSON(
                                Image4_2.Image,
                                JSONFormat.IncludeBinaryData
                            )
                        );
                        Set(
                            varAttachmentBinaryOnly,
                            Mid(
                                varAttachmentControl,
                                Find(
                                    ",",
                                    varAttachmentControl
                                ) + 1,
                                Len(varAttachmentControl) - Find(
                                    ",",
                                    varAttachmentControl
                                ) - 1
                            )
                        );
                        ClearCollect(
                            colAttachedFiles,
                            {
                                filename: Last(DataCardValue7_2.Attachments).Name,
                                filecontents: varAttachmentBinaryOnly,
                                filelink: ""
                            }
                        );
                    OnRemoveFile: |
                        =RemoveIf(colAttachedFiles, IsBlankOrError(LookUp(Self.Attachments, filename exactin Self.Attachments.Name)));
                        Set(varAttachmentControl, "");
                        Set(varAttachmentBinaryOnly, "");
                        Clear(colAttachedFiles);
                    PaddingBottom: =5
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    PaddingRight: =5
                    PaddingTop: =5
                    Size: =10
                    Tooltip: =
                    Width: =450
                    X: =2
                    Y: =400
                    ZIndex: =8

                TextCanvas6_23 As Text:
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Step 3 ----"
                    Visible: =true
                    Weight: ='TextCanvas.Weight'.Semibold
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =9

                TextCanvas6_24 As Text:
                    AutoHeight: =true
                    BorderColor: =
                    BorderStyle: =""
                    DisplayMode: =DisplayMode.Edit
                    Fill: =
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Text: ="Import the selected file into your environment."
                    Visible: =true
                    Width: =96
                    X: =0
                    Y: =0
                    ZIndex: =10

                Container13_5 As groupContainer.horizontalAutoLayoutContainer:
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =35
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =10
                    LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    ZIndex: =11

                    ButtonCanvas3_12 As Button:
                        AccessibleLabel: ="Import solution"
                        Align: =""
                        BasePaletteColor: =
                        BorderColor: =
                        BorderStyle: =""
                        DisplayMode: |-
                            =If(
                                Or(
                                    IsEmpty(DataCardValue7_2.Attachments),
                                    varDisableControls
                                ),
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Font: =""
                        FontColor: =
                        FontItalic: =false
                        FontSize: =0
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =32
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =Switch(
                                true,
                                IsBlank(
                                    Find(
                                        LookUp(
                                            SolutionFiles,
                                            Solution = "mpa_SAPTemplateInstallerDesktopFlows" && Type = "Managed"
                                        ).ShortFileName,
                                        Last(DataCardValue7_2.Attachments).Name
                                    )
                                ),
                                Notify(
                                    "The file '" & First(DataCardValue7_2.Attachments).Name & "' selected to import is not the expected '" & LookUp(
                                        SolutionFiles,
                                        Solution = "mpa_SAPTemplateInstallerDesktopFlows" && Type = "Managed"
                                    ).FileName & "' file.",
                                    NotificationType.Error,
                                    0
                                ),
                                //File selected is valid, execute import
                                Notify(
                                    "Currently importing solution " & Last(DataCardValue7_2.Attachments).Name & ". This can take several minutes. Please do not navigate away from this page.",
                                    NotificationType.Information,
                                    0
                                );
                                Set(
                                    varDisableControls,
                                    true
                                );
                                UpdateContext(
                                    {
                                        _importingSolution: true,
                                        _totalDuration: 0,
                                        _completeCheckBox: "CheckboxCanvas5_4"
                                    }
                                );
                                UpdateContext(
                                    {
                                        _solutionImport: InstallTemplateImportSolutionFile.Run(
                                            varAttachmentBinaryOnly,
                                            First(
                                                Filter(
                                                    SolutionFiles,
                                                    ShortFileName in First(DataCardValue7_2.Attachments).Name
                                                )
                                            ).Solution,
                                            JSON(
                                                Table(
                                                    {
                                                        '@odata.type': "Microsoft.Dynamics.CRM.connectionreference",
                                                        connectionreferencelogicalname: "mpa_TemplateDesktopFlows",
                                                        connectionid: ComboboxCanvas1_10.Selected.name,
                                                        connectorid: "/providers/Microsoft.PowerApps/apis/shared_uiflow"
                                                    }
                                                ),
                                                JSONFormat.IndentFour
                                            )
                                        )
                                    }
                                );
                                If(
                                    _solutionImport.status = "Success",
                                    UpdateContext({_checkImportStatus: true}),
                                    Notify(
                                        _solutionImport.statusmessage,
                                        NotificationType.Error,
                                        0
                                    );
                                    Set(
                                        varDisableControls,
                                        false
                                    );
                                );
                                UpdateContext({_importingSolution: false})
                            )
                        Text: ="Import selected file"
                        VerticalAlign: =""
                        Visible: =true
                        Width: =200
                        X: =0
                        Y: =0
                        ZIndex: =1

                    Spinner1_5 As Spinner:
                        AccessibleLabel: |-
                            =With(
                                {
                                    _solutionHistory: LookUp(
                                        'Solutions History',
                                        'Activity Id' = _solutionImport.solutionhistoryid
                                    )
                                },
                                Switch(
                                    true,
                                    _importingSolution,
                                    "Initiating import",
                                    And(
                                        _checkImportStatus,
                                        IsBlank(_solutionHistory.Result)
                                    ),
                                    _solutionHistory.Status,
                                    _solutionHistory.Result
                                )
                            )
                        AlignInContainer: =AlignInContainer.Stretch
                        Appearance: ='Spinner.Appearance'.Primary
                        BasePaletteColor: =
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =true
                        FontSize: =12
                        FontStrikethrough: =false
                        FontUnderline: =false
                        FontWeight: =""
                        Height: =Parent.Height
                        Label: |-
                            =With(
                                {
                                    _solutionHistory: LookUp(
                                        'Solutions History',
                                        'Activity Id' = _solutionImport.solutionhistoryid
                                    )
                                },
                                Switch(
                                    true,
                                    _importingSolution,
                                    "Initiating import",
                                    And(
                                        _checkImportStatus,
                                        IsBlank(_solutionHistory.Result)
                                    ),
                                    _solutionHistory.Status,
                                    _solutionHistory.Result
                                )
                            )
                        LabelPosition: ='Spinner.LabelPosition'.Before
                        LayoutMinWidth: =50
                        SpinnerColor: =
                        SpinnerSize: ='Spinner.SpinnerSize'.Tiny
                        TrackColor: =
                        Visible: |
                            =Or(_importingSolution,_checkImportStatus)
                        Width: =150
                        X: =0
                        Y: =0
                        ZIndex: =2

                Image4_2 As image:
                    AccessibleLabel: ="Attachment icon"
                    DisplayMode: =DisplayMode.Disabled
                    Image: =Last(DataCardValue7_2.Attachments).Value
                    TabIndex: =0
                    Visible: =false
                    ZIndex: =12

                CheckboxCanvas5_14 As Checkbox:
                    AccessibleLabel: ="SAP template installer desktop flows have been successfully imported"
                    AlignInContainer: =AlignInContainer.Stretch
                    BasePaletteColor: =
                    CheckboxSize: =16
                    Checked: |-
                        =With(
                            {
                                _stepValue: LookUp(
                                    'Activity Step Values',
                                    'Control Name' = "CheckboxCanvas5_14"
                                ).Value
                            },
                            If(_stepValue = "true",true,false)
                        )
                    DisplayMode: |-
                        =If(
                            varDisableControls,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =40
                    Label: ="SAP template installer desktop flows have been successfully imported"
                    LayoutMinHeight: =32
                    LayoutMinWidth: =160
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =160
                    X: =40
                    Y: =40
                    ZIndex: =13

                Timer1_1 As timer:
                    Duration: =10000
                    OnSelect: |-
                        =UpdateContext({_checkImportStatus:true})
                    OnTimerEnd: |-
                        =Refresh('Solutions History');
                        With(
                            {
                                _solutionHistory: LookUp(
                                    'Solutions History',
                                    'Activity Id' = _solutionImport.solutionhistoryid
                                )
                            },
                            Switch(
                                true,
                                _totalDuration >= 5 * 60 * 1000,//"Timeout"
                                Notify(
                                    "The import process is taking longer than expected. Please navigate to the solutions history to check on latest import status",
                                    NotificationType.Warning,
                                    0
                                );
                                UpdateContext({_checkImportStatus: false});
                                Set(
                                    varDisableControls,
                                    false
                                ),//Success
                                And(
                                    _solutionHistory.Status = 'Status (Solutions History)'.Completed,
                                    _solutionHistory.Result = 'Result (Solutions History)'.Success
                                ),
                                Patch(
                                    'Activity Step Values',
                                    Coalesce(
                                        LookUp(
                                            'Activity Step Values',
                                            'Control Name' = "CheckboxCanvas5_14"
                                        ),
                                        Defaults('Activity Step Values')
                                    ),
                                    {
                                        'Control Name': _completeCheckBox,
                                        'Data Type': 'Data Type (Activity Step Values)'.Boolean,
                                        'Activity Step': CurrentActivityStep,
                                        Value: "true"
                                    }
                                );
                                Reset(CheckboxCanvas5_14);
                                UpdateContext({_checkImportStatus: false});
                                Notify(
                                    "The solution file '" & _solutionHistory.'Solution Name' & "' was imported successfully.",
                                    NotificationType.Success,
                                    5000
                                );
                                Set(
                                    varDisableControls,
                                    false
                                );
                                ,//Failure
                                And(
                                    _solutionHistory.Status = 'Status (Solutions History)'.Completed,
                                    _solutionHistory.Result = 'Result (Solutions History)'.Failure
                                ),
                                Notify(
                                    "The solution file '" & _solutionHistory.'Solution Name' & "' failed to import for reason: " & _solutionHistory.'Exception Message',
                                    NotificationType.Error,
                                    0
                                );
                                UpdateContext({_checkImportStatus: false});
                                Set(
                                    varDisableControls,
                                    false
                                );
                                ,
                                UpdateContext({_totalDuration: Self.Duration + _totalDuration})
                            )
                        )
                    OnTimerStart: =
                    Repeat: =true
                    Start: =_checkImportStatus
                    Visible: =false
                    X: =765
                    Y: =60
                    ZIndex: =14

            Container1_62 As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =0
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Visible: =CurrentActivityStep.'Step Name' = "Review"
                Width: =0
                ZIndex: =9

                ReviewCompletionSteps_3 As ReviewCompletionSteps:
                    FillPortions: =1
                    Height: =Parent.Height
                    LayoutMinHeight: =100
                    LayoutMinWidth: =100
                    Width: =Parent.Width
                    ZIndex: =3

            NavigationButtons_7 As NavigationButtons:
                LayoutMinHeight: =640
                LayoutMinWidth: =0
                StepStatus: |-
                    =If(
                        varSkip,
                        'Step Status (Activity Steps)'.Skipped,
                        Switch(
                            true,
                            Container1_63.Visible,
                            'Step Status (Activity Steps)'.Completed,
                            Container1_64.Visible,
                            If(
                                CheckboxCanvas3_25.Checked = true,
                                'Step Status (Activity Steps)'.Completed,
                                'Step Status (Activity Steps)'.Incomplete
                            ),
                            Container1_66.Visible,
                            If(
                                CheckboxCanvas3_27.Checked = true,
                                'Step Status (Activity Steps)'.Completed,
                                'Step Status (Activity Steps)'.Incomplete
                            ),
                            Container1_67.Visible,
                            If(
                                CheckboxCanvas3_28.Checked = true,
                                'Step Status (Activity Steps)'.Completed,
                                'Step Status (Activity Steps)'.Incomplete
                            ),
                            Container1_80.Visible,
                            If(
                                CheckboxCanvas5_18.Checked = true,
                                'Step Status (Activity Steps)'.Completed,
                                'Step Status (Activity Steps)'.Incomplete
                            ),
                            Container1_75.Visible,
                            If(
                                CheckboxCanvas5_14.Checked = true,
                                'Step Status (Activity Steps)'.Completed,
                                'Step Status (Activity Steps)'.Incomplete
                            )
                        )
                    )
                StepValues: |-
                    =Switch(
                        true,
                        Container1_64.Visible,
                        Table(
                            {
                                Control: "CheckboxCanvas3_25",
                                Value: Text(CheckboxCanvas3_25.Checked),
                                Type: 'Data Type (Activity Step Values)'.Boolean
                            }
                        ),
                        Container1_66.Visible,
                        Table(
                            {
                                Control: "CheckboxCanvas3_27",
                                Value: Text(CheckboxCanvas3_27.Checked),
                                Type: 'Data Type (Activity Step Values)'.Boolean
                            }
                        ),
                        Container1_67.Visible,
                        Table(
                            {
                                Control: "CheckboxCanvas3_28",
                                Value: Text(CheckboxCanvas3_28.Checked),
                                Type: 'Data Type (Activity Step Values)'.Boolean
                            }
                        ),
                        Container1_80.Visible,
                        Table(
                            {
                                Control: "CheckboxCanvas5_18",
                                Value: Text(CheckboxCanvas5_18.Checked),
                                Type: 'Data Type (Activity Step Values)'.Boolean
                            },
                            {
                                Control: "ComboboxCanvas1_10",
                                Value: Text(ComboboxCanvas1_10.Selected.name),
                                Type: 'Data Type (Activity Step Values)'.String
                            }
                        ),
                        Container1_75.Visible,
                        Table(
                            {
                                Control: "CheckboxCanvas5_14",
                                Value: Text(CheckboxCanvas5_14.Checked),
                                Type: 'Data Type (Activity Step Values)'.Boolean
                            }
                        )
                    )
                ZIndex: =10

        "icoConMainScreenExpand_14 As icon.'3DPrinting'":
            AccessibleLabel: ="Expand step detail"
            AlignInContainer: =AlignInContainer.Start
            BorderColor: =RGBA(0,0,0,0)
            Color: =Color.Black
            DisabledBorderColor: |-
                =ColorValue("#A19F9D")
            DisabledColor: |-
                =ColorValue("#F3F2F1")
            DisabledFill: =RGBA(0,0,0,0)
            DisplayMode: |-
                =If(
                    varDisableControls,
                    DisplayMode.Disabled,
                    DisplayMode.Edit
                )
            Fill: =RGBA(0,0,0,0)
            FocusedBorderColor: |-
                =ColorValue("#605E5C")
            Height: =48
            HoverBorderColor: =
            HoverColor: |-
                =ColorValue("#8A8886")
            HoverFill: =RGBA(0,0,0,0)
            Icon: =Icon.ListScrollEmpty
            OnSelect: |-
                =Set(
                    varExpandHelp,
                    false
                );
                Set(
                    varExpandMenu,
                    false
                )
            PaddingBottom: =10
            PaddingLeft: =12
            PaddingRight: =12
            PaddingTop: =10
            PressedBorderColor: =
            PressedColor: |-
                =ColorValue("#8A8886")
            PressedFill: =RGBA(0,0,0,0)
            TabIndex: =0
            Tooltip: ="Expand step detail"
            Visible: |-
                =And(
                    App.ActiveScreen.Size = ScreenSize.Small,
                    Or(
                        varExpandHelp,
                        varExpandMenu
                    )
                )
            Width: =48
            X: =Self.FocusedBorderThickness
            ZIndex: =3

        cmpHelpAssistant_16 As HelpResources:
            Height: =Parent.Height
            LayoutMinHeight: =0
            LayoutMinWidth: =640
            SetExpandHelp: =App.ActiveScreen.Size <= ScreenSize.Medium
            Width: =cmpHelpAssistant_16.HelpResourcesWidth
            X: =Parent.Width-Self.Width
            ZIndex: =4

