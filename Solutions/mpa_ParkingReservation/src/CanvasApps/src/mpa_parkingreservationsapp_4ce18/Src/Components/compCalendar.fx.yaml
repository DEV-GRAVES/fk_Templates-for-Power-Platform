compCalendar As CanvasComponent:
    CalendarHeight: =768
    CalendarWidth: =1366
    Fill: =RGBA(0, 0, 0, 0)
    Height: =compCalendar.CalendarHeight
    OnReset: =
    Width: =compCalendar.CalendarWidth
    X: =0
    Y: =0
    ZIndex: =1

    conCalendar As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        PaddingBottom: =20
        PaddingLeft: =20
        PaddingRight: =20
        PaddingTop: =20
        Width: =Parent.Width
        ZIndex: =1

        conMonthHeader_CalendarComp As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.Start
            FillPortions: =0
            Height: =50
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutJustifyContent: =LayoutJustifyContent.Center
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
            ZIndex: =1

            icoPrevMonth_Calendar As icon.ChevronLeft:
                AccessibleLabel: ="Go to previous month"
                BorderColor: =RGBA(166, 166, 166, 1)
                Color: =App.Theme.Colors.Primary
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =Self.Color
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =App.Theme.Colors.Primary
                FocusedBorderThickness: =4
                Height: =50
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverColor: =Self.Color
                HoverFill: =RGBA(0, 0, 0, 0)
                Icon: =Icon.ChevronLeft
                OnSelect: |
                    =/*changes month view to previous month*/
                    Set(
                        varFirstDayOfMonth,
                        DateAdd(
                            varFirstDayOfMonth,
                            -1,
                            TimeUnit.Months
                        )
                    );
                    Set(
                        varFirstDayInView,
                        DateAdd(
                            varFirstDayOfMonth,
                            -(Weekday(varFirstDayOfMonth) - 2 + 1),
                            TimeUnit.Days
                        )
                    );
                    Set(
                        varLastDayOfMonth,
                        DateAdd(
                            DateAdd(
                                varFirstDayOfMonth,
                                1,
                                TimeUnit.Months
                            ),
                            -1,
                            TimeUnit.Days
                        )
                    );
                    /*collects calendar events for all days in current month view. Updates varMinDate to prevent duplicate data collection if user returns to this month view*/
                    If(
                        varMinDate > varFirstDayOfMonth,
                        Set(
                            varMinDate,
                            varFirstDayOfMonth
                        );
                        ClearCollect(
                            colMyCalendarEvents,
                            Filter(
                                colAllMyCalendarEvents,
                                'Reservation Start Date' < varMaxDate,
                                'Reservation Start Date' > varMinDate
                            )
                        )
                    );
                    //Resets the date selected to today if it's this month, and blank if it isn't this month
                    Set(
                        varDateSelected,
                        If(
                            Upper(
                                Text(
                                    varFirstDayOfMonth,
                                    "mmmm yyyy"
                                )
                            ) = Upper(
                                Text(
                                    Today(),
                                    "mmmm yyyy"
                                )
                            ),
                            Today(),
                            Blank()
                        )
                    );
                PaddingBottom: =7
                PaddingLeft: =7
                PaddingRight: =7
                PaddingTop: =7
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedColor: =Self.Color
                PressedFill: =RGBA(0, 0, 0, 0)
                TabIndex: =0
                Tooltip: ="View previous month"
                Width: =59
                X: =20
                Y: =80
                ZIndex: =1

            txtMonthHeader As Text:
                Align: ='TextCanvas.Align'.Center
                DisplayMode: =DisplayMode.Edit
                FillPortions: |-
                    =Switch(
                        App.ActiveScreen.Size,
                        ScreenSize.ExtraLarge,
                        1,
                        ScreenSize.Large,
                        1,
                        ScreenSize.Medium,
                        1 ,
                        0
                    )
                FontColor: =
                Height: =32
                LayoutMinHeight: =32
                LayoutMinWidth: =96
                Size: =varThemeFont.H3.size
                Text: =Upper(Text(varFirstDayOfMonth, "mmmm yyyy"))
                Weight: =varThemeFont.H2.weightBold
                Width: =96
                X: =0
                Y: =0
                ZIndex: =3

            icoNextMonth_Calendar As icon.ChevronRight:
                AccessibleLabel: ="Go to next month"
                BorderColor: =RGBA(166, 166, 166, 1)
                Color: =App.Theme.Colors.Primary
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =Self.Color
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =App.Theme.Colors.Primary
                FocusedBorderThickness: =4
                Height: =50
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverColor: =Self.Color
                HoverFill: =RGBA(0, 0, 0, 0)
                Icon: =Icon.ChevronRight
                OnSelect: |
                    =/*changes month view to next month*/
                    Set(
                        varFirstDayOfMonth,
                        DateAdd(
                            varFirstDayOfMonth,
                            1,
                            TimeUnit.Months
                        )
                    );
                    Set(
                        varFirstDayInView,
                        DateAdd(
                            varFirstDayOfMonth,
                            -(Weekday(varFirstDayOfMonth) - 2 + 1),
                            TimeUnit.Days
                        )
                    );
                    /*collects calendar events for all days in current month view. Updates varMaxDate to prevent duplicate data collection if user returns to this month view*/
                    Set(
                        varLastDayOfMonth,
                        DateAdd(
                            DateAdd(
                                varFirstDayOfMonth,
                                1,
                                TimeUnit.Months
                            ),
                            -1,
                            TimeUnit.Days
                        )
                    );
                    If(
                        varLastDayOfMonth > varMaxDate,
                        Set(
                            varMaxDate,
                            varLastDayOfMonth
                        );
                        ClearCollect(
                            colMyCalendarEvents,
                            Filter(
                                colAllMyCalendarEvents,
                                'Reservation Start Date' < varMaxDate,
                                'Reservation Start Date' > varMinDate
                            )
                        )
                    );
                    //Resets the date selected to today if it's this month, and blank if it isn't this month
                    Set(
                        varDateSelected,
                        If(
                            Upper(
                                Text(
                                    varFirstDayOfMonth,
                                    "mmmm yyyy"
                                )
                            ) = Upper(
                                Text(
                                    Today(),
                                    "mmmm yyyy"
                                )
                            ),
                            Today(),
                            Blank()
                        )
                    );
                PaddingBottom: =7
                PaddingLeft: =7
                PaddingRight: =7
                PaddingTop: =7
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedColor: =Self.Color
                PressedFill: =RGBA(0, 0, 0, 0)
                TabIndex: =0
                Tooltip: ="View next month"
                Width: =59
                X: =360
                Y: =80
                ZIndex: =4

        galWeekday_CalendarComp As gallery.WeekdayGallery:
            '#CopilotOverlayLabel': ="Filtered"
            AccessibleLabel: ="Days of the week"
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(166, 166, 166, 1)
            DisplayMode: =DisplayMode.Disabled
            FillPortions: =0
            FocusedBorderColor: =App.Theme.Colors.Primary
            Height: =50
            ItemAccessibleLabel: ="Day of the week"
            Items: =Calendar.WeekdaysShort()
            LayoutMinHeight: =40
            LayoutMinWidth: =290
            OnSelect: =
            ShowScrollbar: =false
            TabIndex: =0
            TemplatePadding: =0
            TemplateSize: =galWeekday_CalendarComp.Width/7
            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
            X: =46
            Y: =139
            ZIndex: =2

            txtWeekdayHeader As Text:
                Align: ='TextCanvas.Align'.Center
                AutoHeight: =true
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =galWeekday_CalendarComp.TemplateHeight + 5
                Size: =varThemeFont.H3.size -1
                Text: |-
                    =
                    Switch(
                        App.ActiveScreen.Size,
                            ScreenSize.Small,
                            If(ThisItem.Value = "Sun",
                        "S",If(ThisItem.Value = "Mon",
                        "M",If(ThisItem.Value = "Tue",
                        "T",If(ThisItem.Value = "Wed",
                        "W",If(ThisItem.Value = "Thu",
                        "Th",If(ThisItem.Value = "Fri",
                        "F",If(ThisItem.Value = "Sat",
                        "S"))))))) ,
                        ThisItem.Value
                    )
                VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                Width: =galWeekday_CalendarComp.TemplateWidth
                Wrap: =false
                X: =0
                Y: =(galWeekday_CalendarComp.TemplateHeight - Self.Height) / 2
                ZIndex: =1

        galCalendar_CalendarComp As gallery.galleryVertical:
            '#CopilotOverlayLabel': ="Filtered"
            AccessibleLabel: ="Calendar"
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(166, 166, 166, 1)
            DelayItemLoading: =true
            FillPortions: =0
            FocusedBorderColor: =App.Theme.Colors.Primary
            Height: =250
            ItemAccessibleLabel: ="Calendar Date"
            Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
            Layout: =Layout.Vertical
            LayoutMinHeight: =200
            LayoutMinWidth: =320
            LoadingSpinner: =LoadingSpinner.Data
            OnSelect: |
                =Set(
                    varDateSelected,
                    DateAdd(
                        varFirstDayInView,
                        ThisItem.Value,
                        TimeUnit.Days
                    )
                );
                //If the date is outside of this month
                If(//If date is in next month
                    varDateSelected > varLastDayOfMonth,/*changes month view to next month*/
                    Set(
                        varFirstDayOfMonth,
                        DateAdd(
                            varFirstDayOfMonth,
                            1,
                            TimeUnit.Months
                        )
                    );
                    Set(
                        varFirstDayInView,
                        DateAdd(
                            varFirstDayOfMonth,
                            -(Weekday(varFirstDayOfMonth) - 2 + 1),
                            TimeUnit.Days
                        )
                    );
                    
                /*collects calendar events for all days in current month view. Updates varMaxDate to prevent duplicate data collection if user returns to this month view*/
                Set(
                        varLastDayOfMonth,
                        DateAdd(
                            DateAdd(
                                varFirstDayOfMonth,
                                1,
                                TimeUnit.Months
                            ),
                            -1,
                            TimeUnit.Days
                        )
                    );
                    If(
                        varLastDayOfMonth > varMaxDate,
                        Set(
                            varMaxDate,
                            varLastDayOfMonth
                        );
                        ClearCollect(
                            colMyCalendarEvents,
                            Filter(
                                colAllMyCalendarEvents,
                                'Reservation Start Date' < varMaxDate,
                                'Reservation Start Date' > varMinDate
                            )
                        )
                    );
                    ,
                //If date is in previous month
                    varDateSelected < varFirstDayOfMonth,
                /*changes month view to previous month*/
                    Set(
                        varFirstDayOfMonth,
                        DateAdd(
                            varFirstDayOfMonth,
                            -1,
                            TimeUnit.Months
                        )
                    );
                    Set(
                        varFirstDayInView,
                        DateAdd(
                            varFirstDayOfMonth,
                            -(Weekday(varFirstDayOfMonth) - 2 + 1),
                            TimeUnit.Days
                        )
                    );
                    Set(
                        varLastDayOfMonth,
                        DateAdd(
                            DateAdd(
                                varFirstDayOfMonth,
                                1,
                                TimeUnit.Months
                            ),
                            -1,
                            TimeUnit.Days
                        )
                    );
                    
                /*collects calendar events for all days in current month view. Updates varMinDate to prevent duplicate data collection if user returns to this month view*/
                If(
                        varMinDate > varFirstDayOfMonth,
                        Set(
                            varMinDate,
                            varFirstDayOfMonth
                        );
                        ClearCollect(
                            colMyCalendarEvents,
                            Filter(
                                colAllMyCalendarEvents,
                                'Reservation Start Date' < varMaxDate,
                                'Reservation Start Date' > varMinDate
                            )
                        )
                    );
                    
                );
            TabIndex: =0
            TemplateFill: |-
                =If(DateAdd(varFirstDayInView,ThisItem.Value)=varDateSelected,App.Theme.Colors.Lighter80,
                    /*Date selected is today*/
                DateAdd(varFirstDayInView,ThisItem.Value)=Today()&&DateAdd(varFirstDayInView,ThisItem.Value)=varDateSelected,Color.Transparent,
                DateAdd(varFirstDayInView,ThisItem.Value)=Today(),App.Theme.Colors.Primary)
            TemplatePadding: =0
            TemplateSize: =40
            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
            WrapCount: =7
            X: =46
            Y: =45
            ZIndex: =3

            btnDate_Calendar As Button:
                AccessibleLabel: ="Date"
                Align: =""
                Appearance: ='ButtonCanvas.Appearance'.Transparent
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                FontColor: |-
                    =
                    If(
                    /*Date selected is this date*/
                    DateAdd(varFirstDayInView,ThisItem.Value)=varDateSelected,
                       ColorValue(varTheme.neutralForeground1),
                    
                    /*The day is outside the range of the currently selected month*/
                    Abs(btnDate_Calendar.Text-ThisItem.Value)>10,
                        ColorValue(varTheme.neutralForegroundDisabled),
                    
                    DateAdd(varFirstDayInView, ThisItem.Value) = Today(), App.Theme.Colors.Lighter80,
                            RGBA(0,0,0,0)
                    )
                Height: =galCalendar_CalendarComp.TemplateHeight - 25
                Icon: =""
                IconRotation: =0
                IconStyle: ="Outline"
                Layout: ="Icon before"
                OnSelect: |-
                    =Set(
                        varDateSelected,
                        DateAdd(
                            varFirstDayInView,
                            ThisItem.Value,
                            TimeUnit.Days
                        )
                    );
                    //If the date is outside of this month
                    If(//If date is in next month
                        varDateSelected > varLastDayOfMonth,/*changes month view to next month*/
                        Set(
                            varFirstDayOfMonth,
                            DateAdd(
                                varFirstDayOfMonth,
                                1,
                                TimeUnit.Months
                            )
                        );
                        Set(
                            varFirstDayInView,
                            DateAdd(
                                varFirstDayOfMonth,
                                -(Weekday(varFirstDayOfMonth) - 2 + 1),
                                TimeUnit.Days
                            )
                        );
                        
                    /*collects calendar events for all days in current month view. Updates varMaxDate to prevent duplicate data collection if user returns to this month view*/
                    Set(
                            varLastDayOfMonth,
                            DateAdd(
                                DateAdd(
                                    varFirstDayOfMonth,
                                    1,
                                    TimeUnit.Months
                                ),
                                -1,
                                TimeUnit.Days
                            )
                        );
                        If(
                            varLastDayOfMonth > varMaxDate,
                            Set(
                                varMaxDate,
                                varLastDayOfMonth
                            );
                            ClearCollect(
                                colMyCalendarEvents,
                                Filter(
                                    colAllMyCalendarEvents,
                                    'Reservation Start Date' < varMaxDate,
                                    'Reservation Start Date' > varMinDate
                                )
                            )
                        );
                        ,
                    //If date is in previous month
                        varDateSelected < varFirstDayOfMonth,
                    /*changes month view to previous month*/
                        Set(
                            varFirstDayOfMonth,
                            DateAdd(
                                varFirstDayOfMonth,
                                -1,
                                TimeUnit.Months
                            )
                        );
                        Set(
                            varFirstDayInView,
                            DateAdd(
                                varFirstDayOfMonth,
                                -(Weekday(varFirstDayOfMonth) - 2 + 1),
                                TimeUnit.Days
                            )
                        );
                        Set(
                            varLastDayOfMonth,
                            DateAdd(
                                DateAdd(
                                    varFirstDayOfMonth,
                                    1,
                                    TimeUnit.Months
                                ),
                                -1,
                                TimeUnit.Days
                            )
                        );
                        
                    /*collects calendar events for all days in current month view. Updates varMinDate to prevent duplicate data collection if user returns to this month view*/
                    If(
                            varMinDate > varFirstDayOfMonth,
                            Set(
                                varMinDate,
                                varFirstDayOfMonth
                            );
                            ClearCollect(
                                colMyCalendarEvents,
                                Filter(
                                    colAllMyCalendarEvents,
                                    'Reservation Start Date' < varMaxDate,
                                    'Reservation Start Date' > varMinDate
                                )
                            )
                        );
                        
                    );
                    Set(
                        varSelectedReservation,
                        LookUp(
                            Reservations,
                            'Reservation Start Date' = varDateSelected && 'Status Reason' = 'Status Reason (Reservations)'.Submitted && 'Owning User'.'Primary Email' = varD365User.'Primary Email'
                        )
                    );
                    If(
                        IsBlank(varSelectedReservation.'Long Term Reservation'),
                        Set(
                            varRemainingDate,
                            varDateSelected - Today()
                        ),
                        Set(
                            varRemainingDate,
                            varSelectedReservation.'Long Term Reservation'.'Start Date' - Today()
                        )
                    )
                Text: =Day(DateAdd(varFirstDayInView,ThisItem.Value, TimeUnit.Days))
                VerticalAlign: =""
                Width: =Self.Height * 2
                X: =(galCalendar_CalendarComp.TemplateWidth - Self.Width) / 2
                Y: =10
                ZIndex: =1

            shpCircle_Calendar As circle:
                BorderColor: =RGBA(166, 166, 166, 1)
                Fill: |-
                    =If(
                        //Date selected is this date
                        DateAdd(
                            varFirstDayInView,
                            ThisItem.Value
                        ) = varDateSelected,
                        App.Theme.Colors.Primary, 
                        //The day is outside the range of the currently selected month
                        Abs(btnDate_Calendar.Text - ThisItem.Value) > 10,
                        App.Theme.Colors.Primary,
                        //Day is not selected and in this month
                        App.Theme.Colors.Primary 
                    )
                FocusedBorderColor: =App.Theme.Colors.Primary
                Height: =Self.Width
                OnSelect: =Select(Parent)
                Visible: |-
                    =/*Visible if calendar events are found on this day*/               
                    CountRows(
                        Filter(
                            colMyCalendarEvents,
                            DateValue('Reservation Start Date') = DateAdd(
                                varFirstDayInView,
                                ThisItem.Value,
                                TimeUnit.Days
                            ) && 'Status Reason' = 'Status Reason (Reservations)'.Submitted && 'Owning User'.'Primary Email' = varD365User.'Primary Email'
                        )
                    ) > 0
                Width: =6.5
                X: =(Parent.TemplateWidth/2) - (Self.Width/2)
                Y: =galCalendar_CalendarComp.TemplateHeight * (0.75)
                ZIndex: =2

