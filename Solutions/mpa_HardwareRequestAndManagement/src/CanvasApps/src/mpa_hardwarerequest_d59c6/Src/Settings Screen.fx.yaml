"'Settings Screen' As screen":
    Fill: =ColorValue(varThemeColors.backgroundFill)

    conSettingsTheme As groupContainer.horizontalAutoLayoutContainer:
        Height: =App.Height-Self.Y
        LayoutGap: =25
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        LayoutWrap: =true
        PaddingLeft: =20
        PaddingRight: =20
        Width: =Parent.Width
        Y: =lblSettingsTitle.Y+lblSettingsTitle.Height + 40
        ZIndex: =2

        conSettingsLightTheme As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =ColorValue(varThemeColors.backgroundFill)
            FillPortions: =0
            Height: =250
            LayoutMinHeight: =100
            LayoutMinWidth: =150
            Width: =250
            ZIndex: =1

            lblLightTheme As label:
                Align: =Align.Center
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H3.face
                FontWeight: =varThemeFont.H3.weight
                Height: =Self.Size * 2.5    
                Italic: =varThemeFont.H3.italic
                PaddingBottom: =10
                PaddingLeft: =0
                PaddingTop: =0
                Role: =TextRole.Heading3
                Size: =varThemeFont.H3.size
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Light Theme"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                Tooltip: =Self.Text
                VerticalAlign: =VerticalAlign.Top
                Width: =Parent.Width
                Y: =Parent.Height - Self.Height
                ZIndex: =1

            imgLightTheme As image:
                AccessibleLabel: |-
                    =With(
                        {Text: "Light Theme"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                BorderThickness: =If(varThemeColors.name="light", 2,0)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                Height: =150
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: =imgSettingsLight
                OnSelect: =Set(varThemeColors, varLightTheme)
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0, 0, 0, 0)
                TabIndex: =0
                Tooltip: =lblLightTheme.Text
                Width: =150
                X: =Parent.Width / 2 - Self.Width / 2
                Y: =Parent.Height*.1
                ZIndex: =2

        conSettingsDarkTheme As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =ColorValue(varThemeColors.backgroundFill)
            FillPortions: =0
            Height: =250
            LayoutMinHeight: =100
            LayoutMinWidth: =150
            Width: =250
            ZIndex: =2

            lblDarkTheme As label:
                Align: =Align.Center
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H3.face
                FontWeight: =varThemeFont.H3.weight
                Height: =Self.Size * 2.5    
                Italic: =varThemeFont.H3.italic
                PaddingBottom: =10
                PaddingLeft: =0
                PaddingTop: =0
                Role: =TextRole.Heading3
                Size: =varThemeFont.H3.size
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Dark Theme"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                Tooltip: =Self.Text
                VerticalAlign: =VerticalAlign.Top
                Width: =Parent.Width
                Y: =Parent.Height - Self.Height
                ZIndex: =1

            imgDarkTheme As image:
                AccessibleLabel: |-
                    =With(
                        {Text: "Dark Theme"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                BorderThickness: =If(varThemeColors.name="dark", 2,0)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                Height: =150
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: =imgSettingsDark
                OnSelect: =Set(varThemeColors, varDarkTheme)
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0, 0, 0, 0)
                TabIndex: =0
                Tooltip: =lblDarkTheme.Text
                Width: =150
                X: =Parent.Width / 2 - Self.Width / 2
                Y: =Parent.Height*.1
                ZIndex: =2

        conSettingsContrastTheme As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =ColorValue(varThemeColors.backgroundFill)
            FillPortions: =0
            Height: =250
            LayoutMinHeight: =100
            LayoutMinWidth: =150
            Width: =250
            ZIndex: =3

            lblContrastTheme As label:
                Align: =Align.Center
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H3.face
                FontWeight: =varThemeFont.H3.weight
                Height: =Self.Size * 2.5    
                Italic: =varThemeFont.H3.italic
                PaddingBottom: =10
                PaddingLeft: =0
                PaddingTop: =0
                Role: =TextRole.Heading3
                Size: =varThemeFont.H3.size
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Contrast Theme"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                Tooltip: =Self.Text
                VerticalAlign: =VerticalAlign.Top
                Width: =Parent.Width
                Y: =Parent.Height - Self.Height
                ZIndex: =1

            imgContrastTheme As image:
                AccessibleLabel: |-
                    =With(
                        {Text: "Contrast Theme"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                BorderThickness: =If(varThemeColors.name="contrast", 2,0)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                Height: =150
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: =imgSettingsContrast
                OnSelect: =Set(varThemeColors, varContrastTheme)
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0, 0, 0, 0)
                TabIndex: =0
                Tooltip: =lblContrastTheme.Text
                Width: =150
                X: =Parent.Width / 2 - Self.Width / 2
                Y: =Parent.Height*.1
                ZIndex: =2

    lblSettingsTitle As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =ColorValue(varThemeColors.text)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        FocusedBorderColor: =ColorValue(varThemeColors.primary)
        FocusedBorderThickness: =4
        Font: =varThemeFont.H1.face
        FontWeight: =varThemeFont.H1.weight
        Height: =80
        Italic: =varThemeFont.H1.italic
        PaddingBottom: =20
        PaddingLeft: =20
        PaddingRight: =20
        PaddingTop: =20
        Role: =TextRole.Heading1
        Size: =varThemeFont.H1.size
        Text: |-
            =// Define a variable named "Text" with the value "{value}"
            With(
                {Text: "Settings"},
                // Check if a localized text exists for "Text" in the user's preferred language
                If(
                    // If the localized text is blank, return the default text
                    IsBlank(
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text 
                        ).'Localized Value'
                    ),
                    Text,
                    // If a localized text is found, return that instead of the default text
                    LookUp(
                        colUserLocalizedStrings,
                        'English Value' = Text 
                    ).'Localized Value'
                )
            )
        Width: =App.Width
        Y: =cmpSettingsHeader.Height
        ZIndex: =3

    cmpSettingsHeader As cmpHeader:
        HeaderWidth: =Parent.Width
        Height: =cmpSettingsHeader.HeaderHeight
        MyCart: ='Request Details Screen'
        Width: =Parent.Width
        ZIndex: =4

