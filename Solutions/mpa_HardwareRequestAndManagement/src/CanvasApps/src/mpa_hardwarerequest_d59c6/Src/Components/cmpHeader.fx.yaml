cmpHeader As CanvasComponent:
    Fill: =RGBA(0, 0, 0, 0)
    HeaderHeight: =50
    HeaderWidth: =1366
    Height: =cmpHeader.HeaderHeight
    IsBackSettingsOn: =true
    MainPageScreen: ='Home Screen'
    MyCart: =App.ActiveScreen
    SettingsPageScreen: =App.ActiveScreen
    Width: =cmpHeader.HeaderWidth
    X: =0
    Y: =0
    ZIndex: =1

    conHeader As groupContainer.horizontalAutoLayoutContainer:
        Fill: =ColorValue(varThemeColors.primary)
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        PaddingLeft: =5
        PaddingRight: =5
        Width: =Parent.Width
        ZIndex: =1

        conLeftHeader As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            DropShadow: =DropShadow.None
            Height: =Parent.Height
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutMinHeight: =0
            LayoutMinWidth: =200
            LayoutMode: =LayoutMode.Auto
            ZIndex: =1

            "icoBack As icon.'3DPrinting'":
                AccessibleLabel: |-
                    =With(
                        {Text: "Back"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =If(varThemeColors.name = "dark" ,  ColorValue(varThemeColors.backgroundFill) , ColorValue(varThemeColors.secondary))
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: =40
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =Self.Color
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.ChevronLeft
                OnSelect: =Back();
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Visible: =cmpHeader.IsBackSettingsOn
                Width: =40
                ZIndex: =1

            AppLogo As image:
                AccessibleLabel: |-
                    =With(
                        {Text: "Logo - Navigate Home"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderThickness: =2
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: =40
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: =varThemeColors.iconimg
                OnSelect: =Navigate(cmpHeader.MainPageScreen)
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedFill: =RGBA(0, 0, 0, 0)
                Tooltip: |-
                    =With(
                        {Text: "Navigate Home"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                Width: =110
                X: =icoBack.X + icoBack.Width + 20
                ZIndex: =2

        conLeftHeaderRight As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            DropShadow: =DropShadow.None
            Height: =Parent.Height
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutGap: =5
            LayoutJustifyContent: =LayoutJustifyContent.End
            LayoutMinHeight: =0
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =2
            PaddingLeft: =2
            PaddingRight: =2
            PaddingTop: =2
            ZIndex: =4

            conRightAligned_HeaderLN As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderStyle: =BorderStyle.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutMinHeight: =50
                LayoutMinWidth: =250
                Width: =lblCountCart.X+lblCountCart.Width
                ZIndex: =1

                "icoShoppingCart As icon.'3DPrinting'":
                    AccessibleLabel: |-
                        =With(
                            {Text: "Settings"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    BorderColor: =ColorValue(varThemeColors.primary)
                    Color: =If(varThemeColors.name = "dark" ,  ColorValue(varThemeColors.backgroundFill) , ColorValue(varThemeColors.secondary))
                    DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                    DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledFill: =RGBA(0,0,0,0)
                    Fill: =RGBA(0,0,0,0)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =4
                    Height: =40
                    HoverBorderColor: =ColorValue(varThemeColors.primary)
                    HoverColor: =Self.Color
                    HoverFill: =RGBA(0,0,0,0)
                    Icon: =Icon.ShoppingCart
                    OnSelect: =
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    PressedBorderColor: =ColorValue(varThemeColors.primary)
                    PressedColor: =ColorValue(varThemeColors.primary)
                    PressedFill: =RGBA(0,0,0,0)
                    Width: =Self.Height
                    Y: =(Parent.Height-Self.Height)/2
                    ZIndex: =1

                lblCountCart As label:
                    Align: =Align.Right
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.secondary)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B3.face
                    FontWeight: =varThemeFont.B3.weight
                    Italic: =varThemeFont.B3.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading2
                    Size: =12
                    Text: |-
                        ="(" & If(
                            IsEmpty(colProductsSelected),
                            0,
                            Sum(
                                colProductsSelected,
                                ProductQty
                            )
                        ) & ")"
                    Visible: =Or(varNewRequest,varEditRequest)
                    Width: |-
                        =If(
                            Or(
                                varNewRequest,
                                varEditRequest
                            ),
                            If(
                                Sum(
                                    colProductsSelected,
                                    ProductQty
                                ) <= 9,
                                25,
                                35
                            ),
                            0
                        )
                    X: =icoShoppingCart.X + icoShoppingCart.Width
                    Y: =(Parent.Height-Self.Height)/2
                    ZIndex: =2

                btnShoppingCart As button:
                    BorderThickness: =0
                    Color: =RGBA(0,0,0,0)
                    Fill: =RGBA(0,0,0,0)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =2
                    HoverColor: =RGBA(0,0,0,0)
                    HoverFill: =RGBA(0,0,0,0)
                    OnSelect: =Navigate('Request Details Screen')
                    PressedBorderColor: =RGBA(0,0,0,0)
                    PressedColor: =RGBA(0,0,0,0)
                    PressedFill: =RGBA(0,0,0,0)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =0
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Request cart"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        ) & If(
                            !IsEmpty(colProductsSelected),
                            ", " & CountRows(colProductsSelected) & " " & With(
                                {Text: "items"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                                If(
                                // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    ),
                                    Text,
                                // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                )
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =(Parent.Height-Self.Height)/2
                    ZIndex: =4

            "icoSettings As icon.'3DPrinting'":
                AccessibleLabel: |-
                    =With(
                        {Text: "Settings"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =If(varThemeColors.name = "dark" ,  ColorValue(varThemeColors.backgroundFill) , ColorValue(varThemeColors.secondary))
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                Height: =40
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =Self.Color
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.Settings
                OnSelect: =Navigate(cmpHeader.SettingsPageScreen);
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: =Self.AccessibleLabel
                Width: =40
                X: =Parent.Width - Self.Width - 60
                ZIndex: =2

            "icoHome As icon.'3DPrinting'":
                AccessibleLabel: |-
                    =With(
                        {Text: "Home"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =If(varThemeColors.name = "dark" ,  ColorValue(varThemeColors.backgroundFill) , ColorValue(varThemeColors.secondary))
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                Height: =40
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =Self.Color
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.Home
                OnSelect: =Navigate('Home Screen');
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: =Self.AccessibleLabel
                Visible: =!varIsHomeScreen
                Width: =40
                X: =Parent.Width - Self.Width - 60
                ZIndex: =3

