"'Request Details Screen' As screen":
    Fill: =ColorValue(varThemeColors.background)
    OnHidden: |
        =UpdateContext({_buttonsDisabled: false});
    OnVisible: |-
        =Reset(cmbRequestBusinessGroup);
        Reset(cmbRequestedFor);
        Reset(txtRequestName);
        If(
            And(
                IsBlank(varSelectedRequest),
                !IsBlank(Param("hardwarerequest"))
            ),
            Set(
                varSelectedRequest,
                LookUp(
                    'Hardware Requests',
                    'Hardware Request' = GUID(Param("hardwarerequest"))
                )
            )
        );
        If(
            And(
                !IsBlank(varSelectedRequest),
                !varNewRequest,
                !varEditRequest
            ),// Only query existing items if viewing request
            Clear(colProductsSelected);
            Clear(colProductsSelectedQuantities);
            ForAll(
                Filter(
                    'Hardware Request Items',
                    'Hardware Request'.'Hardware Request' = varSelectedRequest.'Hardware Request'
                ) As tempRequestItems,
                Collect(
                    colProductsSelected,
                    Table(
                        {
                            ProductName: tempRequestItems.Product.Name,
                            ProductID: tempRequestItems.Product.Product,
                            ProductType: LookUp(
                                Products,
                                Product = tempRequestItems.Product.Product
                            ).'Product Type',
                            ProductPrice: tempRequestItems.'Unit Price',
                            ProductQty: tempRequestItems.Quantity,
                            ProductPartNumber: tempRequestItems.Product.'Part Number',
                            ProductModelNumber: tempRequestItems.Product.'Model Number',
                            ProductImage: tempRequestItems.Product.Image,
                            ProductCurrency: tempRequestItems.Currency
                        }
                    )
                )
            )
        )

    conRequestDetailsMain As groupContainer.verticalAutoLayoutContainer:
        Height: =App.Height-Self.Y
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =10
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowX: =LayoutOverflow.Scroll
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingBottom: =40
        PaddingLeft: =60
        PaddingRight: =60
        PaddingTop: =20
        Width: =App.Width
        Y: =cmpRequestHeader.Height
        ZIndex: =1

        conRequestHeader As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            DropShadow: =DropShadow.None
            Fill: =RGBA(0,0,0,0)
            FillPortions: =0
            Height: |-
                =conRequestFields.Height + If(
                    App.ActiveScreen.Size = 1,
                    btnRequestAddMoreItems.Height,
                    0
                )
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutGap: =60
            LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
            LayoutMinHeight: =100
            LayoutMinWidth: =conRequestTable.Width
            LayoutMode: =LayoutMode.Auto
            LayoutWrap: =true
            PaddingBottom: =5
            PaddingRight: =2
            PaddingTop: =5
            Width: =App.Width
            Y: =cmpRequestHeader.Height
            ZIndex: =1

            conRequestFields As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderStyle: =BorderStyle.None
                BorderThickness: =1
                DropShadow: =DropShadow.None
                Height: |-
                    =With(
                        {_baseHeight: 70},
                        Switch(
                            App.ActiveScreen.Size,
                            ScreenSize.Small,
                            3 * _baseHeight + 12,
                            ScreenSize.Medium,
                            3 * _baseHeight + 12,
                            ScreenSize.Large,
                            2 * _baseHeight + Self.PaddingTop + Self.PaddingBottom,
                            ScreenSize.ExtraLarge,
                            _baseHeight
                        )
                    )
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutGap: =20
                LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                LayoutMinHeight: =0
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutWrap: =true
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                ZIndex: =1

                conRequestName As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    Height: =65
                    LayoutMinHeight: =0
                    LayoutMinWidth: =250
                    Width: =350
                    ZIndex: =1

                    txtRequestName As text:
                        AccessibleLabel: |-
                            =With(
                                {Text: "Request title required"},
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text 
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                )
                            )
                        BorderColor: |-
                            =If(
                                IsBlank(Self.Text),
                                ColorValue(varThemeColors.error),
                                ColorValue(varThemeColors.primaryGray)
                            )
                        BorderThickness: =1
                        Clear: =true
                        Color: =ColorValue(varThemeColors.text)
                        Default: |-
                            =If(
                                varNewRequest,
                                Blank(),
                                varSelectedRequest.Name
                            )
                        DisabledBorderColor: =ColorValue(varThemeColors.primaryGray)
                        DisabledColor: =ColorValue(varThemeColors.disabledText)
                        DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                        DisplayMode: |-
                            =If(
                                Or(
                                    varNewRequest,
                                    varEditRequest
                                ),
                                DisplayMode.Edit,
                                DisplayMode.View
                            )
                        Fill: =ColorValue(varThemeColors.backgroundFill)
                        FocusedBorderColor: |-
                            =If(
                                IsBlank(Self.Text),
                                ColorValue(varThemeColors.error),
                                ColorValue(varThemeColors.focusBorder)
                            )
                        FocusedBorderThickness: =2
                        Font: =varThemeFont.B1.face
                        FontWeight: =varThemeFont.B1.weight
                        Height: =30
                        HintText: |-
                            =With(
                                {Text: "Enter request title"},
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text 
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                )
                            )
                        HoverBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                        HoverColor: =ColorValue(varThemeColors.text)
                        HoverFill: =ColorValue(varThemeColors.backgroundFill)
                        Italic: =varThemeFont.B1.italic
                        MaxLength: =100
                        PaddingLeft: =5
                        PressedBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                        PressedColor: =ColorValue(varThemeColors.text)
                        PressedFill: =ColorValue(varThemeColors.backgroundFill)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =12
                        Tooltip: |-
                            =If(
                                IsBlank(Self.Text),
                                Self.HintText,
                                Self.Text
                            )
                        Width: =Parent.Width-Self.X*2
                        X: =Self.FocusedBorderThickness
                        Y: =lblRequestName.Y+lblRequestName.Height
                        ZIndex: =1

                    lblRequestName As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =ColorValue(varThemeColors.text)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        FocusedBorderColor: =ColorValue(varThemeColors.info)
                        FocusedBorderThickness: =4
                        Font: =varThemeFont.B2.face
                        FontWeight: =varThemeFont.B2.weightBold
                        Height: =30
                        Italic: =varThemeFont.B2.italic
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingTop: =0
                        Role: =TextRole.Heading1
                        Size: =12
                        Text: |
                            =// Define a variable named "Text" with the value "{value}"
                            With(
                                {Text: "Request title" },
                                // Check if a localized text exists for "Text" in the user's preferred language
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text 
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                )
                            ) & " *"
                        Width: =Parent.Width
                        ZIndex: =2

                conRequestDepartment As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    Height: =65
                    LayoutMinHeight: =0
                    LayoutMinWidth: =250
                    Width: =300
                    ZIndex: =2

                    cmbRequestBusinessGroup As combobox:
                        AccessibleLabel: |-
                            =With(
                                {Text: "Business group required"},
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text 
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                )
                            )
                        BorderColor: |-
                            =If(
                                IsBlank(Self.Selected),
                                ColorValue(varThemeColors.error),
                                ColorValue(varThemeColors.primaryGray)
                            )
                        BorderThickness: =1
                        ChevronBackground: =ColorValue(varThemeColors.backgroundFill)
                        ChevronDisabledBackground: =ColorValue(varThemeColors.backgroundFillDisabled)
                        ChevronDisabledFill: |
                            =ColorValue(varThemeColors.text)
                        ChevronFill: =ColorValue(varThemeColors.text)
                        ChevronHoverBackground: =ColorValue(varThemeColors.secondaryGray)
                        ChevronHoverFill: |
                            =ColorValue(varThemeColors.text)
                        Color: =ColorValue(varThemeColors.text)
                        DefaultSelectedItems: |-
                            =If(
                                CountRows('Business Groups') = 1,
                                First('Business Groups'),
                                First(
                                    Filter(
                                        'Business Groups',
                                        'Business Group' = varSelectedRequest.'Business Group'.'Business Group'
                                    )
                                )
                            )
                        DisabledBorderColor: =ColorValue(varThemeColors.primaryGray)
                        DisabledColor: =ColorValue(varThemeColors.disabledText)
                        DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                        DisplayFields: =["mpa_name","domainname"]
                        DisplayMode: |-
                            =If(
                                Or(
                                    varNewRequest,
                                    varEditRequest
                                ),
                                DisplayMode.Edit,
                                DisplayMode.View
                            )
                        Fill: =ColorValue(varThemeColors.backgroundFill)
                        FocusedBorderColor: |-
                            =If(
                                IsBlank(Self.Selected),
                                ColorValue(varThemeColors.error),
                                ColorValue(varThemeColors.focusBorder)
                            )
                        FocusedBorderThickness: =2
                        Font: =varThemeFont.B1.face
                        FontWeight: =varThemeFont.B1.weight
                        Height: =30
                        HoverBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                        HoverColor: =ColorValue(varThemeColors.text)
                        HoverFill: =ColorValue(varThemeColors.secondaryGray)
                        InputTextPlaceholder: |-
                            =With(
                                {Text: "Select business group"},
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text 
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                )
                            )
                        Italic: =varThemeFont.B1.italic
                        Items: |-
                            =Sort(
                                'Business Groups',
                                'Group Name'
                            )
                        NoSelectionText: |-
                            =With(
                                {Text: "Select business group"},
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text 
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                )
                            )
                        PaddingLeft: =12
                        PaddingRight: =10
                        PressedBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                        PressedColor: =ColorValue(varThemeColors.altText)
                        PressedFill: =ColorValue(varThemeColors.backgroundFill)
                        SearchFields: =["mpa_name"]
                        SearchItems: |-
                            =Search(Sort(
                                'Business Groups',
                                'Group Name'
                            ),cmbRequestBusinessGroup.SearchText,"mpa_name")
                        SelectionColor: =ColorValue(varThemeColors.text)
                        SelectionFill: =ColorValue(varThemeColors.secondaryGray)
                        SelectionTagColor: =ColorValue(varThemeColors.altText)
                        SelectionTagFill: =ColorValue(varThemeColors.tertiary)
                        SelectMultiple: =false
                        Size: =12
                        Tooltip: |-
                            =Coalesce(
                                Self.Selected.'Group Name',
                                With(
                                    {Text: "Select group name"},
                                    If(
                                    // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                                    // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                )
                            )
                        Width: =Parent.Width-Self.X*2
                        X: =Self.FocusedBorderThickness
                        Y: =lblRequestBusinessGroup.Y+lblRequestBusinessGroup.Height
                        ZIndex: =1

                    lblRequestBusinessGroup As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =ColorValue(varThemeColors.text)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        FocusedBorderColor: =ColorValue(varThemeColors.info)
                        FocusedBorderThickness: =4
                        Font: =varThemeFont.B2.face
                        FontWeight: =varThemeFont.B2.weightBold
                        Height: =30
                        Italic: =varThemeFont.B2.italic
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingTop: =0
                        Role: =TextRole.Heading1
                        Size: =12
                        Text: |
                            =// Define a variable named "Text" with the value "{value}"
                            With(
                                {Text: "Business group" },
                                // Check if a localized text exists for "Text" in the user's preferred language
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text 
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                )
                            ) & " *"
                        Width: =Parent.Width
                        ZIndex: =2

                conRequestedFor As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    Height: =65
                    LayoutMinHeight: =0
                    LayoutMinWidth: =250
                    Width: =300
                    ZIndex: =3

                    cmbRequestedFor As combobox:
                        AccessibleLabel: |
                            =// Define a variable named "Text" with the value "{value}"
                            With(
                                {Text: "Requested on behalf of" },
                                // Check if a localized text exists for "Text" in the user's preferred language
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text 
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                )
                            )
                        BorderColor: =ColorValue(varThemeColors.primaryGray)
                        BorderThickness: =1
                        ChevronBackground: =ColorValue(varThemeColors.backgroundFill)
                        ChevronDisabledBackground: =ColorValue(varThemeColors.backgroundFillDisabled)
                        ChevronDisabledFill: |
                            =ColorValue(varThemeColors.text)
                        ChevronFill: =ColorValue(varThemeColors.text)
                        ChevronHoverBackground: =ColorValue(varThemeColors.secondaryGray)
                        ChevronHoverFill: |
                            =ColorValue(varThemeColors.text)
                        Color: =ColorValue(varThemeColors.text)
                        DefaultSelectedItems: |-
                            =Filter(
                                Users,
                                User = varSelectedRequest.'Requested For'.User
                            )
                        DisabledBorderColor: =ColorValue(varThemeColors.primaryGray)
                        DisabledColor: =ColorValue(varThemeColors.disabledText)
                        DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                        DisplayFields: =["fullname","domainname"]
                        DisplayMode: |-
                            =If(
                                Or(
                                    varNewRequest,
                                    varEditRequest
                                ),
                                DisplayMode.Edit,
                                DisplayMode.View
                            )
                        Fill: =ColorValue(varThemeColors.backgroundFill)
                        FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                        FocusedBorderThickness: =2
                        Font: =varThemeFont.B1.face
                        FontWeight: =varThemeFont.B1.weight
                        Height: =30
                        HoverBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                        HoverColor: =ColorValue(varThemeColors.text)
                        HoverFill: =ColorValue(varThemeColors.secondaryGray)
                        InputTextPlaceholder: |
                            =// Define a variable named "Text" with the value "{value}"
                            With(
                                {Text: "Select on behalf of" },
                                // Check if a localized text exists for "Text" in the user's preferred language
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text 
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                )
                            )
                        Italic: =varThemeFont.B1.italic
                        Items: |-
                            =Sort(
                                Filter(
                                    Users,
                                    'Users (Views)'.'Enabled Users'
                                ),
                                'Full Name'
                            )
                        NoSelectionText: |
                            =// Define a variable named "Text" with the value "{value}"
                            With(
                                {Text: "Select on behalf of" },
                                // Check if a localized text exists for "Text" in the user's preferred language
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text 
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                )
                            )
                        PaddingLeft: =12
                        PaddingRight: =10
                        PressedBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                        PressedColor: =ColorValue(varThemeColors.altText)
                        PressedFill: =ColorValue(varThemeColors.backgroundFill)
                        SearchFields: =["fullname"]
                        SearchItems: |-
                            =Search(Sort(
                                Filter(
                                    Users,
                                    'Users (Views)'.'Enabled Users'
                                ),
                                'Full Name'
                            ),cmbRequestedFor.SearchText,"fullname")
                        SelectionColor: =ColorValue(varThemeColors.text)
                        SelectionFill: =ColorValue(varThemeColors.secondaryGray)
                        SelectionTagColor: =ColorValue(varThemeColors.altText)
                        SelectionTagFill: =ColorValue(varThemeColors.tertiary)
                        SelectMultiple: =false
                        Size: =12
                        Template: =ListItemTemplate.Double
                        Tooltip: |-
                            =Coalesce(
                                Self.Selected.'Full Name',
                                With(
                                    {Text: "Select on behalf of"},
                                    If(
                                    // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                                    // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                )
                            )
                        Width: =Parent.Width-Self.X*2
                        X: =Self.FocusedBorderThickness
                        Y: =lblRequestFor.Y+lblRequestFor.Height
                        ZIndex: =1

                    lblRequestFor As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =ColorValue(varThemeColors.text)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        FocusedBorderColor: =ColorValue(varThemeColors.info)
                        FocusedBorderThickness: =4
                        Font: =varThemeFont.B2.face
                        FontWeight: =varThemeFont.B2.weightBold
                        Height: =30
                        Italic: =varThemeFont.B2.italic
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingTop: =0
                        Role: =TextRole.Heading1
                        Size: =12
                        Text: |
                            =// Define a variable named "Text" with the value "{value}"
                            With(
                                {Text: "Requested on behalf of" },
                                // Check if a localized text exists for "Text" in the user's preferred language
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text 
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                )
                            )
                        Width: =Parent.Width
                        ZIndex: =2

            btnRequestAddMoreItems As button:
                BorderColor: =ColorValue(varThemeColors.primary)
                BorderThickness: =1
                Color: =ColorValue(varThemeColors.primary)
                DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledColor: =ColorValue(varThemeColors.disabledText)
                DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                Fill: =ColorValue(varThemeColors.backgroundFill)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                FocusedBorderThickness: =2
                Font: =varThemeFont.CTA.face
                FontWeight: =varThemeFont.CTA.weight
                Height: =32
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =ColorValue(varThemeColors.tertiary)
                Italic: =varThemeFont.CTA.italic
                OnSelect: =Navigate('Device Types Screen')
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.altText)
                PressedFill: =ColorValue(varThemeColors.primary)
                RadiusBottomLeft: =6
                RadiusBottomRight: =6
                RadiusTopLeft: =6
                RadiusTopRight: =6
                Size: =varThemeFont.CTA.size
                Text: |-
                    =With(
                        {Text: "Add more items"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                Tooltip: =Self.Text
                Visible: |-
                    =And(
                        Or(
                            varNewRequest,
                            varEditRequest
                        ),
                        !IsEmpty(colProductsSelected)
                    )
                Width: =200
                X: =Parent.Width - Self.Width - 15
                Y: =2
                ZIndex: =3

        conRequestHeaderSubmittedDetails As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            DropShadow: =DropShadow.None
            Fill: =RGBA(0,0,0,0)
            FillPortions: =0
            Height: |-
                =With(
                    {_baseHeight: 105},
                    Switch(
                        App.ActiveScreen.Size,
                        ScreenSize.Small,
                        3 * _baseHeight,
                        ScreenSize.Medium,
                        2 * _baseHeight,
                        _baseHeight
                    )
                )
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutGap: =20
            LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
            LayoutMinHeight: =100
            LayoutMinWidth: =conRequestTable.Width
            LayoutMode: =LayoutMode.Auto
            LayoutWrap: =true
            Visible: =!varNewRequest
            Width: =App.Width
            Y: =120
            ZIndex: =2

            conRequestHeaderSubmittedDetailsRight As groupContainer.manualLayoutContainer:
                DropShadow: =DropShadow.None
                LayoutMinHeight: =100
                LayoutMinWidth: =lblRequestStage_EditRequestList_5.Width+lblRequestStage_EditRequestList_5.X
                ZIndex: =1

                lblRequestStatus_EditRequestList_4 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weightBold
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.B2.size
                    Text: |
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Approval status"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        ) & ": " 
                    Width: =120
                    Y: =25
                    ZIndex: =1

                lblRequestStage_EditRequestList_4 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weightBold
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.B2.size
                    Text: |
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Stage" },
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        ) & ": "
                    Width: =120
                    ZIndex: =2

                lblRequestStatus_EditRequestList_5 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: |-
                        =If(
                            varSelectedRequest.'Approval Status' = 'Approval Status (Hardware Requests)'.Approved,
                            ColorValue(varThemeColors.confirmation),
                            If(
                                varSelectedRequest.'Approval Status' = 'Approval Status (Hardware Requests)'.Rejected,
                                ColorValue(varThemeColors.error),
                                ColorValue(varThemeColors.info)
                            )
                        )
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weight
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =25
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.B2.size
                    Text: =varSelectedRequest.'Approval Status'
                    Width: =100
                    X: =120
                    Y: =25
                    ZIndex: =5

                lblRequestStage_EditRequestList_5 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weight
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.B2.size
                    Text: =varSelectedRequest.Stage
                    Width: =100
                    X: =120
                    ZIndex: =6

                shpColorStatus_MyRequest_3 As circle:
                    AccessibleLabel: |-
                        =With(
                            {Text: "Request Status"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Fill: |-
                        =If(
                            varSelectedRequest.'Approval Status' = 'Approval Status (Hardware Requests)'.Approved,
                            ColorValue(varThemeColors.confirmation),
                            If(
                                varSelectedRequest.'Approval Status' = 'Approval Status (Hardware Requests)'.Rejected,
                                ColorValue(varThemeColors.error),
                                ColorValue(varThemeColors.info)
                            )
                        )
                    Height: =15
                    Width: =15
                    X: =120
                    Y: =30
                    ZIndex: =7

            conRequestHeaderSubmittedDetailsLeft As groupContainer.manualLayoutContainer:
                DropShadow: =DropShadow.None
                Height: =Parent.Height
                LayoutMinHeight: =100
                LayoutMinWidth: =lblRequestApprover_EditRequestList_5.X+lblRequestApprover_EditRequestList_5.Width
                Width: =lblRequestDate_EditRequestList_5.X+lblRequestDate_EditRequestList_5.Width
                ZIndex: =2

                lblRequestDate_EditRequestList_4 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weightBold
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.B2.size
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Requested on"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        ) & ": "
                    Width: =100
                    X: =Parent.PaddingLeft
                    ZIndex: =1

                lblRequestComplete_EditRequestList_4 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weightBold
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.B2.size
                    Text: |
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Completed on"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )  & ": " 
                    Width: =100
                    X: =Parent.PaddingLeft
                    Y: =25
                    ZIndex: =2

                lblRequestApprover_EditRequestList_4 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weightBold
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.B2.size
                    Text: |
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Approver"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        ) & ": "
                    Width: =100
                    X: =Parent.PaddingLeft
                    Y: =lblRequestComplete_EditRequestList_4.Y + lblRequestComplete_EditRequestList_4.Height
                    ZIndex: =3

                lblRequestDate_EditRequestList_5 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weight
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.B2.size
                    Text: |-
                        =Text(
                            varSelectedRequest.'Created On',
                            "mm/dd/yyyy"
                        )
                    Width: =200
                    X: =lblRequestDate_EditRequestList_4.X + lblRequestDate_EditRequestList_4.Width + 5
                    ZIndex: =4

                lblRequestComplete_EditRequestList_5 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weight
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.B2.size
                    Text: |-
                        =Text(
                            varSelectedRequest.'Completed On',
                            "mm/dd/yyyy"
                        )
                    Width: =lblRequestDate_EditRequestList_5.Width
                    X: =lblRequestDate_EditRequestList_5.X
                    Y: =25
                    ZIndex: =5

                lblRequestApprover_EditRequestList_5 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weight
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.B2.size
                    Text: =varSelectedRequest.'Approved By'.'Full Name'
                    Width: =lblRequestDate_EditRequestList_5.Width
                    X: =lblRequestDate_EditRequestList_5.X
                    Y: =lblRequestComplete_EditRequestList_5.Y + lblRequestComplete_EditRequestList_5.Height
                    ZIndex: =6

            conRequestHeaderSubmittedDetailsComments As groupContainer.manualLayoutContainer:
                DropShadow: =DropShadow.None
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                ZIndex: =3

                lblComments_EditRequestList_2 As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weightBold
                    Height: =50
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.B2.size
                    Text: |
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Approval comments" },
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        ) & ": "
                    VerticalAlign: =VerticalAlign.Top
                    Width: =120
                    ZIndex: =1

                txtRequestApprovalComments As text:
                    AccessibleLabel: |-
                        =With(
                            {Text: "Approval comments"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    BorderColor: =ColorValue(varThemeColors.primaryGray)
                    BorderThickness: =1
                    Color: =ColorValue(varThemeColors.text)
                    Default: =varSelectedRequest.'Approval Comments'
                    DisabledBorderColor: =ColorValue(varThemeColors.primaryGray)
                    DisabledColor: =ColorValue(varThemeColors.disabledText)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisplayMode: =DisplayMode.View
                    Fill: =ColorValue(varThemeColors.backgroundFill)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =2
                    Font: =varThemeFont.B1.face
                    FontWeight: =varThemeFont.B1.weight
                    Height: =Parent.Height
                    HoverBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                    HoverColor: =ColorValue(varThemeColors.text)
                    HoverFill: =ColorValue(varThemeColors.backgroundFill)
                    Italic: =varThemeFont.B1.italic
                    MaxLength: =2000
                    Mode: =TextMode.MultiLine
                    PressedBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                    PressedColor: =ColorValue(varThemeColors.text)
                    PressedFill: =ColorValue(varThemeColors.backgroundFill)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Tooltip: |-
                        =If(
                            IsBlank(Self.Text),
                            Self.HintText,
                            Self.Text
                        )
                    Width: =Parent.Width - Self.X
                    X: =lblRequestStage_EditRequestList_5.X
                    ZIndex: =2

        conRequestTable As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =ColorValue(varThemeColors.backgroundFill)
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =galRequestList.LayoutMinHeight + conRequestMainTableHeader.Height + conRequestDetails.Height
            LayoutMinWidth: =conRequestMainTableHeader.LayoutMinWidth
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =1
            PaddingLeft: =1
            PaddingRight: =1
            PaddingTop: =1
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            ZIndex: =3

            conRequestMainTableHeader As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =ColorValue(varThemeColors.tertiaryGray)
                BorderThickness: =1
                Fill: =ColorValue(varThemeColors.tertiaryGray)
                FillPortions: =0
                Height: =60
                LayoutMinHeight: =100
                LayoutMinWidth: =lblRequestMainTableHeaderUnit.LayoutMinWidth + lblRequestMainTableHeaderCategory.LayoutMinWidth + lblRequestMainTableHeaderPrice.LayoutMinWidth + lblRequestMainTableHeaderQty.LayoutMinWidth + lblRequestMainTableHeaderTotalPrice.LayoutMinWidth
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                ZIndex: =1

                lblRequestMainTableHeaderUnit As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.altText)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FillPortions: =2
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weightBold
                    Height: =Parent.Height
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =15
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.B2.size
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Device"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =300
                    Wrap: =false
                    ZIndex: =1

                lblRequestMainTableHeaderCategory As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.altText)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FillPortions: =1
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weightBold
                    Height: =Parent.Height
                    Italic: =varThemeFont.B2.italic
                    LayoutMinWidth: =100
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.B2.size
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Category"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =200
                    Wrap: =false
                    X: =lblRequestMainTableHeaderUnit.X +lblRequestMainTableHeaderUnit.Width
                    ZIndex: =2

                lblRequestMainTableHeaderPrice As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.altText)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FillPortions: =1
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weightBold
                    Height: =Parent.Height
                    Italic: =varThemeFont.B2.italic
                    LayoutMinWidth: =100
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.B2.size
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Price"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =
                    Wrap: =false
                    X: =lblRequestMainTableHeaderCategory.X + lblRequestMainTableHeaderCategory.Width
                    ZIndex: =3

                lblRequestMainTableHeaderQty As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.altText)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FillPortions: =1
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weightBold
                    Height: =Parent.Height
                    Italic: =varThemeFont.B2.italic
                    LayoutMinWidth: =100
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.B2.size
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Quantity"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =
                    Wrap: =false
                    X: =lblRequestMainTableHeaderPrice.X + lblRequestMainTableHeaderPrice.Width + 40
                    ZIndex: =4

                lblRequestMainTableHeaderTotalPrice As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.altText)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FillPortions: =1
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weightBold
                    Height: =Parent.Height
                    Italic: =varThemeFont.B2.italic
                    LayoutMinWidth: =100
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.B2.size
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Total price"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =
                    Wrap: =false
                    X: =lblRequestMainTableHeaderQty.X + lblRequestMainTableHeaderQty.Width
                    ZIndex: =5

            "galRequestList As gallery.'BrowseLayout_Vertical_ThreeTextVariant_ver5.0'":
                AccessibleLabel: |-
                    =With(
                        {Text: "Request items"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    )
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =ColorValue(varThemeColors.primaryGray)
                DelayItemLoading: =true
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                FocusedBorderThickness: =2
                Height: =
                Items: =colProductsSelected
                Layout: =Layout.Vertical
                LayoutMinHeight: =Self.TemplateHeight*2
                LayoutMinWidth: =conRequestMainTableHeader.LayoutMinWidth
                LoadingSpinner: =LoadingSpinner.Data
                TabIndex: =0
                TemplatePadding: =0
                TemplateSize: =90
                Visible: =!IsEmpty(colProductsSelected)
                Width: =Parent.Width - (Parent.PaddingLeft *2 )
                Y: =
                ZIndex: =2

                reqRequestSeperator As rectangle:
                    AccessibleLabel: |-
                        =With(
                            {Text: "Request Line"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    BorderColor: =RGBA(0, 0, 0, 0)
                    DisabledFill: =ColorValue(varThemeColors.primary)
                    DisplayMode: =DisplayMode.View
                    Fill: =ColorValue(varThemeColors.secondaryGray)
                    Height: =1
                    HoverFill: =ColorValue(varThemeColors.primary)
                    OnSelect: =Select(Parent)
                    PressedFill: =ColorValue(varThemeColors.primary)
                    Width: =Parent.Width * .97
                    X: =Parent.Width * .03 / 2
                    Y: =89
                    ZIndex: =1

                btnRemove As button:
                    BorderColor: =ColorValue(varThemeColors.primary)
                    BorderThickness: =1
                    Color: =ColorValue(varThemeColors.primary)
                    DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledColor: =ColorValue(varThemeColors.disabledText)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    Fill: =ColorValue(varThemeColors.backgroundFill)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =2
                    Font: =varThemeFont.CTA.face
                    FontWeight: =varThemeFont.CTA.weight
                    Height: =32
                    HoverBorderColor: =ColorValue(varThemeColors.primary)
                    HoverColor: =ColorValue(varThemeColors.altText)
                    HoverFill: =ColorValue(varThemeColors.tertiary)
                    Italic: =varThemeFont.CTA.italic
                    OnSelect: |-
                        =Remove(
                            colProductsSelected,
                            ThisItem
                        )
                    PressedBorderColor: =ColorValue(varThemeColors.primary)
                    PressedColor: =ColorValue(varThemeColors.altText)
                    PressedFill: =ColorValue(varThemeColors.primary)
                    RadiusBottomLeft: =6
                    RadiusBottomRight: =6
                    RadiusTopLeft: =6
                    RadiusTopRight: =6
                    Size: =varThemeFont.CTA.size
                    Text: |-
                        =With(
                            {Text: "Remove"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Visible: =Or(varNewRequest,varEditRequest)
                    Width: =100
                    X: =Parent.TemplateWidth-Self.Width-20
                    Y: =btnSubtractQty.Y
                    ZIndex: =2

                lblTotalPrice As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weight
                    Height: =Parent.TemplateHeight
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.B2.size
                    Text: |-
                        =ThisItem.ProductCurrency.'Currency Symbol' & " " & Text(
                            ThisItem.ProductPrice * txtQty.Text,
                            "#,###.00"
                        )
                    Tooltip: =Self.Text
                    Width: =lblRequestMainTableHeaderTotalPrice.Width - btnRemove.Width-30
                    Wrap: =false
                    X: =lblRequestMainTableHeaderTotalPrice.X
                    ZIndex: =3

                btnAddtractQty As button:
                    BorderColor: =ColorValue(varThemeColors.primaryGray)
                    BorderThickness: =0
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledColor: =ColorValue(varThemeColors.disabledText)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    Fill: =ColorValue(varThemeColors.backgroundFill)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =2
                    Font: =varThemeFont.H3.face
                    FontWeight: =varThemeFont.H3.weight
                    Height: =32
                    HoverBorderColor: =ColorValue(varThemeColors.primary)
                    HoverColor: =ColorValue(varThemeColors.altText)
                    HoverFill: =ColorValue(varThemeColors.tertiary)
                    Italic: =varThemeFont.H3.italic
                    OnSelect: |-
                        =Patch(
                            colProductsSelected,
                            LookUp(
                                colProductsSelected,
                                ProductID = ThisItem.ProductID
                            ),
                            {ProductQty: Value(txtQty.Text) + 1}
                        );
                        SetFocus(Self)
                    PaddingBottom: =10
                    PressedBorderColor: =ColorValue(varThemeColors.primary)
                    PressedColor: =ColorValue(varThemeColors.altText)
                    PressedFill: =ColorValue(varThemeColors.primary)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =varThemeFont.H3.size
                    Text: |-
                        =With(
                            {Text: "+"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Increase quantity"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Visible: =Or(varNewRequest,varEditRequest)
                    Width: =30
                    X: =txtQty.X + txtQty.Width + Self.FocusedBorderThickness
                    Y: =(Parent.TemplateHeight-Self.Height)/2
                    ZIndex: =4

                txtQty As text:
                    AccessibleLabel: |-
                        =With(
                            {Text: "Quantity of Product"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Align: =Align.Center
                    BorderColor: =ColorValue(varThemeColors.primaryGray)
                    BorderThickness: =1
                    Color: =ColorValue(varThemeColors.text)
                    Default: =ThisItem.ProductQty
                    DisabledBorderColor: =ColorValue(varThemeColors.primaryGray)
                    DisabledColor: =ColorValue(varThemeColors.disabledText)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    Fill: =ColorValue(varThemeColors.backgroundFill)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =2
                    Font: =varThemeFont.B1.face
                    FontWeight: =varThemeFont.B1.weight
                    Format: =TextFormat.Number
                    Height: =32
                    HintText: |-
                        =With(
                            {Text: "0"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    HoverBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                    HoverColor: =ColorValue(varThemeColors.text)
                    HoverFill: =ColorValue(varThemeColors.backgroundFill)
                    Italic: =varThemeFont.B1.italic
                    OnChange: |-
                        =If(
                            Value(Self.Text) <= 0,
                            Patch(
                                colProductsSelected,
                                LookUp(
                                    colProductsSelected,
                                    ProductID = ThisItem.ProductID
                                ),
                                {
                                    ProductQty: LookUp(
                                        colProductsSelected,
                                        ProductID = ThisItem.ProductID
                                    ).ProductQty
                                }
                            ),
                            Patch(
                                colProductsSelected,
                                LookUp(
                                    colProductsSelected,
                                    ProductID = ThisItem.ProductID
                                ),
                                {ProductQty: Value(txtQty.Text)}
                            )
                        );
                        SetFocus(Self);
                        Reset(Self)
                    OnSelect: |-
                        =Patch(
                            colProductsSelected,
                            LookUp(
                                colProductsSelected,
                                ProductID = ThisItem.ProductID
                            ),
                            {ProductQty: Value(txtQty.Text)}
                        );
                        SetFocus(Self)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                    PressedColor: =ColorValue(varThemeColors.text)
                    PressedFill: =ColorValue(varThemeColors.backgroundFill)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10
                    Visible: =Or(varNewRequest,varEditRequest)
                    Width: =30
                    X: =btnSubtractQty.X+btnSubtractQty.Width+Self.FocusedBorderThickness
                    Y: =(Parent.TemplateHeight-Self.Height)/2
                    ZIndex: =5

                btnSubtractQty As button:
                    BorderColor: =ColorValue(varThemeColors.primaryGray)
                    BorderThickness: =0
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledColor: =ColorValue(varThemeColors.disabledText)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    Fill: =ColorValue(varThemeColors.backgroundFill)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =2
                    Font: =varThemeFont.H3.face
                    FontWeight: =varThemeFont.H3.weight
                    Height: =32
                    HoverBorderColor: =ColorValue(varThemeColors.primary)
                    HoverColor: =ColorValue(varThemeColors.altText)
                    HoverFill: =ColorValue(varThemeColors.tertiary)
                    Italic: =varThemeFont.H3.italic
                    OnSelect: |-
                        =If(
                            Value(txtQty.Text) > 1,
                            Patch(
                                colProductsSelected,
                                LookUp(
                                    colProductsSelected,
                                    ProductID = ThisItem.ProductID
                                ),
                                {ProductQty: Value(txtQty.Text) - 1}
                            );
                            
                        );
                        SetFocus(Self)
                    PaddingBottom: =10
                    PressedBorderColor: =ColorValue(varThemeColors.primary)
                    PressedColor: =ColorValue(varThemeColors.altText)
                    PressedFill: =ColorValue(varThemeColors.primary)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =varThemeFont.H3.size
                    Text: |-
                        =With(
                            {Text: "-"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Decrease quantity"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Visible: =Or(varNewRequest,varEditRequest)
                    Width: =30
                    X: =lblRequestMainTableHeaderQty.X
                    Y: =(Parent.TemplateHeight-Self.Height)/2
                    ZIndex: =6

                lblQuantity As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weight
                    Height: =Parent.TemplateHeight
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.B2.size
                    Text: =ThisItem.ProductQty
                    Visible: =!btnSubtractQty.Visible
                    Width: =lblRequestMainTableHeaderQty.Width
                    X: =lblRequestMainTableHeaderQty.X
                    ZIndex: =7

                lblPrice As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weight
                    Height: =Parent.TemplateHeight
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.B2.size
                    Text: |-
                        =ThisItem.ProductCurrency.'Currency Symbol' & " " & Text(
                            ThisItem.ProductPrice,
                            "#,###.00"
                        )
                    Width: =lblRequestMainTableHeaderPrice.Width
                    X: =lblRequestMainTableHeaderPrice.X
                    ZIndex: =8

                lblCategory As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weight
                    Height: =Parent.TemplateHeight
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.B2.size
                    Text: =ThisItem.ProductType.Name
                    Tooltip: =Self.Text
                    Width: =lblRequestMainTableHeaderCategory.Width
                    X: =lblRequestMainTableHeaderCategory.X
                    ZIndex: =9

                lblProductName As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weight
                    Height: =Parent.TemplateHeight
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =10
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.B2.size
                    Text: =ThisItem.ProductName
                    Tooltip: =Self.Text
                    Width: =lblRequestMainTableHeaderUnit.Width - imgRequest.Width - 20
                    Wrap: =false
                    X: =lblRequestMainTableHeaderUnit.Width - Self.Width
                    ZIndex: =10

                imgRequest As image:
                    AccessibleLabel: |-
                        =With(
                            {Text: "Product image"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ) 
                        ) & " " & ThisItem.ProductName
                    Height: =Parent.TemplateHeight
                    Image: |-
                        =If(
                            IsBlank(ThisItem.ProductImage),
                            'no-image',
                            ThisItem.ProductImage
                        )
                    OnSelect: =Select(Parent)
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    Width: |-
                        =If(
                            App.ActiveScreen.Size = ScreenSize.Small,
                            0,
                            Self.Height
                        )
                    ZIndex: =11

            conRequestDetails As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =ColorValue(varThemeColors.primaryGray)
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: |-
                    =If(
                        Or(
                            App.ActiveScreen.Size = ScreenSize.Medium,
                            App.ActiveScreen.Size = ScreenSize.Small
                        ),
                        325,
                        200
                    )
                LayoutMinHeight: =50
                LayoutMinWidth: =250
                PaddingBottom: =20
                Visible: =galRequestList.Visible
                ZIndex: =3

                btnRequestCancel As button:
                    BorderColor: =ColorValue(varThemeColors.primary)
                    BorderThickness: =1
                    Color: =ColorValue(varThemeColors.primary)
                    DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledColor: =ColorValue(varThemeColors.disabledText)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    Fill: =ColorValue(varThemeColors.backgroundFill)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =2
                    Font: =varThemeFont.CTA.face
                    FontWeight: =varThemeFont.CTA.weight
                    Height: =32
                    HoverBorderColor: =ColorValue(varThemeColors.primary)
                    HoverColor: =ColorValue(varThemeColors.altText)
                    HoverFill: =ColorValue(varThemeColors.tertiary)
                    Italic: =varThemeFont.CTA.italic
                    OnSelect: |-
                        =Clear(colProductsSelected);
                        Clear(colProductsSelectedQuantities);
                        Navigate('Home Screen');
                        Set(
                            varSelectedRequest,
                            Blank()
                        );
                        Set(
                            varNewRequest,
                            false
                        );
                        Set(
                            varEditRequest,
                            false
                        )
                    PressedBorderColor: =ColorValue(varThemeColors.primary)
                    PressedColor: =ColorValue(varThemeColors.altText)
                    PressedFill: =ColorValue(varThemeColors.primary)
                    RadiusBottomLeft: =6
                    RadiusBottomRight: =6
                    RadiusTopLeft: =6
                    RadiusTopRight: =6
                    Size: =varThemeFont.CTA.size
                    Text: |-
                        =With(
                            {Text: "Cancel"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Visible: =Or(varNewRequest,varEditRequest)
                    Width: =150
                    X: = btnRequestSubmit.X - btnRequestSubmit.Width - 10
                    Y: |-
                        =If(
                            Or(
                                App.ActiveScreen.Size = ScreenSize.Medium,
                                App.ActiveScreen.Size = ScreenSize.Small
                            ),
                            lblRequestTotalPrice.Y + lblRequestTotalPrice.Height + 20,
                            txtRequestAdditionalDetails.Y + txtRequestAdditionalDetails.Height - Self.Height
                        )
                    ZIndex: =1

                btnRequestDeleteRequest As button:
                    BorderColor: =ColorValue(varThemeColors.primary)
                    BorderThickness: =1
                    Color: =ColorValue(varThemeColors.primary)
                    DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledColor: =ColorValue(varThemeColors.disabledText)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisplayMode: |-
                        =If(
                            _buttonsDisabled,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =ColorValue(varThemeColors.backgroundFill)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =2
                    Font: =varThemeFont.CTA.face
                    FontWeight: =varThemeFont.CTA.weight
                    Height: =32
                    HoverBorderColor: =ColorValue(varThemeColors.primary)
                    HoverColor: =ColorValue(varThemeColors.altText)
                    HoverFill: =ColorValue(varThemeColors.tertiary)
                    Italic: =varThemeFont.CTA.italic
                    OnSelect: |-
                        =If(
                            varSelectedRequest.'Approval Status' <> 'Approval Status (Hardware Requests)'.Pending,
                            Notify(
                                With(
                                    {Text: "This request has already been approved or rejected and cannot be modified. Work directly with the approver to make any changes."},
                                    If(
                                // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                                // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                ),
                                NotificationType.Warning
                            );
                            UpdateContext({_buttonsDisabled: true});
                            //disbable the delete and edit buttons
                        ,
                            IfError(
                                Remove(
                                    'Hardware Requests',
                                    varSelectedRequest
                                ),
                                Notify(
                                    With(
                                        {Text: "Error in deleting hardware request"},
                                        If(
                                // If the localized text is blank, return the default text
                                            IsBlank(
                                                LookUp(
                                                    colUserLocalizedStrings,
                                                    'English Value' = Text
                                                ).'Localized Value'
                                            ),
                                            Text,
                                // If a localized text is found, return that instead of the default text
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        )
                                    ) & ": " & First(Errors('Hardware Requests')).Message,
                                    NotificationType.Error,
                                    0
                                ),
                                Navigate(
                                    'Success Screen',
                                    Transition.None,
                                    {
                                        _mainMessage: "Request deleted",
                                        _subMessage: "You have successfully deleted the hardware request."
                                    }
                                );
                                Clear(colProductsSelected);
                                Clear(colProductsSelectedQuantities);
                            )
                        )
                    PressedBorderColor: =ColorValue(varThemeColors.primary)
                    PressedColor: =ColorValue(varThemeColors.altText)
                    PressedFill: =ColorValue(varThemeColors.primary)
                    RadiusBottomLeft: =6
                    RadiusBottomRight: =6
                    RadiusTopLeft: =6
                    RadiusTopRight: =6
                    Size: =varThemeFont.CTA.size
                    Text: |-
                        =With(
                            {Text: "Delete request"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Visible: =btnRequestEdit.Visible
                    Width: =150
                    X: = btnRequestSubmit.X - btnRequestSubmit.Width - 10
                    Y: |-
                        =If(
                            Or(
                                App.ActiveScreen.Size = ScreenSize.Medium,
                                App.ActiveScreen.Size = ScreenSize.Small
                            ),
                            lblRequestTotalPrice.Y + lblRequestTotalPrice.Height + 20,
                            txtRequestAdditionalDetails.Y + txtRequestAdditionalDetails.Height - Self.Height
                        )
                    ZIndex: =2

                btnRequestSubmit As button:
                    BorderColor: =ColorValue(varThemeColors.primary)
                    BorderThickness: =1
                    Color: =ColorValue(varThemeColors.altText)
                    DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledColor: =ColorValue(varThemeColors.disabledText)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    Fill: =ColorValue(varThemeColors.primary)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =2
                    Font: =varThemeFont.CTA.face
                    FontWeight: =varThemeFont.CTA.weight
                    Height: =32
                    HoverBorderColor: =ColorValue(varThemeColors.primary)
                    HoverColor: =ColorValue(varThemeColors.altText)
                    HoverFill: =ColorValue(varThemeColors.tertiary)
                    Italic: =varThemeFont.CTA.italic
                    OnSelect: |
                        =//Check to see if all required information is populated first and build a temporary collection of required fields missing
                        Clear(colRequiredFieldsTemp);
                        If(
                            IsBlank(txtRequestName.Text),
                            Collect(
                                colRequiredFieldsTemp,
                                lblRequestName.Text
                            )
                        );
                        If(
                            IsBlank(cmbRequestBusinessGroup.Selected),
                            Collect(
                                colRequiredFieldsTemp,
                                lblRequestBusinessGroup.Text
                            )
                        );
                        If(
                            !IsEmpty(colRequiredFieldsTemp),//raise error if required fields missing
                            Notify(
                                Substitute(
                                    With(
                                        {Text: "The following information is required before saving"},
                                        If(
                                // If the localized text is blank, return the default text
                                            IsBlank(
                                                LookUp(
                                                    colUserLocalizedStrings,
                                                    'English Value' = Text
                                                ).'Localized Value'
                                            ),
                                            Text,
                                // If a localized text is found, return that instead of the default text
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        )
                                    ) & ": " & Concat(
                                        colRequiredFieldsTemp,
                                        Value,
                                        ", "
                                    ),
                                    " *",
                                    ""
                                ),
                                NotificationType.Error,
                                0
                            ),
                            IfError(//error catch
                                UpdateContext(
                                    {
                                        _request: // variables of submitted request
                        Patch(
                                            'Hardware Requests',
                                            Coalesce(//determine to update existing request or create new
                                                LookUp(
                                                    'Hardware Requests',
                                                    'Hardware Request' = varSelectedRequest.'Hardware Request'
                                                ),
                                                Defaults('Hardware Requests')
                                            ),
                                            {
                                                Name: Trim(txtRequestName.Text),
                                                'Approval Status': 'Approval Status (Hardware Requests)'.Pending,
                                                'Additional Details': Trim(txtRequestAdditionalDetails.Text),
                                                Stage: 'Stage (Hardware Requests)'.'1-Review',
                                                'Submitted On': Now(),
                                                'Submitted By': varUser,
                                                'Requested For': cmbRequestedFor.Selected,
                                                'Business Group': cmbRequestBusinessGroup.Selected
                                            }
                                        )
                                    }
                                ),
                                Notify(
                                    With(
                                        {Text: "Error in saving request"},
                                        If(
                                // If the localized text is blank, return the default text
                                            IsBlank(
                                                LookUp(
                                                    colUserLocalizedStrings,
                                                    'English Value' = Text
                                                ).'Localized Value'
                                            ),
                                            Text,
                                // If a localized text is found, return that instead of the default text
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        )
                                    ) & ": " & First(Errors('Hardware Requests')).Message,
                                    NotificationType.Error,
                                    0
                                );
                            );
                            IfError(//error catch
                                If(
                                    varEditRequest,//first delete existing line items and replace with latest if editing
                                    RemoveIf(
                                        'Hardware Request Items',
                                        'Hardware Request'.'Hardware Request' = _request.'Hardware Request'
                                    )
                                );
                                ForAll(//looping of the data
                                    colProductsSelected,
                                    Patch(//Insert in Purchasing Request Line Items
                                        'Hardware Request Items',
                                        Defaults('Hardware Request Items'),
                                        {
                                            Names: ThisRecord.ProductName,
                                            'Hardware Request': _request,
                                            Product: LookUp(//Lookup of Product
                                                Products,
                                                Product = ProductID
                                            ),
                                            Quantity: ThisRecord.ProductQty,
                                            'Unit Price': ThisRecord.ProductPrice
                                        }
                                    )
                                ),
                                Notify(
                                    With(
                                        {Text: "Error in creating new request line item"},
                                        If(
                                // If the localized text is blank, return the default text
                                            IsBlank(
                                                LookUp(
                                                    colUserLocalizedStrings,
                                                    'English Value' = Text
                                                ).'Localized Value'
                                            ),
                                            Text,
                                // If a localized text is found, return that instead of the default text
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        )
                                    ) & ": " & First(Errors('Hardware Request Items')).Message,
                                    NotificationType.Error,
                                    0
                                );
                            );
                            //Submit an approval
                        HardwareRequestSubmittedForApproval.Run(_request.'Hardware Request');
                            Clear(colProductsSelected);
                            Clear(colProductsSelectedQuantities);
                            
                        // Selected Product,
                        Reset(txtRequestAdditionalDetails);
                            //Clearing the Additional Details
                        Navigate(
                                'Success Screen',
                                Transition.None,
                                {
                                    _mainMessage: "Request submitted",
                                    _subMessage: "You have successfully submitted a hardware request. As a next step, the request will be reviewed for approval at which point you will be notified."
                                }
                            );
                            // Navigate to Success Screen
                        //Reset request mode variables
                        Set(
                                varNewRequest,
                                false
                            );
                            Set(
                                varEditRequest,
                                false
                            )
                        );
                        Clear(colRequiredFieldsTemp);
                    PressedBorderColor: =ColorValue(varThemeColors.primary)
                    PressedColor: =ColorValue(varThemeColors.altText)
                    PressedFill: =ColorValue(varThemeColors.primary)
                    RadiusBottomLeft: =6
                    RadiusBottomRight: =6
                    RadiusTopLeft: =6
                    RadiusTopRight: =6
                    Size: =varThemeFont.CTA.size
                    Text: |-
                        =With(
                            {Text: "Submit request"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Visible: =Or(varNewRequest,varEditRequest)
                    Width: =150
                    X: |-
                        =If(
                            Or(
                                App.ActiveScreen.Size = ScreenSize.Medium,
                                App.ActiveScreen.Size = ScreenSize.Small
                            ),
                            txtRequestAdditionalDetails.X+btnRequestCancel.Width+10,
                            Parent.Width - Self.Width - 30
                        )
                    Y: =btnRequestCancel.Y
                    ZIndex: =3

                btnRequestEdit As button:
                    BorderColor: =ColorValue(varThemeColors.primary)
                    BorderThickness: =1
                    Color: =ColorValue(varThemeColors.altText)
                    DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledColor: =ColorValue(varThemeColors.disabledText)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisplayMode: |-
                        =If(
                            _buttonsDisabled,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =ColorValue(varThemeColors.primary)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =2
                    Font: =varThemeFont.CTA.face
                    FontWeight: =varThemeFont.CTA.weight
                    Height: =32
                    HoverBorderColor: =ColorValue(varThemeColors.primary)
                    HoverColor: =ColorValue(varThemeColors.altText)
                    HoverFill: =ColorValue(varThemeColors.tertiary)
                    Italic: =varThemeFont.CTA.italic
                    OnSelect: |-
                        =If(
                            varSelectedRequest.'Approval Status' <> 'Approval Status (Hardware Requests)'.Pending,
                            Notify(
                                With(
                                    {Text: "This request has already been approved or rejected and cannot be modified. Work directly with the approver to make any changes."},
                                    If(
                                // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                                // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                ),
                                NotificationType.Warning
                            );
                            UpdateContext({_buttonsDisabled:true}); //disbable the delete and edit buttons
                            ,
                            Set(
                                varEditRequest,
                                true
                            )
                        )
                    PressedBorderColor: =ColorValue(varThemeColors.primary)
                    PressedColor: =ColorValue(varThemeColors.altText)
                    PressedFill: =ColorValue(varThemeColors.primary)
                    RadiusBottomLeft: =6
                    RadiusBottomRight: =6
                    RadiusTopLeft: =6
                    RadiusTopRight: =6
                    Size: =varThemeFont.CTA.size
                    Text: |-
                        =With(
                            {Text: "Edit request"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Visible: |-
                        =And(
                            !varNewRequest,
                            !varEditRequest
                        )
                    Width: =150
                    X: |-
                        =If(
                            Or(
                                App.ActiveScreen.Size = ScreenSize.Medium,
                                App.ActiveScreen.Size = ScreenSize.Small
                            ),
                            txtRequestAdditionalDetails.X+btnRequestCancel.Width+10,
                            Parent.Width - Self.Width - 30
                        )
                    Y: =btnRequestCancel.Y
                    ZIndex: =4

                lblRequestTotalPriceAmount As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.H2.face
                    FontWeight: =varThemeFont.H2.weight
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.H1.italic
                    PaddingBottom: =0
                    PaddingLeft: =10
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.H2.size
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: First(colProductsSelected).ProductCurrency.'Currency Symbol'},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        ) & " " &Text(
                            Sum (
                                galRequestList.AllItems,
                                ProductPrice
                            ),
                            "#,###.00"
                        )
                    Width: |
                        =Len(lblRequestTotalPriceAmount.Text) * 17
                    X: |-
                        =If(
                            Or(
                                App.ActiveScreen.Size = ScreenSize.Medium,
                                App.ActiveScreen.Size = ScreenSize.Small
                            ),
                            lblRequestTotalPrice.X + lblRequestTotalPrice.Width + 20,
                            lblRequestMainTableHeaderTotalPrice.X
                        )
                    Y: =lblRequestTotalPrice.Y
                    ZIndex: =5

                lblRequestTotalPrice As label:
                    Align: |
                        =Align.Right
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B1.face
                    FontWeight: =varThemeFont.B1.weight
                    Height: =lblRequestTotalPriceAmount.Height
                    Italic: =varThemeFont.B1.italic
                    PaddingBottom: =0
                    PaddingLeft: =10
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: |
                        =varThemeFont.B1.size
                    Text: |
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Total"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        ) & " (" & Sum (galRequestList.AllItems, txtQty.Text) & " "&
                        // Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "items"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        ) & ") :"
                    Width: |-
                        =If(
                            Or(
                                App.ActiveScreen.Size = ScreenSize.Medium,
                                App.ActiveScreen.Size = ScreenSize.Small
                            ),
                            140,
                            lblRequestMainTableHeaderQty.Width
                        )
                    X: |-
                        =If(
                            Or(
                                App.ActiveScreen.Size = ScreenSize.Medium,
                                App.ActiveScreen.Size = ScreenSize.Small
                            ),
                            txtRequestAdditionalDetails.X,
                            lblRequestMainTableHeaderQty.X
                        )
                    Y: |-
                        =If(
                            Or(
                                App.ActiveScreen.Size = ScreenSize.Medium,
                                App.ActiveScreen.Size = ScreenSize.Small
                            ),
                            txtRequestAdditionalDetails.Y + txtRequestAdditionalDetails.Height + 20,
                            0
                        )
                    ZIndex: =6

                txtRequestAdditionalDetails As text:
                    AccessibleLabel: |-
                        =With(
                            {Text: "Additional details"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    BorderColor: =ColorValue(varThemeColors.primaryGray)
                    BorderThickness: =1
                    Color: =ColorValue(varThemeColors.text)
                    Default: |-
                        =If(
                            varNewRequest,
                            Blank(),
                            varSelectedRequest.'Additional Details'
                        )
                    DisabledBorderColor: =ColorValue(varThemeColors.primaryGray)
                    DisabledColor: =ColorValue(varThemeColors.disabledText)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisplayMode: |-
                        =If(
                            Or(
                                varNewRequest,
                                varEditRequest
                            ),
                            DisplayMode.Edit,
                            DisplayMode.View
                        )
                    Fill: =ColorValue(varThemeColors.backgroundFill)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =2
                    Font: =varThemeFont.B1.face
                    FontWeight: =varThemeFont.B1.weight
                    Height: |-
                        =If(
                            Or(
                                App.ActiveScreen.Size = ScreenSize.Medium,
                                App.ActiveScreen.Size = ScreenSize.Small
                            ),
                            145,
                            Parent.Height - lblRequestAdditionalDetails.Height - 30
                        )
                    HintText: |-
                        =If(
                            Or(
                                varNewRequest,
                                varEditRequest
                            ),
                            With(
                                {Text: "Enter additional details"},
                                If(
                                // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    ),
                                    Text,
                                // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                )
                            )
                        )
                    HoverBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                    HoverColor: =ColorValue(varThemeColors.text)
                    HoverFill: =ColorValue(varThemeColors.backgroundFill)
                    Italic: =varThemeFont.B1.italic
                    MaxLength: =2000
                    Mode: =TextMode.MultiLine
                    PressedBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                    PressedColor: =ColorValue(varThemeColors.text)
                    PressedFill: =ColorValue(varThemeColors.backgroundFill)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =varThemeFont.B1.size
                    Tooltip: |-
                        =If(
                            IsBlank(Self.Text),
                            Self.HintText,
                            Self.Text
                        )
                    Width: |-
                        =If(
                            Or(
                                App.ActiveScreen.Size = ScreenSize.Medium,
                                App.ActiveScreen.Size = ScreenSize.Small
                            ),
                            Parent.Width - Self.X*2,
                            Parent.Width / 2
                        )
                    X: =20
                    Y: =lblRequestAdditionalDetails.X + lblRequestAdditionalDetails.Height - 20
                    ZIndex: =7

                lblRequestAdditionalDetails As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.B2.face
                    FontWeight: =varThemeFont.B2.weightBold
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.B2.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.B2.size
                    Text: |
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Additional details" },
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Width: =Parent.Width/2
                    X: =19
                    ZIndex: =8

            conRequestEmptyCart As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                Visible: =IsEmpty(colProductsSelected)
                ZIndex: =4

                btnRequestEmptyCartCreateRequest As button:
                    BorderColor: =ColorValue(varThemeColors.primary)
                    BorderThickness: =1
                    Color: =ColorValue(varThemeColors.primary)
                    DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledColor: =ColorValue(varThemeColors.disabledText)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    Fill: =ColorValue(varThemeColors.backgroundFill)
                    FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                    FocusedBorderThickness: =2
                    Font: =varThemeFont.CTA.face
                    FontWeight: =varThemeFont.CTA.weight
                    Height: =32
                    HoverBorderColor: =ColorValue(varThemeColors.primary)
                    HoverColor: =ColorValue(varThemeColors.altText)
                    HoverFill: =ColorValue(varThemeColors.tertiary)
                    Italic: =varThemeFont.CTA.italic
                    OnSelect: |-
                        =Set(
                            varNewRequest,
                            true
                        );
                        Set(
                            varEditRequest,
                            false
                        );
                        Set(
                            varSelectedRequest,
                            Blank()
                        );
                        Clear(colProductsSelected);
                        Clear(colProductsSelectedQuantities);
                        Navigate('Device Types Screen')
                    PressedBorderColor: =ColorValue(varThemeColors.primary)
                    PressedColor: =ColorValue(varThemeColors.altText)
                    PressedFill: =ColorValue(varThemeColors.primary)
                    RadiusBottomLeft: =6
                    RadiusBottomRight: =6
                    RadiusTopLeft: =6
                    RadiusTopRight: =6
                    Size: =varThemeFont.CTA.size
                    Text: |-
                        =With(
                            {Text: "Create new request"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =250
                    X: =lblRequestEmptyCart.X + 10
                    Y: =lblRequestEmptyCart.Y  + lblRequestEmptyCart.Height + 30
                    ZIndex: =1

                lblRequestEmptyCart As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.tertiaryGray)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.H3.face
                    FontWeight: =varThemeFont.H3.weight
                    Height: =Self.Size *2.5
                    Italic: =varThemeFont.H3.italic
                    PaddingBottom: =0
                    PaddingLeft: =10
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: =varThemeFont.H3.size
                    Text: |
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Your cart is currently empty" },
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text 
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        ) & "."
                    Width: =Parent.Width -Self.X
                    X: =30
                    Y: =30
                    ZIndex: =2

    cmpRequestHeader As cmpHeader:
        HeaderWidth: =Parent.Width
        Height: =cmpRequestHeader.HeaderHeight
        SettingsPageScreen: ='Settings Screen'
        Width: =App.Width
        ZIndex: =3

