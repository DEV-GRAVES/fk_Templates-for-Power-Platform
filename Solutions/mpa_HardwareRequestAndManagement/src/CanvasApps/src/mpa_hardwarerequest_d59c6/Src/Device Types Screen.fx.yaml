"'Device Types Screen' As screen":
    Fill: =ColorValue(varThemeColors.background)
    OnVisible: =Reset(txtProductTypesSearch);

    conProductTypes As groupContainer.verticalAutoLayoutContainer:
        Fill: =ColorValue(varThemeColors.background)
        Height: =App.Height-Self.Y
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        PaddingBottom: =2
        PaddingLeft: =40
        PaddingRight: =40
        PaddingTop: =2
        Width: =App.Width
        Y: =conProductTypesMain.Height+ conProductTypesMain.Y
        ZIndex: =1

        "galProductTypes As gallery.'BrowseLayout_Vertical_ThreeTextVariant_ver5.0'":
            AccessibleLabel: |-
                =With(
                    {Text: "Device catalog"},
                    If(
                        // If the localized text is blank, return the default text
                        IsBlank(
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        ),
                        Text,
                        // If a localized text is found, return that instead of the default text
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text 
                        ).'Localized Value'
                    )
                )
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(166, 166, 166, 1)
            DelayItemLoading: =true
            FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
            FocusedBorderThickness: =2
            Height: =((galProductTypes.AllItemsCount / 6) * Self.TemplateHeight) + 240
            ItemAccessibleLabel: =ThisItem.Name
            Items: |-
                =If(
                    Len(txtProductTypesSearch.Text) <= 1,
                    Filter(
                        'Product Types',
                        Status = 'Status (Product Types)'.Active
                    ),
                    With(
                        {
                            _searchedProducts: Distinct(
                                Search(
                                    Products,
                                    txtProductTypesSearch.Text,
                                    "mpa_description",
                                    "mpa_manufacturer",
                                    "mpa_modelnumber",
                                    "mpa_name",
                                    "mpa_partnumber"
                                ),
                                'Product Type'.'Product Type'
                            )
                        },
                        Filter(
                            'Product Types',
                            Status = 'Status (Product Types)'.Active,
                            'Product Type' in _searchedProducts
                        )
                    )
                )
            Layout: =Layout.Vertical
            LayoutMinHeight: =287
            LayoutMinWidth: =320
            LoadingSpinner: =LoadingSpinner.Data
            TabIndex: =0
            TemplateFill: |-
                =If(
                    varThemeColors.name = "contrast",
                    ColorValue(varThemeColors.secondaryGray),
                    ColorValue(varThemeColors.backgroundFill)
                )
            TemplatePadding: =15
            TemplateSize: =250
            Visible: =!IsEmpty(Self.AllItems)
            Width: =Parent.Width - (Parent.PaddingLeft *2 )
            WrapCount: |-
                =Switch(
                    App.ActiveScreen.Size,
                    ScreenSize.Small,
                    2,
                    ScreenSize.Medium,
                    3,
                    ScreenSize.Large,
                    4,
                    ScreenSize.ExtraLarge,
                    6,
                    6
                )
            Y: =
            ZIndex: =4

            btnProductTypes As button:
                BorderColor: =ColorValue(varThemeColors.primary)
                BorderThickness: =1
                Color: =ColorValue(varThemeColors.primary)
                DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledColor: =ColorValue(varThemeColors.disabledText)
                DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                Fill: =ColorValue(varThemeColors.backgroundFill)
                FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
                FocusedBorderThickness: =2
                Font: =varThemeFont.CTA.face
                FontWeight: =varThemeFont.CTA.weight
                Height: =35
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =ColorValue(varThemeColors.tertiary)
                Italic: =varThemeFont.CTA.italic
                OnSelect: |-
                    =//Select(Parent);
                    Set(
                        varSelectedProductType,
                        ThisItem
                    );
                    Navigate(
                        'Device List Screen',
                        ScreenTransition.Cover,
                        {_searchText: txtProductTypesSearch.Text}
                    )
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.altText)
                PressedFill: =ColorValue(varThemeColors.primary)
                RadiusBottomLeft: =6
                RadiusBottomRight: =6
                RadiusTopLeft: =6
                RadiusTopRight: =6
                Size: =varThemeFont.CTA.size
                Text: |-
                    =With(
                        {Text: "View all"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    ) & " " & "(" & CountRows(
                        If(
                            Len(txtProductTypesSearch.Text) <= 1,
                            Filter(
                                Products,
                                'Product Type'.'Product Type' = ThisItem.'Product Type'
                            ),
                            With(
                                {
                                    _searchedProducts: Distinct(
                                        Search(
                                            Products,
                                            txtProductTypesSearch.Text,
                                            "mpa_description",
                                            "mpa_manufacturer",
                                            "mpa_modelnumber",
                                            "mpa_name",
                                            "mpa_partnumber"
                                        ),
                                        Product
                                    )
                                },
                                Filter(
                                    Products,
                                    'Product Type'.'Product Type' = ThisItem.'Product Type',
                                    Product in _searchedProducts
                                )
                            )
                        )
                    ) & ")"
                Tooltip: =Self.Text
                Width: =lblProductTypes.Width - 40
                X: =(galProductTypes.TemplateWidth-Self.Width)/2
                Y: =lblProductTypes.Y + 50
                ZIndex: =2

            lblProductTypes As label:
                Align: =Align.Center
                Color: =ColorValue(varThemeColors.text)
                DisabledColor: =ColorValue(varThemeColors.text)
                Font: =varThemeFont.B1.face
                FontWeight: =varThemeFont.H3.weight
                HoverColor: =ColorValue(varThemeColors.text)
                Italic: =varThemeFont.B1.italic
                OnSelect: =
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedColor: =ColorValue(varThemeColors.text)
                Size: =varThemeFont.B1.size
                Text: =ThisItem.Name
                Tooltip: =Self.Text
                VerticalAlign: =VerticalAlign.Top
                Width: =Parent.TemplateWidth
                Y: =imgProductTypes.Y + imgProductTypes.Height + 10
                ZIndex: =3

            imgProductTypes As image:
                AccessibleLabel: |-
                    =With(
                        {Text: "Product Category"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        )
                    ) &  " " & ThisItem.Name
                DisplayMode: =DisplayMode.View
                Height: =Parent.TemplateHeight - 110
                Image: |
                    =If(
                        IsBlank(ThisItem.Image.Full),
                        'no-image',
                        ThisItem.Image.Full
                    )
                ImagePosition: =ImagePosition.Fill
                OnSelect: =
                PaddingBottom: =20
                PaddingLeft: =20
                PaddingRight: =20
                PaddingTop: =20
                Width: =140
                X: =(Parent.TemplateWidth-Self.Width)/2
                ZIndex: =4

        lblProductTypesNoItems As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(varThemeColors.tertiaryGray)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            Fill: |-
                =If(
                    varThemeColors.name = "contrast",
                    ColorValue(varThemeColors.secondaryGray),
                    ColorValue(varThemeColors.backgroundFill)
                )
            FillPortions: =1
            FocusedBorderColor: =ColorValue(varThemeColors.info)
            FocusedBorderThickness: =4
            Font: =varThemeFont.H3.face
            FontWeight: =varThemeFont.H3.weight
            Height: =Self.Size *2.5
            Italic: =varThemeFont.H3.italic
            Live: =Live.Assertive
            PaddingBottom: =0
            PaddingLeft: =10
            PaddingTop: =0
            Role: =TextRole.Heading3
            Size: =varThemeFont.H3.size
            Text: |
                =// Define a variable named "Text" with the value "{value}"
                With(
                    {Text: "No items" },
                    // Check if a localized text exists for "Text" in the user's preferred language
                    If(
                        // If the localized text is blank, return the default text
                        IsBlank(
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        ),
                        Text,
                        // If a localized text is found, return that instead of the default text
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text 
                        ).'Localized Value'
                    )
                )
            Visible: =!galProductTypes.Visible
            Width: =(Parent.Width - Parent.PaddingLeft - Parent.PaddingRight)
            ZIndex: =6

    conProductTypesMain As groupContainer.horizontalAutoLayoutContainer:
        DropShadow: =DropShadow.None
        Height: |-
            =With(
                {_baseHeight: lblProductTypesTitle.Height},
                Switch(
                    App.ActiveScreen.Size,
                    ScreenSize.Small,
                    2 * _baseHeight,
                    ScreenSize.Medium,
                    2 * _baseHeight,
                    ScreenSize.Large,
                    _baseHeight,
                    ScreenSize.ExtraLarge,
                    _baseHeight
                )
            )
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        LayoutWrap: =true
        PaddingLeft: =40
        PaddingRight: =40
        Width: =App.Width
        Y: =cmpProductTypesHeader.Height
        ZIndex: =2

        lblProductTypesTitle As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(varThemeColors.text)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            Fill: =ColorValue(varThemeColors.background)
            FillPortions: =1
            FocusedBorderColor: =ColorValue(varThemeColors.info)
            FocusedBorderThickness: =4
            Font: =varThemeFont.H1.face
            FontWeight: =varThemeFont.H1.weight
            Height: =Self.Size *4
            Italic: =varThemeFont.H1.italic
            LayoutMinWidth: =250
            PaddingBottom: =30
            PaddingTop: =20
            Role: =TextRole.Heading1
            Size: |
                =varThemeFont.H1.size
            Text: |-
                =// Define a variable named "Text" with the value "{value}"
                With(
                    {Text: "Select From Available Devices"},
                    // Check if a localized text exists for "Text" in the user's preferred language
                   If(
                        // If the localized text is blank, return the default text
                        IsBlank(
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        ),
                        Text,
                        // If a localized text is found, return that instead of the default text
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text 
                        ).'Localized Value'
                    )
                )
            Width: =480
            Wrap: =false
            Y: =50
            ZIndex: =1

        txtProductTypesSearch As text:
            AccessibleLabel: |-
                =With(
                    {Text: "Quick find"},
                    If(
                        // If the localized text is blank, return the default text
                        IsBlank(
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text 
                            ).'Localized Value'
                        ),
                        Text,
                        // If a localized text is found, return that instead of the default text
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text 
                        ).'Localized Value'
                    )
                )
            BorderColor: =ColorValue(varThemeColors.primaryGray)
            BorderThickness: =1
            Clear: =true
            Color: =ColorValue(varThemeColors.text)
            Default: =
            DelayOutput: =true
            DisabledBorderColor: =ColorValue(varThemeColors.primaryGray)
            DisabledColor: =ColorValue(varThemeColors.disabledText)
            DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
            Fill: =ColorValue(varThemeColors.backgroundFill)
            FocusedBorderColor: =ColorValue(varThemeColors.focusBorder)
            FocusedBorderThickness: =2
            Font: =varThemeFont.B1.face
            FontWeight: =varThemeFont.B1.weight
            Height: =30
            HintText: =Self.AccessibleLabel
            HoverBorderColor: =ColorValue(varThemeColors.tertiaryGray)
            HoverColor: =ColorValue(varThemeColors.text)
            HoverFill: =ColorValue(varThemeColors.backgroundFill)
            Italic: =varThemeFont.B1.italic
            OnChange: =
            PaddingLeft: =15
            PressedBorderColor: =ColorValue(varThemeColors.tertiaryGray)
            PressedColor: =ColorValue(varThemeColors.text)
            PressedFill: =ColorValue(varThemeColors.backgroundFill)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =varThemeFont.B1.size
            Tooltip: =Coalesce(Self.Text,Self.HintText)
            Width: =300
            X: =
            Y: =(Parent.Height-Self.Height)/2
            ZIndex: =5

    cmpProductTypesHeader As cmpHeader:
        HeaderWidth: =Parent.Width
        Height: =cmpProductTypesHeader.HeaderHeight
        MyCart: ='Request Details Screen'
        SettingsPageScreen: ='Settings Screen'
        Width: =Parent.Width
        ZIndex: =6

