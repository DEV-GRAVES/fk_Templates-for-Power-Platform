App As appinfo:
    BackEnabled: =false
    ConfirmExit: =!IsEmpty(colProductsSelected)
    ConfirmExitMessage: |-
        =With(
            {Text: "You have items in your cart that have not been submitted yet. Do you want to exit?"},
            Text
        )
    OnError: |-
        =//Patch a new record in dataverse for unhandled or unexpected errors and trace
        /*If(
            !IsBlank(FirstError.Message),
            Patch(
                'IT Errors',
                Defaults('IT Errors'),
                {
                    Action: FirstError.Source,
                    'Additional Information': App.ActiveScreen.Name,
                    'Error Message': FirstError.Message,
                    Name: "Hardware Request",
                    'Source Type': 'Source Type (IT Errors)'.'Power App'
                }
            );
        //Show the error also in app monitor
        Trace(FirstError.Message);
        //Rethrow the error so user can see it
        Error(FirstError);
            
        )*/
    OnStart: |-
        =// request state mode variables
        Set(
            varNewRequest,
            false
        );
        Set(
            varEditRequest,
            false
        );
        // desktop fonts
        Set(
            varDesktopFonts,
            {
                H1: {
                    face: Font.'Segoe UI',
                    size: 24,
                    weight: FontWeight.Normal,
                    italic: false
                },
                H2: {
                    face: Font.'Segoe UI',
                    size: 18,
                    weight: FontWeight.Normal,
                    italic: false
                },
                H3: {
                    face: Font.'Segoe UI',
                    size: 15,
                    weight: FontWeight.Normal,
                    italic: false
                },
                B1: {
                    face: Font.'Segoe UI',
                    size: 12,
                    weight: FontWeight.Normal,
                    italic: false
                },
                B2: {
                    face: Font.'Segoe UI',
                    size: 10,
                    weight: FontWeight.Normal,
                    weightBold: FontWeight.Semibold,
                    italic: false
                },
                B3: {
                    face: Font.'Segoe UI',
                    size: 8,
                    weight: FontWeight.Normal,
                    weightBold: FontWeight.Semibold,
                    italic: false
                },
                CTA: {
                    face: Font.'Segoe UI',
                    size: 12,
                    weight: FontWeight.Semibold,
                    italic: false
                }
            }
        );
        Set(
            varThemeFont,
            varDesktopFonts
        );
        // set theme colors
        Set(
            varLightTheme,
            {
                name: "light",
                background: "#FAF9F8",
                backgroundFill: "#FFFFFF",
                backgroundFillDisabled: "#F3F2F1",
                text: "#201F1E",
                altText: "#FFFFFF",
                disabledText: "#A19F9D",
                primary: "#0078D4",
                secondary: "#EFF6FC",
                tertiary: "#005A9E",
                primaryGray: "#8A8886",
                secondaryGray: "#EDEBE9",
                tertiaryGray: "#605E5C",
                confirmation: "#107C10",
                warning: "#FFB900",
                error: "#D13438",
                info: "#006FC8",
                iconimg: LogoLight,
                iconCartimg: icon_cart_light,
                focusBorder: "#000000"
            }
        );
        Set(
            varDarkTheme,
            {
                name: "dark",
                background: "#201F1E",
                backgroundFill: "#000000",
                backgroundFillDisabled: "#323130",
                text: "#FAF9F8",
                altText: "#000000",
                disabledText: "#A19F90",
                primary: "#0078D4",
                secondary: "#004578",
                tertiary: "#47ADFF",
                primaryGray: "#605E5C",
                secondaryGray: "#323130",
                tertiaryGray: "#E1DFDD",
                confirmation: "#00CC6A",
                warning: "#FDE300",
                error: "#FF4343",
                info: "#3B83F7",
                iconimg: LogoLight,
                iconCartimg: icon_cart_dark,
                focusBorder: "#FFFFFF"
            }
        );
        Set(
            varContrastTheme,
            {
                name: "contrast",
                background: "#000000",
                backgroundFill: "#000000",
                backgroundFillDisabled: "#6B6B6B",
                text: "#FFFFFF",
                altText: "#000000",
                disabledText: "#FFFFFF",
                primary: "#1AEBFF",
                secondary: "#000000",
                tertiary: "#FFFF00",
                primaryGray: "#FFFFFF",
                secondaryGray: "#6B6B6B",
                tertiaryGray: "#FFFFFF",
                confirmation: "#3FF23F",
                warning: "#FFFF00",
                error: "#FF4343",
                info: "#FF00E5",
                iconimg: LogoDark,
                iconCartimg: icon_cart_dark,
                focusBorder: "#FFFFFF"
            }
        );
        Set(
            varThemeColors,
            varLightTheme
        );
        //Lookup and set localized text, remove regionÂ 
        Set(
            varISOUserLanguageCode,//Get user's language and map to existing choice values that are supported by the 'HR Localizations' entity which can be customized to support more languages
            "en"
        );
        Concurrent(
            ClearCollect(
                colUserLocalizedStrings,//Collection used to display localized value according to user's language value
                "en"
            ),
            Set(
                varUser,
                LookUp(
                    Users,
                    'User Name' = Office365Users.MyProfileV2().userPrincipalName
                )
            )
        )
    StartScreen: |-
        =If(
            !IsBlank(Param("hardwarerequest")),
            'Request Details Screen'
        )
    Theme: =PowerAppsTheme

    Host As hostControl.DefaultHostControlVariant:
        OnCancel: =false
        OnEdit: =false
        OnNew: =false
        OnSave: =false
        OnView: =false

