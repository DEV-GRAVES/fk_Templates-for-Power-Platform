"'Training Sessions Screen' As screen":
    Fill: =Color.White
    LoadingSpinnerColor: =App.Theme.Colors.Primary
    OnHidden: |-
        =Concurrent(
            Clear(colTrainingSessions),
            Clear(colSelectedTrainingSessions),
            Set(varSelectedTraining, Blank())
        );
        
        //Enable the button
        UpdateContext({var_DisableSubmit: DisplayMode.Edit});
    OnVisible: |-
        =//Enable the button
        UpdateContext({var_DisableSubmit: DisplayMode.Edit});
        
        Reset(cmbCategory);
        
        //Screen Layout properties
        UpdateContext(
           {
                var_LayoutProperties:
                {
                    outerPadding: {
                        top: 8,
                        right: 32,
                        bottom: 32,
                        left: 32
                    },
                    gap: {
                        gap1: 4,
                        gap2: 16,
                        gap3: 20,
                        gap4: 24
                    },
                    trainingscheduletemplateheight: 150,
                    buttonwidth: 
                    {
                        width1: 135
                    },
                    dateCardWidth: 75
                }
           }
        )

    conMain_TrainingSessions As groupContainer.verticalAutoLayoutContainer:
        Fill: =ColorValue(varTheme.neutralBackground2)
        Height: =Parent.Height - Self.Y
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =16
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingBottom: =var_LayoutProperties.outerPadding.bottom
        PaddingLeft: =var_LayoutProperties.outerPadding.left
        PaddingRight: =var_LayoutProperties.outerPadding.right
        PaddingTop: =var_LayoutProperties.outerPadding.top * 4
        Width: =Parent.Width
        Y: =cmpHeader_TrainingSessions.Height + cmpHeader_TrainingSessions.Y
        ZIndex: =1

        txtScreenTitle As Text:
            AutoHeight: =true
            DisplayMode: =DisplayMode.Edit
            Font: =""
            FontColor: =
            FontItalic: =varThemeFont.H3.italic
            Height: =Self.Size * 2
            LayoutMinHeight: =32
            LayoutMinWidth: =96
            Size: =varThemeFont.H1.size
            Text: ="Training sessions"
            VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
            Weight: =varThemeFont.H1.weightBold
            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
            X: =0
            Y: =0
            ZIndex: =1

        conMain_Body As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: |
                =Self.PaddingTop + 
                conBody_Trainings.Height + 
                If(
                    Self.LayoutDirection = LayoutDirection.Vertical, //Vertical
                    conBody_SelectedSessions.Height + Self.LayoutGap,
                    0
                ) + 
                Self.PaddingBottom
            LayoutDirection: |-
                =Switch(
                    App.ActiveScreen.Size,
                    ScreenSize.ExtraLarge,
                    LayoutDirection.Horizontal,
                    LayoutDirection.Vertical
                )
            LayoutGap: =var_LayoutProperties.gap.gap2
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =1
            PaddingLeft: =1
            PaddingRight: =1
            PaddingTop: =1
            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
            ZIndex: =2

            conBody_Trainings As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Start
                DropShadow: =DropShadow.Semilight
                Fill: =ColorValue(varTheme.backgroundFill)
                FillPortions: =0
                Height: |-
                    =conSearch_Trainings.Height + If(
                        Self.LayoutDirection = LayoutDirection.Horizontal,//Desktop mode
                        0,
                        con_SelectedTrainingSchedules.Height
                    )
                LayoutDirection: |-
                    =Switch(
                        App.ActiveScreen.Size,
                        ScreenSize.ExtraLarge,
                        LayoutDirection.Horizontal,
                        ScreenSize.Large,
                        LayoutDirection.Horizontal,
                        LayoutDirection.Vertical
                    )
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutWrap: =
                RadiusBottomLeft: =8
                RadiusBottomRight: =8
                RadiusTopLeft: =8
                RadiusTopRight: =8
                Width: |+
                    =If(Parent.LayoutDirection = LayoutDirection.Horizontal, Parent.Width * .70, Parent.Width) -2
                    
                ZIndex: =2

                conSearch_Trainings As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    FillPortions: =0
                    Height: =conSearchTrainings.Height + btnShowTrainingSessions.Height + conTrainings.Height + galTrainings.Height + (Self.LayoutGap * 3) + Self.PaddingBottom + Self.PaddingTop
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =var_LayoutProperties.gap.gap3
                    LayoutMinHeight: =476
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =Self.PaddingTop
                    PaddingLeft: =Self.PaddingTop
                    PaddingRight: =Self.PaddingTop
                    PaddingTop: =var_LayoutProperties.outerPadding.top * 2
                    Width: |-
                        =If(
                            Parent.LayoutDirection = LayoutDirection.Horizontal,
                            350,
                            Parent.Width
                        )
                    ZIndex: =1

                    conSearchTrainings As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        FillPortions: =0
                        Height: |-
                            =If(
                                App.ActiveScreen.Size = ScreenSize.Medium,
                                conTrainingSessions.Height,
                                conTrainingSessions.Height + conCategories.Height + Self.LayoutGap
                            )
                        LayoutDirection: =If(App.ActiveScreen.Size  = ScreenSize.Medium, LayoutDirection.Horizontal, LayoutDirection.Vertical)
                        LayoutGap: =If(App.ActiveScreen.Size = ScreenSize.Medium, var_LayoutProperties.gap.gap2, var_LayoutProperties.gap.gap3) 
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        ZIndex: =1

                        conTrainingSessions As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: =txtCategories.Height + cmbCategory.Height + Self.LayoutGap
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =var_LayoutProperties.gap.gap1
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width*.50
                            LayoutMode: =LayoutMode.Auto
                            Width: |-
                                =If(Parent.LayoutDirection = LayoutDirection.Horizontal,//Medium screensize layout direction for parent container
                                Parent.Width/2 - Parent.LayoutGap,
                                Parent.Width)
                            ZIndex: =1

                            txtTrainingSessions As Text:
                                Align: ='TextCanvas.Align'.Justify
                                AutoHeight: =false
                                DisplayMode: =DisplayMode.Edit
                                Font: =""
                                FontColor: =
                                FontItalic: =varThemeFont.H3.italic
                                Height: =Self.Size * 1.8
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                Size: =varThemeFont.B2.size
                                Text: ="Skill level"
                                VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                                Weight: =varThemeFont.B2.weight
                                Width: =Parent.Width * .63
                                X: =0
                                Y: =0
                                ZIndex: =1

                            cmbSkillLevel As Combobox.pcfdataset:
                                AccessibleLabel: ="Skill level filter"
                                Appearance: ="FilledDarker"
                                DefaultSelectedItems: =
                                DisplayMode: |-
                                    =
                                    
                                    If(
                                        !IsBlank(varSelectedTraining),
                                        DisplayMode.Disabled,
                                        DisplayMode.Edit
                                    )
                                Font: =""
                                FontItalic: =
                                FontSize: =0
                                FontWeight: =""
                                Height: =32
                                InputTextPlaceholder: ="Select a skill level"
                                Items: |-
                                    =
                                    SortByColumns(
                                        Filter('Skill Levels', Status = 'Status (Skill Levels)'.Active),"mpa_name",SortOrder.Ascending
                                    )
                                LayoutMinHeight: =32
                                LayoutMinWidth: =320
                                SelectMultiple: =false
                                Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                                X: =0
                                Y: =0
                                ZIndex: =2

                                lblSkillLevel As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                    FieldDisplayName: ="Name"
                                    FieldName: ="mpa_name"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =16

                        conCategories As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: =txtCategories.Height + cmbCategory.Height + Self.LayoutGap
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutGap: =var_LayoutProperties.gap.gap1
                            LayoutMinHeight: =100
                            LayoutMinWidth: =Parent.Width*.50
                            LayoutMode: =LayoutMode.Auto
                            Width: |-
                                =If(Parent.LayoutDirection = LayoutDirection.Horizontal,//Medium screensize layout direction for parent container
                                Parent.Width/2,
                                Parent.Width)
                            ZIndex: =2

                            txtCategories As Text:
                                Align: ='TextCanvas.Align'.Start
                                AutoHeight: =false
                                DisplayMode: =DisplayMode.Edit
                                Font: =""
                                FontColor: =
                                FontItalic: =varThemeFont.H3.italic
                                Height: =Self.Size * 1.8
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                Size: =varThemeFont.B2.size
                                Text: ="Category"
                                VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                                Weight: =varThemeFont.B2.weight
                                Width: =txtTrainingSessions.Width
                                X: =0
                                Y: =0
                                ZIndex: =1

                            cmbCategory As Combobox.pcfdataset:
                                AccessibleLabel: ="Category filter, required"
                                Appearance: ="FilledDarker"
                                DefaultSelectedItems: |-
                                    =If(
                                        !IsBlank(varSelectedTraining),
                                        varSelectedTraining.Training.Category
                                    )
                                DisplayMode: |-
                                    =If(
                                        !IsBlank(varSelectedTraining),
                                        DisplayMode.Disabled,
                                        DisplayMode.Edit
                                    )
                                Font: =""
                                FontItalic: =
                                FontSize: =0
                                FontWeight: =""
                                Height: =32
                                InputTextPlaceholder: ="Search for a category"
                                Items: |-
                                    =SortByColumns(
                                        Filter(
                                            Categories, 
                                            Status = 'Status (Categories)'.Active
                                        ),"mpa_name",SortOrder.Ascending
                                    )
                                LayoutMinHeight: =32
                                LayoutMinWidth: =320
                                SelectMultiple: =false
                                ValidationState: ="None"
                                Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                                X: =0
                                Y: =0
                                ZIndex: =2

                                lblCategory As PowerApps_CoreControls_ComboboxCanvasTemplate_dataField.textualColumn:
                                    FieldDisplayName: ="Name"
                                    FieldName: ="mpa_name"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =17

                    btnShowTrainingSessions As Button:
                        AccessibleLabel: ="Show training sessions"
                        Align: =""
                        Appearance: ='ButtonCanvas.Appearance'.Secondary
                        BasePaletteColor: =
                        DisplayMode: |-
                            =If(
                                !IsBlank(varSelectedTraining) || IsBlank(cmbCategory.Selected),
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Font: =""
                        FontColor: =
                        FontItalic: =
                        FontSize: =0
                        FontWeight: =varThemeFont.B2.weightBold
                        Height: =32
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =Clear(colSelectedTrainingSessions);
                            
                            
                            //Collect Training Items
                            ForAll(
                                Filter(
                                    Trainings,
                                    Status = 'Status (Trainings)'.Active,
                                    'Skill Level'.'Skill Level Id' = cmbSkillLevel.Selected.'Skill Level Id' Or IsBlank(cmbSkillLevel.Selected),
                                    Category.'Category Id' = cmbCategory.Selected.'Category Id'
                                ) As varTrainingItems,
                                With(
                                    { 
                                        varExistingBooking:
                                        LookUp(
                                            Bookings,
                                            Status = 'Status (Bookings)'.Active And
                                            Training.'Training Id' = varTrainingItems.'Training Id' And 
                                            'Owning User'.'Primary Email' =  varCurrentUser.'Primary Email' And
                                            'Status Reason' = 'Status Reason (Bookings)'.Registered
                                        )
                                    },
                                    Collect(
                                        colSelectedTrainingSessions,
                                        {
                                            Name: varTrainingItems.Name,
                                            Training: varTrainingItems,
                                            Details: varTrainingItems.Details,
                                            Order: varTrainingItems.Order,
                                            ExistingBooking: varExistingBooking,
                                            ExistingTrainingSession: varExistingBooking.'Training Session',
                                            UpdatedTrainingSession: varExistingBooking.'Training Session'
                                        }
                                    );
                                )
                            );
                            
                            
                            //Collect training session Items
                            ClearCollect(
                                colTrainingSessions,
                                AddColumns(
                                    Filter(
                                        AddColumns('Training Sessions', session_date, Date(Year('Start Date and Time'),Month('Start Date and Time'), Day('Start Date and Time'))),
                                        Status = 'Status (Training Sessions)'.Active,
                                        'Available Slot' > 0 Or IsBlank('Available Slot'),
                                        session_date > Today(),
                                        Training.'Training Id' = First(Sort(colSelectedTrainingSessions, Order,SortOrder.Ascending)).Training.'Training Id'
                                    ),
                                    Existing_Session,
                                    ThisRecord.'Training Session Id' = First(Sort(colSelectedTrainingSessions, Order,SortOrder.Ascending)).ExistingTrainingSession.'Training Session Id',
                                    Selected_Status,
                                    false
                                )
                            );
                            
                            
                            UpdateContext(
                                {
                                    //Get prerequisite item, if available, as baseline to start date filter on succeeding training sessions
                                    var_PrerequisiteTraining: 
                                    Blank(),
                                    
                                    var_SelectedTraining: First(Sort(colSelectedTrainingSessions, Order,SortOrder.Ascending)),
                            
                                    //Get succeeding item, if available, to reset if the prerequisite item has been changed
                                    var_SucceedingTraining: 
                                    LookUp(
                                        colSelectedTrainingSessions, 
                                        Order = First(Sort(colSelectedTrainingSessions, Order,SortOrder.Ascending)).Order + 1
                                    )
                                }
                            );
                        Text: ="Show training sessions"
                        VerticalAlign: =""
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =4

                    conTrainings As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        FillPortions: =0
                        Height: =Max(txtTrainingLabel.Height, txtNumberOfTrainings.Height)
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        ZIndex: =5

                        txtTrainingLabel As Text:
                            Align: ='TextCanvas.Align'.Justify
                            AutoHeight: =false
                            DisplayMode: =DisplayMode.Edit
                            FillPortions: =0.25
                            Font: =""
                            FontColor: =
                            FontItalic: =varThemeFont.H3.italic
                            Height: =Self.Size * 2.2
                            LayoutMinHeight: =32
                            LayoutMinWidth: =100
                            Size: =varThemeFont.B2.size
                            Text: ="Trainings"
                            VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                            Weight: =varThemeFont.B1.weightBold
                            Width: =100
                            X: =0
                            Y: =0
                            ZIndex: =1

                        txtNumberOfTrainings As Text:
                            Align: ='TextCanvas.Align'.End
                            AutoHeight: =true
                            DisplayMode: =DisplayMode.Edit
                            FillPortions: =1.75
                            Font: =""
                            FontColor: =
                            FontItalic: =varThemeFont.H3.italic
                            Height: =txtTrainingLabel.Height
                            LayoutMinHeight: =32
                            LayoutMinWidth: =100
                            Size: =varThemeFont.B2.size
                            Text: =$"Showing {galTrainings.AllItemsCount} {If(galTrainings.AllItemsCount > 1, "trainings", "training")}"
                            VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                            Weight: =varThemeFont.B2.weight
                            Width: =200
                            X: =0
                            Y: =0
                            ZIndex: =2

                    galTrainings As gallery.variableTemplateHeightGallery:
                        AccessibleLabel: ="Trainings"
                        AlignInContainer: =AlignInContainer.SetByContainer
                        BorderColor: =App.Theme.Colors.Darker40
                        Default: =varSelectedTraining
                        DelayItemLoading: =true
                        FillPortions: =0
                        Height: |-
                            =With(
                                {DesktopHeight: App.ActiveScreen.Height - cmpHeader_TrainingSessions.Height - (txtScreenTitle.Height + conMain_TrainingSessions.LayoutGap + conMain_TrainingSessions.PaddingTop + conMain_TrainingSessions.PaddingBottom) - ( conMain_Body.PaddingTop + conSearch_Trainings.PaddingTop + conSearchTrainings.Height + btnShowTrainingSessions.Height + conTrainings.Height + (conSearch_Trainings.LayoutGap * 3) + conSearch_Trainings.PaddingBottom + conMain_Body.PaddingBottom )},
                            
                                //Switch based on screen size
                                If(
                                    App.ActiveScreen.Size >= ScreenSize.Large,//Desktop, 
                                    DesktopHeight,
                                    Self.TemplateHeight * 1.5
                                )
                            )
                        Items: |-
                            =Sort(
                                colSelectedTrainingSessions,
                                Order,SortOrder.Ascending
                            )
                        Layout: =Layout.Vertical
                        LayoutMinHeight: =287
                        LayoutMinWidth: =320
                        LoadingSpinner: =LoadingSpinner.Data
                        OnSelect: |-
                            =////Create Training Sessions/Slots collection
                            ClearCollect(
                                colTrainingSessions,
                                AddColumns(
                                    Filter(
                                        AddColumns('Training Sessions', session_date, Date(Year('Start Date and Time'),Month('Start Date and Time'), Day('Start Date and Time'))),
                                        Status = 'Status (Training Sessions)'.Active,
                                        'Available Slot' > 0 Or IsBlank('Available Slot'),
                                        session_date > Today(),
                                        Training.'Training Id' = ThisItem.Training.'Training Id'
                                    ),
                                    Existing_Session,
                                    ThisRecord.'Training Session Id' = ThisItem.ExistingTrainingSession.'Training Session Id',
                                    Selected_Status,
                                    ThisRecord.'Training Session Id' = ThisItem.UpdatedTrainingSession.'Training Session Id'
                                )
                            );
                            
                            
                            UpdateContext(
                                {
                                    //Get prerequisite item, if available, as baseline to start date filter on succeeding training sessions
                                    var_PrerequisiteTraining: 
                                    LookUp(
                                        colSelectedTrainingSessions, 
                                        Order = ThisItem.Order - 1
                                    ),
                                    
                                    var_SelectedTraining: ThisItem,
                            
                                    //Get succeeding item, if available, to reset if the prerequisite item has been changed
                                    var_SucceedingTraining: 
                                    LookUp(
                                        colSelectedTrainingSessions, 
                                        Order = ThisItem.Order + 1
                                    )
                                }
                            );
                        TabIndex: =0
                        TemplateSize: =Max(conGalTrainingsTemplate.Height)
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        ZIndex: =6

                        conGalTrainingsTemplate As groupContainer.manualLayoutContainer:
                            BorderColor: |
                                =If(ThisItem.Order =  var_SelectedTraining.Order, varTheme.brandStroke2, Color.Transparent)
                            BorderThickness: =If(ThisItem.Order =  var_SelectedTraining.Order, 1, 0)
                            Fill: |
                                =If(ThisItem.Order =  var_SelectedTraining.Order, varTheme.brandBackground2, Color.Transparent)
                            Height: =Max(txtTrainingTitle.Height, icoForward.Height) + txtShortDescription.Height + bdgBookingStatus.Height + Self.PaddingBottom + Self.PaddingTop - Self.BorderThickness
                            PaddingBottom: =Self.PaddingTop
                            PaddingLeft: =Self.PaddingTop
                            PaddingRight: =Self.PaddingTop
                            PaddingTop: =var_LayoutProperties.gap.gap2
                            RadiusBottomLeft: =8
                            RadiusBottomRight: =8
                            RadiusTopLeft: =8
                            RadiusTopRight: =8
                            Width: =Parent.Width - Self.BorderThickness - Parent.TemplatePadding
                            ZIndex: =1

                            txtTrainingTitle As Text:
                                AutoHeight: =true
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =App.Theme.Colors.Primary
                                Height: =32
                                Size: =varThemeFont.B2.size
                                Text: |-
                                    =$"Training name: {ThisItem.Name}"
                                Weight: =varThemeFont.B2.weightBold
                                Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight - (icoForward.Width) - 16
                                Wrap: =true
                                X: =conMarker.X + 16
                                Y: =Parent.PaddingBottom
                                ZIndex: =2

                            icoForward As icon.Flag:
                                AccessibleLabel: |-
                                    =$"Select training: {ThisItem.Name}"
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =varTheme.brandBackground1
                                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                DisabledColor: =RGBA(244, 244, 244, 1)
                                Height: =32
                                Icon: =Icon.ChevronRight
                                OnSelect: =Select(galTrainings);
                                TabIndex: =0
                                Width: =32
                                X: =Parent.Width - Parent.PaddingRight - Self.Width
                                Y: =txtTrainingTitle.Y
                                ZIndex: =3

                            bdgBookingStatus As Badge:
                                AccessibleLabel: |-
                                    =$"{ThisItem.Name} training, booking status: {Self.Content}"
                                Align: =""
                                Appearance: ='BadgeCanvas.Appearance'.Filled
                                BasePaletteColor: =
                                Content: |-
                                    =If(
                                        !IsBlank(ThisItem.ExistingBooking),
                                        "Session ",
                                        "Not "
                                    ) & "booked"
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =20
                                Shape: ='BadgeCanvas.Shape'.Circular
                                ThemeColor: =If(ThisItem.ExistingBooking.'Status Reason' <> 'Status Reason (Bookings)'.Registered, 'BadgeCanvas.ThemeColor'.Danger, 'BadgeCanvas.ThemeColor'.Success)
                                VerticalAlign: =""
                                Width: =100
                                X: =conMarker.X + 16
                                Y: =Max(txtTrainingTitle.Height, icoForward.Height) + txtTrainingTitle.Y
                                ZIndex: =4

                            txtShortDescription As Text:
                                Align: ='TextCanvas.Align'.Start
                                AutoHeight: =true
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =Self.Y - Parent.PaddingBottom
                                Size: =varThemeFont.B2.size
                                Text: =ThisItem.Details
                                VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                                Weight: =varThemeFont.B2.weight
                                Width: =Parent.Width - Self.X - Parent.PaddingLeft
                                Wrap: =true
                                X: =conMarker.X + 16
                                Y: =bdgBookingStatus.Height + bdgBookingStatus.Y + 12
                                ZIndex: =5

                            conMarker As groupContainer.verticalAutoLayoutContainer:
                                Fill: |-
                                    =If(
                                       ThisItem.Order =  var_SelectedTraining.Order,
                                        varTheme.brandBackground1,
                                        ColorValue(varTheme.neutralStroke2)
                                    )
                                Height: =Parent.Height - Parent.PaddingTop - Parent.PaddingBottom
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =2
                                RadiusBottomRight: =2
                                RadiusTopLeft: =2
                                RadiusTopRight: =2
                                Width: =4
                                X: =Parent.PaddingLeft
                                Y: =Parent.PaddingTop
                                ZIndex: =6

                shpTrainingSeparator As rectangle:
                    AccessibleLabel: =
                    BorderColor: =RGBA(0, 18, 107, 1)
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =ColorValue(varTheme.neutralStroke2)
                    Height: |-
                        =
                        
                        If(Parent.LayoutDirection = LayoutDirection.Horizontal, Parent.Height - Parent.PaddingTop - Parent.PaddingBottom, 1)
                    Width: =If(Parent.LayoutDirection = LayoutDirection.Horizontal, 1, Parent.Width)
                    X: =Parent.PaddingLeft
                    Y: =Parent.PaddingTop
                    ZIndex: =2

                con_SelectedTrainingSchedules As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    FillPortions: =0
                    Height: =conTrainigSessionHeader.Height + shpSeparatorSessions.Height + galSessions.Height
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMinHeight: =conTrainigSessionHeader.Height + shpSeparatorSessions.Height + galSessions.Height - Self.BorderThickness
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =Parent.Width - If(Parent.LayoutDirection.Vertical, 0 , Self.X)
                    ZIndex: =3

                    conTrainigSessionHeader As groupContainer.verticalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.Start
                        FillPortions: =0
                        Height: |-
                            =
                            conSelectedTrainingTitle.Height + colSelectedSessions.Height + Self.PaddingBottom + Self.PaddingTop
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =Self.Height
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =16
                        PaddingLeft: =16
                        PaddingRight: =16
                        PaddingTop: =16
                        Width: =Parent.Width
                        ZIndex: =1

                        conSelectedTrainingTitle As groupContainer.verticalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: |-
                                =If(
                                    App.ActiveScreen.Size = ScreenSize.Small,
                                    txtSelectedTrainingTitle.Height + btnViewTrainingDetails.Height + Self.LayoutGap,
                                    Max(
                                        txtSelectedTrainingTitle.Height,
                                        btnViewTrainingDetails.Height
                                    )
                                )
                            LayoutDirection: =If(App.ActiveScreen.Size = ScreenSize.Small, LayoutDirection.Vertical, LayoutDirection.Horizontal)
                            LayoutGap: =16
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                            ZIndex: =7

                            txtSelectedTrainingTitle As Text:
                                AutoHeight: =true
                                DisplayMode: =DisplayMode.Edit
                                Font: =""
                                FontColor: =
                                FontItalic: =varThemeFont.H3.italic
                                Height: =Self.Size * 3
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                Size: =14
                                Text: =Coalesce(galSessions.Selected.Name, "No data to display")
                                VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                                Visible: =true
                                Weight: =varThemeFont.B1.weightBold
                                Width: |-
                                    =If(Parent.LayoutDirection = LayoutDirection.Vertical, Parent.Width,
                                    
                                    Parent.Width - Parent.PaddingLeft - Parent.PaddingRight - btnViewTrainingDetails.Width - Parent.LayoutGap)
                                Wrap: =true
                                X: =0
                                Y: =0
                                ZIndex: =1

                            btnViewTrainingDetails As Button:
                                AccessibleLabel: |-
                                    =If(
                                        Not(txtSelectedTrainingTitle.Text = "No data to display"),
                                        $"View details {txtSelectedTrainingTitle.Text}",
                                        "View Details"
                                    )
                                Align: =""
                                Appearance: ='ButtonCanvas.Appearance'.Secondary
                                BasePaletteColor: =
                                DisplayMode: =If(galTrainings.AllItemsCount = 0, DisplayMode.Disabled, DisplayMode.Edit)
                                Font: =""
                                FontColor: =
                                FontItalic: =
                                FontSize: =0
                                FontWeight: =""
                                Height: =30
                                Icon: =""
                                IconRotation: =0
                                IconStyle: ="Outline"
                                Layout: ="Icon before"
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                OnSelect: |-
                                    =Navigate('Training Session Details Screen', Transition.None, {var_TrainingToView : var_SelectedTraining.Training, var_TrainingScreenType: "View"})
                                Text: ="View details"
                                VerticalAlign: =""
                                Visible: =true
                                Width: |-
                                    =
                                    
                                    If(App.ActiveScreen.Size = ScreenSize.Small, Parent.Width, var_LayoutProperties.buttonwidth.width1 - 10)
                                X: =0
                                Y: =0
                                ZIndex: =2

                        colSelectedSessions As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: =txtSessionsTitle.Height + Self.PaddingTop + Self.PaddingBottom
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            PaddingTop: =var_LayoutProperties.gap.gap2
                            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                            ZIndex: =8

                            txtSessionsTitle As Text:
                                AutoHeight: =true
                                DisplayMode: =DisplayMode.Edit
                                FillPortions: =1
                                Font: =""
                                FontColor: =
                                FontItalic: =varThemeFont.H3.italic
                                Height: =Self.Size * 2.5
                                LayoutMinHeight: =32
                                LayoutMinWidth: =75
                                Size: =14
                                Text: ="Sessions"
                                VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                                Weight: =varThemeFont.B2.weightBold
                                Width: =75
                                Wrap: =true
                                X: =0
                                Y: =0
                                ZIndex: =1

                            txtNumberOfSessions As Text:
                                Align: ='TextCanvas.Align'.End
                                AutoHeight: =true
                                DisplayMode: =DisplayMode.Edit
                                FillPortions: =1.75
                                Font: =""
                                FontColor: =ColorValue(varTheme.neutralForeground3)
                                FontItalic: =varThemeFont.H3.italic
                                Height: =Self.Size * 2.5
                                LayoutMinHeight: =32
                                LayoutMinWidth: =100
                                Size: =varThemeFont.B2.size
                                Text: =$"Showing {galSessions.AllItemsCount} {If(galSessions.AllItemsCount > 1, "sessions", "session")}"
                                VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                                Weight: =varThemeFont.B2.weight
                                Width: =200
                                Wrap: =true
                                X: =0
                                Y: =0
                                ZIndex: =2

                    shpSeparatorSessions As rectangle:
                        AccessibleLabel: =
                        AlignInContainer: =AlignInContainer.Stretch
                        BorderColor: =RGBA(0, 18, 107, 1)
                        DisplayMode: =DisplayMode.Disabled
                        Fill: =ColorValue(varTheme.neutralStroke2)
                        Height: =1
                        Width: =2
                        X: =Parent.PaddingLeft
                        Y: =Parent.PaddingTop
                        ZIndex: =2

                    galSessions As gallery.galleryVertical:
                        '#CopilotOverlayLabel': ="Filtered"
                        AccessibleLabel: ="Available training sessions"
                        AlignInContainer: =AlignInContainer.Start
                        BorderColor: =RGBA(0, 18, 107, 1)
                        DelayItemLoading: =true
                        FillPortions: =0
                        FocusedBorderThickness: =2
                        Height: |-
                            =If(
                                App.ActiveScreen.Size >= ScreenSize.Large,
                                //(Self.TemplateHeight * Self.AllItemsCount) - conTrainigSessionHeader.Height + shpSeparatorSessions.Height,
                                App.ActiveScreen.Height - cmpHeader_TrainingSessions.HeaderHeight - conMain_TrainingSessions.PaddingTop - conMain_TrainingSessions.LayoutGap - txtScreenTitle.Height - conTrainigSessionHeader.Height - shpSeparatorSessions.Height,
                                (Self.TemplateHeight * Self.AllItemsCount)
                            )
                        Items: |-
                            =//Filter colTrainingSessions based on Max Possible Days and Session Dates based on Selected Training/Module order
                            Sort(
                                If(
                                    var_SelectedTraining.Order > 1,
                                    Filter(
                                        colTrainingSessions,
                                        //training session dates greater than the updated prerequisite session date
                                        //but not over than the set max possible booking days
                                        (    
                                            (
                                                session_date > var_PrerequisiteTraining.UpdatedTrainingSession.'End Date and Time' &&
                                                session_date <= DateAdd(var_PrerequisiteTraining.UpdatedTrainingSession.'End Date and Time', Coalesce(varAppSetting.'Max Possible Booking Days', 14) , TimeUnit.Days) &&
                                                !IsBlank(var_PrerequisiteTraining.UpdatedTrainingSession.'Training Session Id')
                                            )
                                            Or 
                                            IsBlank(var_PrerequisiteTraining.UpdatedTrainingSession.'Training Session Id')
                                        )
                            
                                    ),
                                    colTrainingSessions
                                ),
                                session_date
                            )
                        Layout: =Layout.Vertical
                        LayoutMinHeight: =287
                        LayoutMinWidth: =320
                        LoadingSpinner: =LoadingSpinner.Data
                        TabIndex: =0
                        TemplatePadding: =0
                        TemplateSize: |-
                            =If(
                                App.ActiveScreen.Size = ScreenSize.Small, 
                                var_LayoutProperties.trainingscheduletemplateheight + 30, var_LayoutProperties.trainingscheduletemplateheight)
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight - Self.FocusedBorderThickness
                        ZIndex: =3

                        conGalSessionsTemplate As groupContainer.horizontalAutoLayoutContainer:
                            Height: =Parent.TemplateHeight
                            LayoutGap: =If(App.ActiveScreen.Size > ScreenSize.Medium, var_LayoutProperties.gap.gap3, var_LayoutProperties.gap.gap2)
                            LayoutMode: =LayoutMode.Auto
                            PaddingBottom: =Self.PaddingTop
                            PaddingLeft: =Self.PaddingTop
                            PaddingRight: =Self.PaddingTop
                            PaddingTop: =var_LayoutProperties.gap.gap2
                            Width: =Parent.TemplateWidth *.98
                            ZIndex: =1

                            conTemplateItemMarker As groupContainer.manualLayoutContainer:
                                AlignInContainer: =AlignInContainer.Start
                                Fill: |-
                                    =If(
                                        ThisItem.Selected_Status Or (ThisItem.Existing_Session And IsBlank(
                                            LookUp(
                                                colTrainingSessions,
                                                Selected_Status = true
                                            )
                                        )),
                                        varTheme.brandBackground1,
                                        ColorValue(varTheme.neutralStroke2)
                                    )
                                FillPortions: =0
                                Height: =conSessionSchedule.Height
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                RadiusBottomLeft: =2
                                RadiusBottomRight: =2
                                RadiusTopLeft: =2
                                RadiusTopRight: =2
                                Width: =4
                                ZIndex: =1

                            conSessionSchedule As groupContainer.horizontalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                Height: |-
                                    =If(
                                        Self.LayoutDirection = LayoutDirection.Horizontal, 
                                        conSessionScheduleInfo.Height, 
                                        Parent.Height - Parent.PaddingTop - Parent.PaddingBottom
                                    ) + Self.PaddingTop + Self.PaddingBottom
                                LayoutDirection: |-
                                    =If(
                                        App.ActiveScreen.Size = ScreenSize.Small,
                                        LayoutDirection.Vertical,
                                        LayoutDirection.Horizontal
                                    )
                                LayoutGap: =
                                LayoutMinHeight: =100
                                LayoutMinWidth: =Parent.Width - Self.X - Parent.PaddingRight
                                LayoutMode: =LayoutMode.Auto
                                PaddingRight: =2
                                ZIndex: =4

                                conSessionScheduleInfo As groupContainer.horizontalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.SetByContainer
                                    FillPortions: |-
                                        =If(Parent.LayoutDirection = LayoutDirection.Vertical, //Mobile
                                        0, 1)
                                    Height: |-
                                        =If(
                                            App.ActiveScreen.Size = ScreenSize.Small, //Mobile
                                            conScheduleTime.Height,
                                            conSessionDate.Height
                                        ) + Self.PaddingTop + Self.PaddingBottom
                                    LayoutGap: =24
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    PaddingBottom: =conSessionDate.BorderThickness
                                    PaddingLeft: =5
                                    PaddingTop: =conSessionDate.BorderThickness
                                    ZIndex: =1

                                    conSessionDate As groupContainer.verticalAutoLayoutContainer:
                                        AlignInContainer: =AlignInContainer.SetByContainer
                                        BorderColor: |-
                                            =If(
                                                ThisItem.Selected_Status Or (ThisItem.Existing_Session And IsBlank(
                                                    LookUp(
                                                        colTrainingSessions,
                                                        Selected_Status = true
                                                    )
                                                )),
                                                varTheme.brandStroke2,
                                                ColorValue(varTheme.neutralStroke2)
                                            )
                                        BorderThickness: =1
                                        FillPortions: =0
                                        Height: =conDateDay.Height + txtMonth.Height +txtDate.Height + txtYear.Height
                                        LayoutDirection: =LayoutDirection.Vertical
                                        LayoutMinHeight: =100
                                        LayoutMinWidth: =250
                                        LayoutMode: =LayoutMode.Auto
                                        RadiusBottomLeft: =4
                                        RadiusBottomRight: =4
                                        RadiusTopLeft: =4
                                        RadiusTopRight: =4
                                        Width: =var_LayoutProperties.dateCardWidth
                                        ZIndex: =1

                                        conDateDay As groupContainer.verticalAutoLayoutContainer:
                                            AlignInContainer: =AlignInContainer.SetByContainer
                                            Fill: |-
                                                =If(
                                                    ThisItem.Selected_Status Or (ThisItem.Existing_Session And IsBlank(
                                                        LookUp(
                                                            colTrainingSessions,
                                                            Selected_Status = true
                                                        )
                                                    )),
                                                    varTheme.brandBackground2,
                                                    ColorValue(varTheme.neutralBackground3)
                                                )
                                            FillPortions: =0
                                            Height: =txtDay.Height + Self.PaddingBottom
                                            LayoutDirection: =LayoutDirection.Vertical
                                            LayoutMinHeight: =100
                                            LayoutMinWidth: =250
                                            LayoutMode: =LayoutMode.Auto
                                            PaddingBottom: =5
                                            PaddingTop: =5
                                            Width: =Parent.Width - Parent.PaddingTop - Parent.PaddingBottom
                                            ZIndex: =2

                                            txtDay As Text:
                                                Align: ='TextCanvas.Align'.Center
                                                AutoHeight: =true
                                                DisplayMode: =DisplayMode.Edit
                                                Font: =""
                                                FontColor: |-
                                                    =If(
                                                        ThisItem.Selected_Status Or (ThisItem.Existing_Session And IsBlank(
                                                            LookUp(
                                                                colTrainingSessions,
                                                                Selected_Status = true
                                                            )
                                                        )),
                                                        varTheme.brandForeground1,
                                                        ColorValue(varTheme.neutralForeground3)
                                                    )
                                                FontItalic: =varThemeFont.H3.italic
                                                Height: |
                                                    =Self.Size * 1.8 
                                                LayoutMinHeight: =32
                                                LayoutMinWidth: =96
                                                PaddingBottom: =5
                                                PaddingTop: =5
                                                Size: =varThemeFont.B3.size
                                                Text: =Upper(Text(ThisItem.'Start Date and Time', "ddd"))
                                                VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                                                Weight: =varThemeFont.B3.weightBold
                                                Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                                                Wrap: =true
                                                X: =0
                                                Y: =0
                                                ZIndex: =1

                                        txtMonth As Text:
                                            Align: ='TextCanvas.Align'.Center
                                            AutoHeight: =true
                                            DisplayMode: =DisplayMode.Edit
                                            Font: =""
                                            FontColor: =If(ThisItem.Selected_Status Or (ThisItem.Existing_Session And IsBlank(LookUp(colTrainingSessions, Selected_Status = true))), varTheme.brandForeground1, ColorValue(varTheme.neutralForeground3))
                                            FontItalic: =varThemeFont.H3.italic
                                            Height: |
                                                =Self.Size * 1.43
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =96
                                            PaddingBottom: =
                                            PaddingTop: =
                                            Size: =varThemeFont.B2.size
                                            Text: =Upper(Text(ThisItem.'Start Date and Time', "mmm"))
                                            VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                                            Weight: =varThemeFont.B3.weightBold
                                            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                                            Wrap: =false
                                            X: =0
                                            Y: =0
                                            ZIndex: =3

                                        txtDate As Text:
                                            Align: ='TextCanvas.Align'.Center
                                            AutoHeight: =true
                                            DisplayMode: =DisplayMode.Edit
                                            Font: =""
                                            FontColor: =If(ThisItem.Selected_Status Or (ThisItem.Existing_Session And IsBlank(LookUp(colTrainingSessions, Selected_Status = true))), varTheme.brandForeground1, ColorValue(varTheme.neutralForeground3))
                                            FontItalic: =varThemeFont.H3.italic
                                            Height: =28
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =96
                                            PaddingBottom: =5
                                            Size: =varThemeFont.H3.size
                                            Text: =Text(ThisItem.'Start Date and Time', "dd")
                                            VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                                            Weight: =varThemeFont.B3.weightBold
                                            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                                            Wrap: =false
                                            X: =0
                                            Y: =0
                                            ZIndex: =4

                                        txtYear As Text:
                                            Align: ='TextCanvas.Align'.Center
                                            AutoHeight: =true
                                            DisplayMode: =DisplayMode.Edit
                                            Font: =""
                                            FontColor: =If(ThisItem.Selected_Status Or (ThisItem.Existing_Session And IsBlank(LookUp(colTrainingSessions, Selected_Status = true))), varTheme.brandForeground1, ColorValue(varTheme.neutralForeground3))
                                            FontItalic: =varThemeFont.H3.italic
                                            Height: |
                                                =Self.Size * 1.43
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =96
                                            PaddingBottom: =5
                                            Size: =varThemeFont.B2.size
                                            Text: =Text(ThisItem.'Start Date and Time', "yyyy")
                                            VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                                            Weight: =varThemeFont.B3.weightBold
                                            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                                            Wrap: =false
                                            X: =0
                                            Y: =0
                                            ZIndex: =5

                                    conScheduleTime As groupContainer.horizontalAutoLayoutContainer:
                                        AlignInContainer: |-
                                            =If(
                                                Self.LayoutDirection = LayoutDirection.Horizontal, //Desktop
                                                AlignInContainer.Center,AlignInContainer.Start
                                            )
                                        BorderColor: =RGBA(215, 58, 60, 1)
                                        Height: |-
                                            =conStartTime.Height + 
                                            If( 
                                                Self.LayoutDirection = LayoutDirection.Vertical, //Mobile
                                                conEndTime.Height, 0
                                            )
                                        LayoutDirection: |-
                                            =If(
                                                App.ActiveScreen.Size = ScreenSize.Small,
                                                LayoutDirection.Vertical,
                                                LayoutDirection.Horizontal
                                            )
                                        LayoutMinHeight: =200
                                        LayoutMinWidth: =Self.X
                                        LayoutMode: =LayoutMode.Auto
                                        Width: =
                                        ZIndex: =2

                                        conStartTime As groupContainer.verticalAutoLayoutContainer:
                                            AlignInContainer: =AlignInContainer.SetByContainer
                                            FillPortions: =0
                                            Height: =conTimeFormat.Height + txtStartTime.Height
                                            LayoutDirection: =LayoutDirection.Vertical
                                            LayoutMinHeight: =100
                                            LayoutMinWidth: =150
                                            LayoutMode: =LayoutMode.Auto
                                            Width: =If(App.ActiveScreen.Size = ScreenSize.Small, Parent.Width ,Parent.Width *.50)
                                            ZIndex: =1

                                            conTimeFormat As groupContainer.horizontalAutoLayoutContainer:
                                                AlignInContainer: =AlignInContainer.Start
                                                FillPortions: =0
                                                Height: =txtHour.Height
                                                LayoutMinHeight: =100
                                                LayoutMinWidth: =250
                                                LayoutMode: =LayoutMode.Auto
                                                Width: =txtHour.Width + txtAmPm.Width
                                                ZIndex: =1

                                                txtHour As Text:
                                                    Align: ='TextCanvas.Align'.Start
                                                    AlignInContainer: =AlignInContainer.Start
                                                    AutoHeight: =false
                                                    DisplayMode: =DisplayMode.Edit
                                                    Font: =""
                                                    FontColor: =If(ThisItem.Selected_Status Or (ThisItem.Existing_Session And IsBlank(LookUp(colTrainingSessions, Selected_Status = true))), varTheme.brandForeground1, ColorValue(varTheme.neutralForeground3))
                                                    FontItalic: =varThemeFont.H3.italic
                                                    Height: =Self.Size * 1.5
                                                    LayoutMinHeight: =32
                                                    LayoutMinWidth: =96
                                                    PaddingBottom: =0
                                                    PaddingLeft: =0
                                                    PaddingRight: =0
                                                    PaddingTop: =0
                                                    Size: =varThemeFont.H2.size
                                                    Text: |-
                                                        =TrimEnds(
                                                            Left(
                                                                Text(
                                                                    ThisItem.'Start Date and Time',
                                                                    "hh:mm AM/PM"
                                                                ),
                                                                Max(
                                                                    Len(
                                                                        Text(
                                                                            ThisItem.'Start Date and Time',
                                                                            "hh:mm AM/PM"
                                                                        )
                                                                    ) - 2,
                                                                    0
                                                                )
                                                            )
                                                        )
                                                    VerticalAlign: ='TextCanvas.VerticalAlign'.Bottom
                                                    Weight: =varThemeFont.H2.weight
                                                    Width: =Self.Size * 2.5
                                                    Wrap: =false
                                                    X: =0
                                                    Y: =0
                                                    ZIndex: =1

                                                txtAmPm As Text:
                                                    Align: ='TextCanvas.Align'.Start
                                                    AlignInContainer: =AlignInContainer.Center
                                                    AutoHeight: =false
                                                    DisplayMode: =DisplayMode.Edit
                                                    Font: =""
                                                    FontColor: =If(ThisItem.Selected_Status Or (ThisItem.Existing_Session And IsBlank(LookUp(colTrainingSessions, Selected_Status = true))), varTheme.brandForeground1, ColorValue(varTheme.neutralForeground3))
                                                    FontItalic: =varThemeFont.H3.italic
                                                    Height: =Parent.Height
                                                    LayoutMinHeight: =32
                                                    LayoutMinWidth: =96
                                                    Size: =varThemeFont.B1.size
                                                    Text: |-
                                                        =Right(
                                                            Text(
                                                                ThisItem.'Start Date and Time',
                                                                "hh:mmAM/PM"
                                                            ), 2
                                                        )
                                                    VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                                                    Weight: =varThemeFont.B1.weight
                                                    Width: =Self.Size * 2
                                                    Wrap: =false
                                                    X: =0
                                                    Y: =0
                                                    ZIndex: =2

                                            txtStartTime As Text:
                                                Align: ='TextCanvas.Align'.Start
                                                AlignInContainer: =AlignInContainer.Start
                                                AutoHeight: =false
                                                DisplayMode: =DisplayMode.Edit
                                                Font: =""
                                                FontColor: =
                                                FontItalic: =varThemeFont.H3.italic
                                                Height: =Self.Size * 1.5
                                                LayoutMinHeight: =32
                                                LayoutMinWidth: =96
                                                Size: =varThemeFont.B2.size
                                                Text: ="Start Time"
                                                VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                                                Weight: =varThemeFont.B2.weight
                                                Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                                                Wrap: =false
                                                X: =0
                                                Y: =0
                                                ZIndex: =2

                                        conEndTime As groupContainer.verticalAutoLayoutContainer:
                                            AlignInContainer: =AlignInContainer.SetByContainer
                                            FillPortions: =0
                                            Height: =conEndTimeFormat.Height + txtEndTime.Height
                                            LayoutDirection: =LayoutDirection.Vertical
                                            LayoutMinHeight: =100
                                            LayoutMinWidth: =150
                                            LayoutMode: =LayoutMode.Auto
                                            Width: =If(App.ActiveScreen.Size = ScreenSize.Small, Parent.Width ,Parent.Width *.50)
                                            ZIndex: =2

                                            conEndTimeFormat As groupContainer.horizontalAutoLayoutContainer:
                                                AlignInContainer: =AlignInContainer.SetByContainer
                                                FillPortions: =0
                                                Height: =txtEndHour.Height
                                                LayoutMinHeight: =100
                                                LayoutMinWidth: =250
                                                LayoutMode: =LayoutMode.Auto
                                                Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                                                ZIndex: =1

                                                txtEndHour As Text:
                                                    Align: ='TextCanvas.Align'.Start
                                                    AlignInContainer: =AlignInContainer.Start
                                                    AutoHeight: =false
                                                    DisplayMode: =DisplayMode.Edit
                                                    Font: =""
                                                    FontColor: =If(ThisItem.Selected_Status Or (ThisItem.Existing_Session And IsBlank(LookUp(colTrainingSessions, Selected_Status = true))), varTheme.brandForeground1, ColorValue(varTheme.neutralForeground3))
                                                    FontItalic: =varThemeFont.H3.italic
                                                    Height: =Self.Size * 1.5
                                                    LayoutMinHeight: =32
                                                    LayoutMinWidth: =96
                                                    Size: =varThemeFont.H2.size
                                                    Text: |-
                                                        =TrimEnds(
                                                            Left(
                                                                Text(
                                                                    ThisItem.'End Date and Time',
                                                                    "hh:mm AM/PM"
                                                                ),
                                                                Max(
                                                                    Len(
                                                                        Text(
                                                                            ThisItem.'End Date and Time',
                                                                            "hh:mm AM/PM"
                                                                        )
                                                                    ) - 2,
                                                                    0
                                                                )
                                                            )
                                                        )
                                                    VerticalAlign: ='TextCanvas.VerticalAlign'.Bottom
                                                    Weight: =varThemeFont.H2.weight
                                                    Width: =Self.Size * 2.5
                                                    Wrap: =false
                                                    X: =0
                                                    Y: =0
                                                    ZIndex: =1

                                                txtEndAmPM As Text:
                                                    Align: ='TextCanvas.Align'.Start
                                                    AlignInContainer: =AlignInContainer.Center
                                                    AutoHeight: =false
                                                    DisplayMode: =DisplayMode.Edit
                                                    Font: =""
                                                    FontColor: =If(ThisItem.Selected_Status Or (ThisItem.Existing_Session And IsBlank(LookUp(colTrainingSessions, Selected_Status = true))), varTheme.brandForeground1, ColorValue(varTheme.neutralForeground3))
                                                    FontItalic: =varThemeFont.H3.italic
                                                    Height: =Parent.Height
                                                    LayoutMinHeight: =32
                                                    LayoutMinWidth: =96
                                                    Size: =varThemeFont.B1.size
                                                    Text: |-
                                                        =Right(
                                                            Text(
                                                                ThisItem.'End Date and Time',
                                                                "hh:mmAM/PM"
                                                            ), 2
                                                        )
                                                    VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                                                    Weight: =varThemeFont.B1.weight
                                                    Width: =Self.Size * 2
                                                    Wrap: =false
                                                    X: =0
                                                    Y: =0
                                                    ZIndex: =2

                                            txtEndTime As Text:
                                                Align: ='TextCanvas.Align'.Start
                                                AutoHeight: =false
                                                DisplayMode: =DisplayMode.Edit
                                                Font: =""
                                                FontColor: =
                                                FontItalic: =varThemeFont.H3.italic
                                                Height: =Self.Size *1.5
                                                LayoutMinHeight: =32
                                                LayoutMinWidth: =96
                                                Size: =varThemeFont.B2.size
                                                Text: ="End Time"
                                                VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                                                Weight: =varThemeFont.B3.weight
                                                Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                                                Wrap: =false
                                                X: =0
                                                Y: =0
                                                ZIndex: =2

                                btnSelectSession As Button:
                                    AccessibleLabel: |-
                                        =$"Select schedule : {ThisItem.Name}, {Text(
                                            ThisItem.'Start Date and Time',
                                            "hh:mm AM/PM"
                                        )} to {Text(
                                            ThisItem.'End Date and Time',
                                            "hh:mm AM/PM"
                                        )}"
                                    Align: =""
                                    AlignInContainer: |-
                                        =If(
                                            conScheduleTime.LayoutDirection = LayoutDirection.Horizontal, //Desktop
                                            AlignInContainer.Center,AlignInContainer.Start
                                        )
                                    Appearance: ='ButtonCanvas.Appearance'.Secondary
                                    BasePaletteColor: =
                                    DisplayMode: |-
                                        =If( 
                                            !ThisItem.Existing_Session,
                                            //Max capacity validation
                                            If(ThisItem.'Available Slot' <> 0,
                                                DisplayMode.Edit,
                                                DisplayMode.Disabled
                                            )
                                            ,
                                            DisplayMode.Disabled
                                        )
                                    Font: =""
                                    FontColor: =
                                    FontItalic: =
                                    FontSize: =0
                                    FontWeight: =""
                                    Height: =32
                                    Icon: =""
                                    IconRotation: =0
                                    IconStyle: ="Outline"
                                    Layout: ="Icon before"
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =(Self.Y + Len(Self.Text)) * 1
                                    OnSelect: |-
                                        =With(
                                            {
                                                //Get existing selected session
                                                varExistingSelection: LookUp(colTrainingSessions, Selected_Status = true)
                                            },
                                        
                                            //PROCESS: Deselect existing selection
                                            If(
                                                !IsBlank(varExistingSelection),
                                                
                                                Patch(
                                                    colTrainingSessions,
                                                    varExistingSelection,
                                                    {
                                                        Selected_Status: false
                                                    }
                                                );
                                        
                                                //Return the updated selection with the existing training session 
                                                UpdateContext(
                                                    {
                                                        var_SelectedTraining:
                                                        Patch(
                                                            colSelectedTrainingSessions,
                                                            var_SelectedTraining,
                                                            {
                                                                UpdatedTrainingSession: var_SelectedTraining.ExistingTrainingSession
                                                            }
                                                        )
                                                    }
                                                );
                                            );
                                        
                                            //PROCESS: Update current selection state
                                            If(
                                                varExistingSelection.'Training Session Id' <> ThisItem.'Training Session Id',
                                                Patch(
                                                    colTrainingSessions,
                                                    ThisItem,
                                                    { Selected_Status: true }
                                                );
                                        
                                                //Update training sessions selection with the current session
                                                UpdateContext(
                                                    {
                                                        var_SelectedTraining:
                                                        Patch(
                                                            colSelectedTrainingSessions,
                                                            var_SelectedTraining,
                                                            {
                                                                UpdatedTrainingSession: ThisItem
                                                            }
                                                        )
                                                    }
                                                );
                                            );
                                            
                                            
                                            //PROCESS: Reset succeeding training
                                            With(
                                                {
                                                    varSelectedTrainingDate: 
                                                    Date(
                                                        Year(var_SelectedTraining.UpdatedTrainingSession.'Start Date and Time'), 
                                                        Month(var_SelectedTraining.UpdatedTrainingSession.'Start Date and Time'), 
                                                        Day(var_SelectedTraining.UpdatedTrainingSession.'Start Date and Time')
                                                    ),
                                                    varSucceedingTrainingDate: 
                                                    Date(
                                                        Year(var_SucceedingTraining.UpdatedTrainingSession.'Start Date and Time'), 
                                                        Month(var_SucceedingTraining.UpdatedTrainingSession.'Start Date and Time'), 
                                                        Day(var_SucceedingTraining.UpdatedTrainingSession.'Start Date and Time')
                                                    ),
                                                    varSucceedingExistingTrainingDate: 
                                                    Date(
                                                        Year(var_SucceedingTraining.ExistingTrainingSession.'Start Date and Time'), 
                                                        Month(var_SucceedingTraining.ExistingTrainingSession.'Start Date and Time'), 
                                                        Day(var_SucceedingTraining.ExistingTrainingSession.'Start Date and Time')
                                                    )
                                                },
                                                UpdateContext(
                                                    {
                                                        var_SucceedingTraining:
                                                        Patch(
                                                            colSelectedTrainingSessions,
                                                            var_SucceedingTraining,
                                                            {
                                                                UpdatedTrainingSession: 
                                                                //Check succeeding training. If current deselected training and succeeding training session dates conflict, 
                                                                //reset the updated training session of the succeeding training
                                                                If(
                                                                    varSucceedingTrainingDate <= varSelectedTrainingDate,
                                                                    //Check if existing booking does not conflict with the current training date
                                                                    //If not - revert the updated training session of succeeding training to the existing training session date
                                                                    If(
                                                                        IsBlank(var_SucceedingTraining.UpdatedTrainingSession) And
                                                                        varSucceedingExistingTrainingDate > varSelectedTrainingDate,
                                                                        var_SucceedingTraining.ExistingTrainingSession,
                                                                        Blank()
                                                                    ),
                                                                    var_SucceedingTraining.UpdatedTrainingSession
                                                                )
                                                            }
                                                        )
                                                    }
                                                );
                                            );
                                        );
                                    Text: |+
                                        =If(
                                            Self.DisplayMode = DisplayMode.Edit,
                                            If(
                                                ThisItem.Selected_Status,
                                                "Unselect",
                                                "Select"
                                            ),
                                            "Current booking"
                                        )
                                        
                                    VerticalAlign: =""
                                    Visible: =true
                                    Width: =If(App.ActiveScreen.Size = ScreenSize.Small, Parent.Width - Parent.PaddingLeft - Parent.PaddingRight, var_LayoutProperties.buttonwidth.width1)
                                    X: =0
                                    Y: =0
                                    ZIndex: =2

            conBody_SelectedSessions As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.Semilight
                Fill: =ColorValue(varTheme.backgroundFill)
                FillPortions: =0
                Height: =conSelectedSessionHeader.Height + shpSelectedSessionSeparator.Height + galSelectedSessions.Height + conSubmitButton.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                RadiusBottomLeft: =8
                RadiusBottomRight: =8
                RadiusTopLeft: =8
                RadiusTopRight: =8
                Width: |-
                    =If(conMain_Body.LayoutDirection = LayoutDirection.Vertical, Parent.Width, 
                    Parent.Width - conBody_Trainings.Width - Parent.PaddingLeft * 2 - Parent.LayoutGap)
                ZIndex: =3

                conSelectedSessionHeader As groupContainer.horizontalAutoLayoutContainer:
                    FillPortions: =0
                    Height: =txtSelectedSession.Height + Self.PaddingBottom + Self.PaddingTop
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =16
                    PaddingLeft: =16
                    PaddingRight: =16
                    PaddingTop: =16
                    ZIndex: =1

                    txtSelectedSession As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =false
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.H3.italic
                        Height: =Self.Size * 2.2
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =14
                        Text: ="Selected sessions"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                        Weight: =varThemeFont.B1.weightBold
                        Width: =200
                        X: =0
                        Y: =0
                        ZIndex: =1

                    txtNumberOFSelectedSession As Text:
                        Align: ='TextCanvas.Align'.End
                        AutoHeight: =false
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        Font: =""
                        FontColor: =ColorValue(varTheme.neutralForeground3)
                        FontItalic: =varThemeFont.H3.italic
                        Height: |
                            =Self.Size * 2.5
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: =$"{CountRows(colSelectedTrainingSessions) - CountIf(colSelectedTrainingSessions, IsBlank(UpdatedTrainingSession))} of {galTrainings.AllItemsCount} selected"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                        Weight: =varThemeFont.B2.weight
                        Width: =200
                        X: =0
                        Y: =0
                        ZIndex: =2

                shpSelectedSessionSeparator As rectangle:
                    AccessibleLabel: =
                    BorderColor: =RGBA(0, 18, 107, 1)
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =ColorValue(varTheme.neutralStroke2)
                    Height: =1
                    Width: =Parent.Width
                    X: =Parent.PaddingLeft
                    Y: =Parent.PaddingTop
                    ZIndex: =2

                galSelectedSessions As gallery.variableTemplateHeightGallery:
                    AccessibleLabel: ="Selected training sessions"
                    AlignInContainer: =AlignInContainer.SetByContainer
                    BorderColor: =App.Theme.Colors.Darker40
                    DelayItemLoading: =true
                    FillPortions: =0
                    FocusedBorderThickness: =2
                    Height: |-
                        =With(
                            {
                                DesktopHeight: 
                                
                                App.ActiveScreen.Height - 
                                 cmpHeader_TrainingSessions.Height - (txtScreenTitle.Height + conMain_TrainingSessions.LayoutGap + conMain_TrainingSessions.PaddingTop + conMain_TrainingSessions.PaddingBottom)- 
                                (
                                    conMain_Body.PaddingTop + 
                                        conBody_SelectedSessions.PaddingTop + 
                                       conSelectedSessionHeader.Height + shpSelectedSessionSeparator.Height + conSubmitButton.Height + 
                                       conBody_SelectedSessions.PaddingBottom + 
                                    conMain_Body.PaddingBottom
                                )
                        
                            },
                        
                          //Switch based on screen size
                            If(
                                App.ActiveScreen.Size >= ScreenSize.Large,//Desktop
                                DesktopHeight,
                                Self.TemplateHeight * Max(
                                    Self.AllItemsCount,
                                    1
                                )
                            )
                        )
                    Items: |-
                        =SortByColumns(
                            colSelectedTrainingSessions, "Order", SortOrder.Ascending
                        )
                    Layout: =Layout.Vertical
                    LayoutMinHeight: =287
                    LayoutMinWidth: =320
                    LoadingSpinner: =LoadingSpinner.Data
                    TabIndex: =0
                    TemplatePadding: =0
                    TemplateSize: =Max(conSelectedSessionDetails.Height) + (galselectedSessionSeparator.Height * Self.AllItemsCount)
                    Width: =Parent.Width
                    ZIndex: =4

                    conSelectedSessionDetails As groupContainer.horizontalAutoLayoutContainer:
                        Height: =Max(conSelectedSessionTitle.Height) + consSelectedSessionTime.Height + Self.LayoutGap + Self.PaddingBottom + Self.PaddingTop
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =var_LayoutProperties.gap.gap2
                        PaddingLeft: =var_LayoutProperties.gap.gap2
                        PaddingRight: =var_LayoutProperties.gap.gap2
                        PaddingTop: =var_LayoutProperties.gap.gap2
                        Width: =Parent.TemplateWidth
                        ZIndex: =1

                        conSelectedSessionTitle As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: =Max(txtSelectedSessionTitle.Height)
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                            ZIndex: =3

                            txtSelectedSessionTitle As Text:
                                AutoHeight: =true
                                DisplayMode: =DisplayMode.Edit
                                Font: =""
                                FontColor: =
                                FontItalic: =varThemeFont.H3.italic
                                Height: =Self.Size * 1.8
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                Size: =varThemeFont.B2.size
                                Text: |-
                                    =//Add number if order is available
                                    If(!IsBlank(LookUp(Trainings, 'Training Id' = ThisItem.Training.'Training Id', Order)), 
                                    LookUp(Trainings, 'Training Id' = ThisItem.Training.'Training Id', Order) & ". ", "")
                                    & 
                                    LookUp(Trainings, 'Training Id' = ThisItem.Training.'Training Id', Name)
                                VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                                Weight: =varThemeFont.B2.weightBold
                                Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight - bdgSelectedSession.Width
                                Wrap: =true
                                X: =0
                                Y: =0
                                ZIndex: =1

                            bdgSelectedSession As Badge:
                                AccessibleLabel: |-
                                    =$"{ThisItem.Name}, selection status : {bdgSelectedSession.Content}"
                                Align: =""
                                AlignInContainer: =AlignInContainer.Center
                                Appearance: ='BadgeCanvas.Appearance'.Filled
                                BasePaletteColor: =
                                Content: |-
                                    =If(
                                        ThisItem.ExistingTrainingSession.'Training Session Id' <> ThisItem.UpdatedTrainingSession.'Training Session Id' And 
                                        !IsBlank(ThisItem.UpdatedTrainingSession),
                                        "Updated",
                                        "No selection"
                                    )
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =20
                                LayoutMinHeight: =32
                                LayoutMinWidth: =32
                                Shape: ='BadgeCanvas.Shape'.Circular
                                ThemeColor: |-
                                    =
                                    
                                    If(
                                        ThisItem.ExistingTrainingSession.'Training Session Id' <> ThisItem.UpdatedTrainingSession.'Training Session Id' And 
                                        !IsBlank(ThisItem.UpdatedTrainingSession),
                                        'BadgeCanvas.ThemeColor'.Brand,
                                        'BadgeCanvas.ThemeColor'.Danger
                                    )
                                VerticalAlign: =""
                                Visible: |-
                                    =If(
                                        Or(
                                            //New - No selection 
                                            IsBlank(ThisItem.ExistingTrainingSession) && IsBlank(ThisItem.UpdatedTrainingSession),
                                            //With existing session, wherein existing session is different from updated session and updated session is empty
                                            ThisItem.ExistingTrainingSession.'Training Session Id' <> ThisItem.UpdatedTrainingSession.'Training Session Id' &&
                                            IsBlank(ThisItem.UpdatedTrainingSession.'Training Session Id'),
                                            //With existing session, wherein existing session is different from updated session 
                                            ThisItem.ExistingTrainingSession.'Training Session Id' <> ThisItem.UpdatedTrainingSession.'Training Session Id' &&
                                            !IsBlank(ThisItem.UpdatedTrainingSession.'Training Session Id') && !IsBlank(ThisItem.ExistingTrainingSession.'Training Session Id')
                                        ),
                                        true,
                                        false
                                    )
                                Width: =86
                                X: =conMarker.X + 16
                                Y: =40
                                ZIndex: =2

                        consSelectedSessionTime As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: |-
                                =If(
                                    App.ActiveScreen.Size = ScreenSize.Small, //Mobile
                                    txtSelectedSessionStartTime.Height + txtSelectedSessionEndTime.Height,
                                    Max(txtSelectedSessionStartTime.Height, txtSelectedSessionEndTime.Height)
                                )
                            LayoutDirection: |-
                                =If(
                                    App.ActiveScreen.Size = ScreenSize.Small, //Mobile
                                    LayoutDirection.Vertical,
                                    LayoutDirection.Horizontal
                                )
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                            ZIndex: =4

                            txtSelectedSessionStartTime As Text:
                                Align: ='TextCanvas.Align'.Start
                                AutoHeight: =true
                                DisplayMode: =DisplayMode.Edit
                                Font: =""
                                FontColor: =
                                FontItalic: =varThemeFont.H3.italic
                                Height: =Self.Size * 1.8
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                Size: =varThemeFont.B2.size
                                Text: |-
                                    =With(
                                        {
                                            varSessionDate: If(
                                                ThisItem.ExistingTrainingSession.'Training Session Id' <> ThisItem.UpdatedTrainingSession.'Training Session Id' And !IsBlank(ThisItem.UpdatedTrainingSession),
                                                ThisItem.UpdatedTrainingSession.'Start Date and Time',
                                                ThisItem.ExistingTrainingSession.'Start Date and Time'
                                            )
                                        },
                                        If(
                                            bdgSelectedSession.Visible And bdgSelectedSession.Content <> "No Selection" And "Updated",
                                            "---",
                                            If(
                                                !IsBlank(varSessionDate),
                                                $"{Text(
                                                    varSessionDate,
                                                    "ddd"
                                                )} {Text(
                                                    varSessionDate,
                                                    "mmm"
                                                )} {Text(
                                                    varSessionDate,
                                                    "dd, yyyy"
                                                )}",
                                                "---"
                                            )
                                        )
                                    )
                                VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                                Weight: =varThemeFont.B2.weight
                                Width: |-
                                    =Parent.Width * 
                                    If(
                                        App.ActiveScreen.Size = ScreenSize.Small, //Mobile
                                        1,
                                        0.5
                                    )
                                Wrap: =true
                                X: =0
                                Y: =0
                                ZIndex: =1

                            txtSelectedSessionEndTime As Text:
                                AutoHeight: =true
                                DisplayMode: =DisplayMode.Edit
                                Font: =""
                                FontColor: =
                                FontItalic: =varThemeFont.H3.italic
                                Height: =Self.Size * 1.8
                                LayoutMinHeight: =32
                                LayoutMinWidth: =96
                                Size: =varThemeFont.B2.size
                                Text: |-
                                    =With(
                                        {
                                            varSessionTime: 
                                            If(
                                                ThisItem.ExistingTrainingSession.'Training Session Id' <> ThisItem.UpdatedTrainingSession.'Training Session Id' And !IsBlank(ThisItem.UpdatedTrainingSession),
                                                Text(ThisItem.UpdatedTrainingSession.'Start Date and Time', "hh:mm AM/PM") & " - " & 
                                                Text(ThisItem.UpdatedTrainingSession.'End Date and Time', "hh:mm AM/PM"),
                                                Text(ThisItem.ExistingTrainingSession.'Start Date and Time', "hh:mm AM/PM") & " - " & 
                                                Text(ThisItem.ExistingTrainingSession.'End Date and Time', "hh:mm AM/PM")
                                            )
                                        }
                                        ,
                                        If(
                                            Or(bdgSelectedSession.Visible And bdgSelectedSession.Content <> "No Selection" && "Updated", varSessionTime = " - "),
                                            "---", 
                                            varSessionTime
                                        )
                                    )
                                VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                                Weight: =varThemeFont.B2.weight
                                Width: |-
                                    =Parent.Width * 
                                    If(
                                        App.ActiveScreen.Size = ScreenSize.Small, //Mobile
                                        1,
                                        0.5
                                    )
                                Wrap: =true
                                X: =0
                                Y: =0
                                ZIndex: =2

                    galselectedSessionSeparator As rectangle:
                        AccessibleLabel: =
                        BorderColor: =RGBA(0, 18, 107, 1)
                        DisplayMode: =DisplayMode.Disabled
                        Fill: =ColorValue(varTheme.neutralStroke2)
                        Height: =1
                        Width: =Parent.TemplateWidth
                        X: =
                        Y: =conSelectedSessionDetails.Height
                        ZIndex: =2

                conSubmitButton As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    DropShadow: =DropShadow.Light
                    FillPortions: =0
                    Height: |
                        =btnBookSessions.Height + Self.PaddingBottom + Self.PaddingTop
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutJustifyContent: =LayoutJustifyContent.End
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =16
                    PaddingLeft: =16
                    PaddingRight: =16
                    PaddingTop: =16
                    Width: =Parent.Width
                    ZIndex: =5

                    btnBookSessions As Button:
                        AccessibleLabel: ="Book selected session"
                        Align: =""
                        AlignInContainer: =AlignInContainer.Start
                        BasePaletteColor: =
                        DisplayMode: |
                            =
                            
                            
                            
                            If(
                                Or(
                                    //New booking
                                    CountRows(colSelectedTrainingSessions) > 0 And CountIf(
                                        colSelectedTrainingSessions,
                                        UpdatedTrainingSession.'Training Session Id' <> ExistingTrainingSession.'Training Session Id'
                                    ) = CountRows(colSelectedTrainingSessions) And CountIf(
                                        colSelectedTrainingSessions,
                                        IsBlank(ExistingTrainingSession.'Training Session Id')
                                    ) = CountRows(colSelectedTrainingSessions),
                                    //Existing booking with updates
                                    CountRows(colSelectedTrainingSessions) > 0 And CountIf(
                                        colSelectedTrainingSessions,
                                        !IsBlank(UpdatedTrainingSession)
                                    ) = CountRows(colSelectedTrainingSessions) And CountIf(
                                        colSelectedTrainingSessions,
                                        UpdatedTrainingSession.'Training Session Id' = ExistingTrainingSession.'Training Session Id'
                                    ) < CountRows(colSelectedTrainingSessions)
                                ),
                                var_DisableSubmit,
                                DisplayMode.Disabled
                            )
                        Font: =""
                        FontColor: =
                        FontItalic: =
                        FontSize: =0
                        FontWeight: =""
                        Height: =32
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =180
                        OnSelect: |+
                            =//disable the button
                            UpdateContext({var_DisableSubmit: DisplayMode.Disabled});
                            
                            //Check if atleast one of the trainings have existing booking
                            //Navigate to Confirmation Screen if Update
                            If(
                                !IsBlank(varSelectedTraining),
                                ClearCollect(
                                    colRecordsToUpdate,
                                    colSelectedTrainingSessions
                                );
                                
                                Navigate('Confirmation Screen', Transition.None, {var_IsUpdate: true, var_Header: "Update booking", var_message: "Are you sure you want to update your booking, you cannot undo this."}),
                                 //Process: Check colSelectedTrainingSessions with updates and patch them to DVerse
                                IfError(
                                    ForAll(
                                        colSelectedTrainingSessions As varTrainingSessionItem,
                                            //Check if existing training session is not the same with updated training session
                                        If(
                                            varTrainingSessionItem.ExistingTrainingSession.'Training Session Id' <> varTrainingSessionItem.UpdatedTrainingSession.'Training Session Id',
                                            With(
                                                {
                                                    varTrainingSessionExistingTblRecord: LookUp(
                                                        'Training Sessions',
                                                        'Training Session Id' = varTrainingSessionItem.ExistingTrainingSession.'Training Session Id'
                                                    ),
                                                    varTrainingSessionUpdatedTblRecord: LookUp(
                                                        'Training Sessions',
                                                        'Training Session Id' = varTrainingSessionItem.UpdatedTrainingSession.'Training Session Id'
                                                    ),
                                                    varExistingTrainingSessionId: varTrainingSessionItem.ExistingTrainingSession.'Training Session Id',
                                                    varUpdatedTrainingSessionId: varTrainingSessionItem.UpdatedTrainingSession.'Training Session Id'
                                                },
                                                    //If there is an existing booking - cancel it and create a new one (status reason - booking updated)
                                                If(
                                                    !IsBlank(varTrainingSessionItem.ExistingBooking.'Booking Id'),
                                                    With(
                                                        {varExistingBookingId: varTrainingSessionItem.ExistingBooking.'Booking Id'},
                                                            //Cancel existing booking
                                                        IfError(
                                                            Patch(
                                                                Bookings,
                                                                LookUp(
                                                                    Bookings,
                                                                    'Booking Id' = varExistingBookingId
                                                                ),
                                                                {
                                                                    Status: 'Status (Bookings)'.Inactive,
                                                                    'Status Reason': 'Status Reason (Bookings)'.'Booking updated'
                                                                }
                                                            ),
                                                            //Error encountered
                                                            Notify(
                                                               "Error cancelling existing booking on column(s): " & Concat(
                                                                    Errors(Bookings),
                                                                    Column & ": " & Message,
                                                                    "; "
                                                                ),
                                                                NotificationType.Error
                                                            ),
                                                            //Successful cancellation of existing booking
                                                            //Return slot/capacity count
                                                            Patch(
                                                                'Training Sessions',
                                                                varTrainingSessionExistingTblRecord,
                                                                {
                                                                    'Booked Slot': CountIf(
                                                                        Bookings,
                                                                        'Training Session'.'Training Session Id' = varExistingTrainingSessionId And Status = 'Status (Bookings)'.Active
                                                                    ),
                                                                    'Day of the Week': Text(
                                                                        varTrainingSessionExistingTblRecord.'Start Date and Time',
                                                                        "ddd"
                                                                    )
                                                                }
                                                            ),
                                                            //Error encountered
                                                            Notify(
                                                                "Error cancelling existing booking on column(s): " & Concat(
                                                                    Errors('Training Sessions'),
                                                                    Column & ": " & Message,
                                                                    "; "
                                                                ),
                                                                NotificationType.Error
                                                            ),
                                                            ""
                                                        );
                                                    );
                                                );
                                                    //Create new booking
                                                IfError(  
                                                    Patch(
                                                        Bookings,
                                                        Defaults(Bookings),
                                                        {
                                                            'Registered User': varCurrentUser,
                                                            'Status Reason': 'Status Reason (Bookings)'.Registered,
                                                            'Training Session': varTrainingSessionUpdatedTblRecord,
                                                            Training: varTrainingSessionUpdatedTblRecord.Training,
                                                            Category: LookUp(Categories, 'Category Id' = cmbCategory.Selected.'Category Id')
                                                        }
                                                    ),
                                                    //Error encountered
                                                    Notify(
                                                        "Error creating new booking on column(s): " & Concat(
                                                            Errors(Bookings),
                                                            Column & ": " & Message,
                                                            "; "
                                                        ),
                                                        NotificationType.Error
                                                    ),
                            
                                                    //Successful booking
                                                    //Update training sessions booked slot
                                                    Patch(
                                                        'Training Sessions',
                                                        varTrainingSessionUpdatedTblRecord,
                                                        {
                                                            'Booked Slot': CountIf(
                                                                Bookings,
                                                                'Training Session'.'Training Session Id' = varUpdatedTrainingSessionId And Status = 'Status (Bookings)'.Active
                                                            ),
                                                            'Day of the Week': Text(
                                                                varTrainingSessionUpdatedTblRecord.'Start Date and Time',
                                                                "ddd"
                                                            )
                                                        }
                                                    ),
                            
                                                    //Error encountered on training sessions update
                                                    Notify(
                                                        "Error creating new booking on column(s): " & Concat(
                                                            Errors('Training Sessions'),
                                                            Column & ": " & Message,
                                                            "; "
                                                        ),
                                                        NotificationType.Error
                                                    ),
                            
                                                    //Successful patch
                                                    Notify(
                                                        "You have successfully booked the Training.",
                                                        NotificationType.Success
                                                    );
                                                    Reset(cmbSkillLevel);
                                                    Reset(cmbCategory);
                                                    Navigate('Booking Screen')
                                                );
                                            );
                                        );
                                    ),
                                        //Error encountered on training sessions loop
                                    Notify(
                                        "Error updating bookings!" & Concat(
                                            Errors('Training Sessions'),
                                            Column & ": " & Message,
                                            "; "
                                        ),
                                        NotificationType.Error
                                    ),
                                        //Updates successful
                                    Reset(cmbSkillLevel);
                                    Reset(cmbCategory);
                                    Navigate(
                                        'Booking Screen',
                                        Transition.None
                                    )
                                );
                                
                            );
                            
                            
                            
                        Text: ="Book selected sessions"
                        VerticalAlign: =""
                        Width: |-
                            =If(
                                App.ActiveScreen.Size = ScreenSize.Large,
                                Self.LayoutMinWidth,
                                Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                            )
                        X: =0
                        Y: =0
                        ZIndex: =1

    cmpHeader_TrainingSessions As compHeaderCompound:
        BackButtonVisibility: =false
        HeaderHeight: =varComponenentLayoutProperties.headerheight
        HeaderWidth: =Parent.Width
        NavigateMenu: ='Booking Screen'
        Width: =cmpHeader_TrainingSessions.HeaderWidth
        ZIndex: =2

