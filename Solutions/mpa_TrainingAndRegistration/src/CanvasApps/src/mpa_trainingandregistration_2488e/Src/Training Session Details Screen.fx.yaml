"'Training Session Details Screen' As screen":
    Fill: =Color.White
    LoadingSpinnerColor: =App.Theme.Colors.Primary
    OnHidden: =
    OnVisible: |+
        =
        
        UpdateContext(
            {
                var_LayoutProperties: {
                    outerPadding: {
                        top: 32,
                        right: {extraLarge: 230, largeAndMedium : 32, small : 16},
                        bottom: 32,
                        left: {extraLarge: 230, largeAndMedium : 32, small : 16}
                    },
                    innerPadding: {
                        top: 20,
                        right: 20,
                        bottom: 20,
                        left: 20
                    },
                    gap: {
                        gap1: 8,
                        gap2: 10,
                        gap3: 16
                    },
                    labelprerequisiteHeight: 87,
                    infobuttonWidth: 20,
                    infobuttonHeight: 30,
                    profilewidth: 32,
                    prifileheight: 32,
                    categorySkillLevelContainer: 206
                },
                var_TrainingSessionDetails: LookUp(
                    'Training Sessions',
                    'Training Session Id' = var_SelectedTrainingSession.'Training Session'.'Training Session Id'
                ),
                var_TrainingSessionTrainerEmail: LookUp(
                    Users,
                    User = var_SelectedTrainingSession.'Training Session'.'Owning User'.User
                ).'Primary Email'
            }
        );
        
        
        

    conBackground_TSD As groupContainer.verticalAutoLayoutContainer:
        Fill: =ColorValue(varTheme.background)
        Height: =Parent.Height - cmpHeaderCompound_TSD.Height
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: |-
            =
            //Reponsive condition
            If('Training Session Details Screen'.Size >= ScreenSize.Large,
                var_LayoutProperties.gap.gap3,
                var_LayoutProperties.gap.gap3 /2
            )
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingBottom: =var_LayoutProperties.outerPadding.bottom
        PaddingLeft: |-
            =//Responsive condition
            If(
                'Training Session Details Screen'.Size = ScreenSize.ExtraLarge, 
                var_LayoutProperties.outerPadding.left.extraLarge,
                'Training Session Details Screen'.Size = ScreenSize.Large Or 'Training Session Details Screen'.Size = ScreenSize.Medium,
                var_LayoutProperties.outerPadding.left.largeAndMedium,
                'Training Session Details Screen'.Size = ScreenSize.Small,
                var_LayoutProperties.outerPadding.left.small
            )
        PaddingRight: |-
            =//Responsive condition
            If(
                'Training Session Details Screen'.Size = ScreenSize.ExtraLarge, 
                var_LayoutProperties.outerPadding.right.extraLarge,
                'Training Session Details Screen'.Size = ScreenSize.Large Or 'Training Session Details Screen'.Size = ScreenSize.Medium,
                var_LayoutProperties.outerPadding.right.largeAndMedium,
                'Training Session Details Screen'.Size = ScreenSize.Small,
                var_LayoutProperties.outerPadding.right.small
            )
        PaddingTop: |-
            =
            If('Training Session Details Screen'.Size >= ScreenSize.Medium,
                var_LayoutProperties.outerPadding.top,
                var_LayoutProperties.gap.gap3 /2
            )
        Width: =Parent.Width
        Y: =cmpHeaderCompound_TSD.Height
        ZIndex: =3

        txtTraining_TSD As Text:
            AutoHeight: =true
            DisplayMode: =DisplayMode.Edit
            Font: =""
            FontColor: =
            Height: =Self.Size * 1.5
            LayoutMinHeight: =32
            LayoutMinWidth: =96
            PaddingTop: |
                =0
            Size: =varThemeFont.H1.size
            Text: |
                =
                   Coalesce(var_TrainingToView.Name,var_SelectedTrainingSession.Training.Name, "No data to display")
                
                    
            VerticalAlign: ='TextCanvas.VerticalAlign'.Top
            Weight: =varThemeFont.H3.weightBold
            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
            X: =0
            Y: =0
            ZIndex: =2

        txtShortdescription_TSD As Text:
            Align: ='TextCanvas.Align'.Start
            AutoHeight: =true
            DisplayMode: =DisplayMode.Edit
            Font: =""
            FontColor: =
            FontItalic: =varThemeFont.H3.italic
            Height: =Len(Self.Text)
            LayoutMinHeight: =32
            LayoutMinWidth: =96
            Size: =varThemeFont.B2.size
            Text: |+
                =Coalesce(var_TrainingToView.Details,var_TrainingSessionDetails.Training.Details, "No data to display")
                
            VerticalAlign: ='TextCanvas.VerticalAlign'.Top
            Weight: =varThemeFont.B2.weight
            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
            X: =0
            Y: =0
            ZIndex: =3

        conDetails_TSD As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.Center
            DropShadow: =DropShadow.Semilight
            Fill: =ColorValue(varTheme.neutralBackground1)
            FillPortions: =0
            Height: |-
                =//Reponsive condition
                If('Training Session Details Screen'.Size >= ScreenSize.Large,
                    Max(var_LayoutProperties.labelprerequisiteHeight, conCategory_TSD.Height, conSkilllevel_TSD.Height, conPrerequisite_TSD.Height),
                    Self.PaddingTop + conCategory_TSD.Height + conSkilllevel_TSD.Height + shpDivider_TSD.Height + conPrerequisite_TSD.Height
                )
            LayoutDirection: |-
                =//Reponsive condition
                If('Training Session Details Screen'.Size <= ScreenSize.Medium,
                    LayoutDirection.Vertical,
                    LayoutDirection.Horizontal
                )
            LayoutGap: |-
                =//Reponsive condition
                If('Training Session Details Screen'.Size >= ScreenSize.Large,
                    var_LayoutProperties.gap.gap3,
                    0
                )
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =var_LayoutProperties.innerPadding.bottom
            PaddingLeft: |
                =//Reponsive condition
                If('Training Session Details Screen'.Size >= ScreenSize.Large,
                    var_LayoutProperties.gap.gap3,
                    0
                )
            PaddingRight: |
                =//Reponsive condition
                If('Training Session Details Screen'.Size >= ScreenSize.Large,
                    var_LayoutProperties.innerPadding.right,
                    0
                )
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
            ZIndex: =4

            conCategory_TSD As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                Fill: =ColorValue(varTheme.neutralBackground1)
                FillPortions: =0
                Height: =Max(Self.PaddingTop + Self.PaddingBottom + txtCategory_TSD.Height + txtCategoryDetail_TSD.Height, var_LayoutProperties.labelprerequisiteHeight)
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =var_LayoutProperties.innerPadding.bottom
                PaddingLeft: |-
                    =//Reponsive condition
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        0,
                        var_LayoutProperties.gap.gap3
                    )
                PaddingRight: |-
                    =//Reponsive condition
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        0,
                        var_LayoutProperties.gap.gap3
                    )
                PaddingTop: =var_LayoutProperties.innerPadding.top
                Width: |-
                    =//Reponsive condition
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        //var_LayoutProperties.categorySkillLevelContainer
                        (Parent.Width - Parent.PaddingLeft - Parent.PaddingRight - (Parent.LayoutGap * 3) - 1) * .25
                        ,
                        Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                    )
                ZIndex: =1

                txtCategory_TSD As Text:
                    Align: ='TextCanvas.Align'.Start
                    AutoHeight: =false
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =varThemeFont.B2.italic
                    Height: =(Self.Size * 1.5) + 6
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Size: =varThemeFont.B2.size
                    Text: ="Category"
                    VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                    Weight: =varThemeFont.B2.weightBold
                    Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =1

                txtCategoryDetail_TSD As Text:
                    Align: ='TextCanvas.Align'.Start
                    AutoHeight: =true
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =varThemeFont.H3.italic
                    Height: =Self.Size * 2.3
                    LayoutMinHeight: =Self.Size * 1.5
                    LayoutMinWidth: =96
                    Size: =varThemeFont.B2.size
                    Text: =Coalesce(var_TrainingToView.Category.Name,var_TrainingSessionDetails.Training.Category.Name, "No data to display")
                    VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                    Weight: =varThemeFont.B2.weight
                    Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                    Wrap: =true
                    X: =0
                    Y: =0
                    ZIndex: =2

            conSkilllevel_TSD As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                Fill: =ColorValue(varTheme.neutralBackground1)
                FillPortions: =0
                Height: |-
                    =
                    Max(Self.PaddingTop + Self.PaddingBottom + txtSkilllevelDetail_TSD.Height + txtSkilllevel_TSD.Height, var_LayoutProperties.labelprerequisiteHeight)
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =var_LayoutProperties.innerPadding.bottom
                PaddingLeft: |-
                    =//Reponsive condition
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        0,
                        var_LayoutProperties.gap.gap3
                    )
                PaddingRight: |-
                    =//Reponsive condition
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        0,
                        var_LayoutProperties.gap.gap3
                    )
                PaddingTop: =var_LayoutProperties.innerPadding.top
                Width: |-
                    =
                    //Reponsive condition
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        (Parent.Width - Parent.PaddingLeft - Parent.PaddingRight - (Parent.LayoutGap * 3) - 1) * .25,
                        Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                    )
                ZIndex: =2

                txtSkilllevel_TSD As Text:
                    Align: ='TextCanvas.Align'.Start
                    AutoHeight: =false
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =varThemeFont.B2.italic
                    Height: =(Self.Size * 1.5) + 6
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Size: =varThemeFont.B2.size
                    Text: ="Skill level"
                    VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                    Weight: =varThemeFont.B2.weightBold
                    Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =1

                txtSkilllevelDetail_TSD As Text:
                    Align: ='TextCanvas.Align'.Start
                    AutoHeight: =true
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =varThemeFont.H3.italic
                    Height: =(Self.Size * 1.5) + 6
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Size: =varThemeFont.B2.size
                    Text: |
                        =Coalesce(var_TrainingToView.'Skill Level'.Name,var_TrainingSessionDetails.Training.'Skill Level'.Name, "No data to display")
                    VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                    Weight: =varThemeFont.B2.weight
                    Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =2

            shpDivider_TSD As rectangle:
                AccessibleLabel: =
                BorderColor: =App.Theme.Colors.Darker40
                DisplayMode: =DisplayMode.View
                Fill: =ColorValue(varTheme.neutralStroke2)
                Height: |-
                    =//Reponsive condition
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        Max(var_LayoutProperties.labelprerequisiteHeight, conCategory_TSD.Height, conSkilllevel_TSD.Height, conPrerequisite_TSD.Height),
                        1
                    )
                Width: |-
                    =//Reponsive condition
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        1,
                        Parent.Width
                    )
                ZIndex: =3

            conPrerequisite_TSD As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                Fill: =ColorValue(varTheme.neutralBackground1)
                FillPortions: =0
                Height: |-
                    =
                    Max(Self.PaddingTop + Self.PaddingBottom + conPrerequisitedetail_TSD.Height + txtPrerequisitedetail_TSD.Height, var_LayoutProperties.labelprerequisiteHeight)
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =var_LayoutProperties.innerPadding.bottom
                PaddingLeft: |-
                    =//Reponsive condition
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        0,
                        var_LayoutProperties.gap.gap3
                    )
                PaddingRight: |-
                    =//Reponsive condition
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        0,
                        var_LayoutProperties.gap.gap3
                    )
                PaddingTop: =
                Width: |-
                    =//Reponsive condition
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        Parent.Width - conSkilllevel_TSD.Width - conCategory_TSD.Width - Parent.PaddingLeft - Parent.PaddingRight - (Parent.LayoutGap * 3) - shpDivider_TSD.Width,
                        Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                    )
                ZIndex: =6

                conPrerequisitedetail_TSD As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    FillPortions: =0
                    Height: |
                        =txtPrerequisiteheader_TSD.Height + Self.PaddingTop
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingTop: |-
                        =//Added the padding here to avoid cutting of focus border
                        var_LayoutProperties.innerPadding.top
                    Width: =txtPrerequisitedetail_TSD.Width
                    ZIndex: =1

                    txtPrerequisiteheader_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =false
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.B2.italic
                        Height: =(Self.Size * 1.5) + 8
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        PaddingBottom: =
                        Size: =varThemeFont.B2.size
                        Text: ="Prerequisite"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                        Weight: =varThemeFont.B2.weightBold
                        Width: =var_LayoutProperties.labelprerequisiteHeight + 10
                        X: =0
                        Y: =0
                        ZIndex: =1

                    "InfoPrerequisite_TSD As 'Information button'":
                        AccessibleLabel: ="Prerequisite"
                        BasePaletteColor: =
                        Content: ="If you have not completed the prerequisite training, you will not be allowed to book this training."
                        DisplayMode: =DisplayMode.Edit
                        FontColor: =
                        Height: =txtPrerequisiteheader_TSD.Height
                        IconSize: ='InfoButtonCanvas.IconSize'.Medium
                        LayoutMinHeight: =32
                        LayoutMinWidth: =32
                        Width: =var_LayoutProperties.infobuttonWidth
                        X: =0
                        Y: =0
                        ZIndex: =2

                txtPrerequisitedetail_TSD As Text:
                    Align: ='TextCanvas.Align'.Start
                    AutoHeight: =true
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =varThemeFont.H3.italic
                    Height: =Self.Size * 1.5
                    LayoutMinHeight: =32
                    LayoutMinWidth: =96
                    Size: =varThemeFont.B2.size
                    Text: =Coalesce(var_TrainingToView.Prerequisite.Name,var_TrainingSessionDetails.Training.Prerequisite.Name, "No data to display")
                    VerticalAlign: ='TextCanvas.VerticalAlign'.Bottom
                    Weight: =varThemeFont.B2.weight
                    Width: |-
                        =//Reponsive condition
                        If('Training Session Details Screen'.Size >= ScreenSize.Large,
                            conPrerequisite_TSD.Width,
                            Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        )
                    Wrap: =true
                    X: =0
                    Y: =0
                    ZIndex: =2

        conLayoutDetails_TSD As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: |-
                =//Reponsive condition
                If('Training Session Details Screen'.Size >= ScreenSize.Large,
                If(conDescriptionlayout_TSD.Height > conSessionDetails_TSD.Height, conDescriptionlayout_TSD.Height, conSessionDetails_TSD.Height),
                conDescriptionlayout_TSD.Height + conSessionDetails_TSD.Height
                
                )
            LayoutDirection: |-
                =//Reponsive condition
                If('Training Session Details Screen'.Size >= ScreenSize.Large,
                    LayoutDirection.Horizontal,
                    LayoutDirection.Vertical
                )
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =Parent.Width
            ZIndex: =5

            conDescriptionlayout_TSD As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                FillPortions: =0
                Height: =conDescriptiondetails_TSD.Height + Self.PaddingTop + Self.PaddingBottom
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: |-
                    =
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        var_LayoutProperties.outerPadding.bottom,
                        var_LayoutProperties.gap.gap3 /2
                    )
                PaddingLeft: |-
                    =//Responsive condition
                    If(
                        'Training Session Details Screen'.Size = ScreenSize.ExtraLarge, 
                        var_LayoutProperties.outerPadding.left.extraLarge,
                        'Training Session Details Screen'.Size = ScreenSize.Large Or 'Training Session Details Screen'.Size = ScreenSize.Medium,
                        var_LayoutProperties.outerPadding.left.largeAndMedium,
                        'Training Session Details Screen'.Size = ScreenSize.Small,
                        var_LayoutProperties.outerPadding.left.small
                    )
                PaddingRight: =var_LayoutProperties.innerPadding.right - 10
                PaddingTop: |-
                    =
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        var_LayoutProperties.gap.gap2,
                        var_LayoutProperties.gap.gap3 /2
                    )
                Width: |-
                    =
                    //Responsive condition
                    If(
                        'Training Session Details Screen'.Size = ScreenSize.ExtraLarge, 
                        conDetails_TSD.Width * .6 + var_LayoutProperties.outerPadding.left.extraLarge,
                        'Training Session Details Screen'.Size = ScreenSize.Large,
                        conDetails_TSD.Width * .6 + var_LayoutProperties.outerPadding.left.largeAndMedium,
                    
                        Parent.Width
                    )
                ZIndex: =1

                conDescriptiondetails_TSD As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    DropShadow: =DropShadow.Semilight
                    Fill: =ColorValue(varTheme.neutralBackground1)
                    FillPortions: =0
                    Height: =txtAgendadetails_TSD.Height + txtAgendadetails_TSD.Y + Self.PaddingBottom
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =var_LayoutProperties.gap.gap3
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: |-
                        =//Reponsive condition
                        If('Training Session Details Screen'.Size >= ScreenSize.Large,
                            var_LayoutProperties.innerPadding.bottom,
                            var_LayoutProperties.gap.gap3
                        )
                    PaddingLeft: |-
                        =
                        
                        //Reponsive condition
                        If('Training Session Details Screen'.Size >= ScreenSize.Large,
                            var_LayoutProperties.innerPadding.left,
                            var_LayoutProperties.gap.gap3
                        )
                    PaddingRight: |-
                        =//Reponsive condition
                        If('Training Session Details Screen'.Size >= ScreenSize.Large,
                            var_LayoutProperties.innerPadding.right,
                            var_LayoutProperties.gap.gap3
                        )
                    PaddingTop: |-
                        =//Reponsive condition
                        If('Training Session Details Screen'.Size >= ScreenSize.Large,
                            var_LayoutProperties.innerPadding.top,
                            var_LayoutProperties.gap.gap3
                        )
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Width: |-
                        =//Reponsive condition
                        If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        conDetails_TSD.Width * .6 - Parent.PaddingRight,
                        conDetails_TSD.Width
                        )
                    ZIndex: =1

                    txtlongdescription_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =false
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.B2.italic
                        Height: =Self.Size * 2
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: ="Long description"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                        Weight: =varThemeFont.B1.weightBold
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        Wrap: =false
                        X: =0
                        Y: =0
                        ZIndex: =1

                    txtLongdescriptionsdetails_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =true
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.H3.italic
                        Height: =Self.Size * Len(Self.Text)
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: |
                            =Coalesce(var_TrainingToView.Description,var_TrainingSessionDetails.Training.Description, "No data to display")
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                        Weight: =varThemeFont.B2.weight
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =2

                    txtGoals_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =false
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.B2.italic
                        Height: =Self.Size * 2
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: ="Goals"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                        Weight: =varThemeFont.B1.weightBold
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        Wrap: =false
                        X: =0
                        Y: =0
                        ZIndex: =3

                    txtGoalsdetails_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =true
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.H3.italic
                        Height: =Self.Size * Len(Self.Text)
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: =Coalesce(var_TrainingToView.Goal,var_TrainingSessionDetails.Training.Goal, "No data to display")
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                        Weight: =varThemeFont.B2.weight
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =4

                    txtAgenda_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =false
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.B2.italic
                        Height: =Self.Size * 2
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: ="Agenda"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                        Weight: =varThemeFont.B1.weightBold
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        Wrap: =false
                        X: =0
                        Y: =0
                        ZIndex: =5

                    txtAgendadetails_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =true
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.H3.italic
                        Height: =Self.Size * Len(Self.Text)
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: =Coalesce(var_TrainingToView.Agenda,var_TrainingSessionDetails.Training.Agenda, "No data to display")
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Top
                        Weight: =varThemeFont.B2.weight
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =6

            conSessionDetails_TSD As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                FillPortions: =0
                Height: =conSession_TSD.Height  + Self.PaddingTop + Self.PaddingBottom
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =var_LayoutProperties.gap.gap3
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: |
                    =
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        var_LayoutProperties.outerPadding.bottom,
                        var_LayoutProperties.gap.gap3
                    )
                PaddingLeft: |
                    =
                    
                    //Responsive condition
                    If(
                        'Training Session Details Screen'.Size = ScreenSize.ExtraLarge Or 'Training Session Details Screen'.Size = ScreenSize.Large, 
                        var_LayoutProperties.innerPadding.left - 10,
                         'Training Session Details Screen'.Size = ScreenSize.Medium,
                        var_LayoutProperties.outerPadding.left.largeAndMedium,
                        'Training Session Details Screen'.Size = ScreenSize.Small,
                        var_LayoutProperties.outerPadding.left.small
                    )
                PaddingRight: |-
                    =//Responsive condition
                    If(
                        'Training Session Details Screen'.Size = ScreenSize.ExtraLarge, 
                        var_LayoutProperties.outerPadding.right.extraLarge,
                        'Training Session Details Screen'.Size = ScreenSize.Large Or 'Training Session Details Screen'.Size = ScreenSize.Medium,
                        var_LayoutProperties.outerPadding.right.largeAndMedium,
                        'Training Session Details Screen'.Size = ScreenSize.Small,
                        var_LayoutProperties.outerPadding.right.small
                    )
                PaddingTop: |-
                    =If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        var_LayoutProperties.gap.gap2,
                        var_LayoutProperties.gap.gap3 /2
                    )
                Width: |-
                    =//Reponsive condition
                    If('Training Session Details Screen'.Size >= ScreenSize.Large,
                        Parent.Width - conDescriptionlayout_TSD.Width,
                        Parent.Width
                    )
                ZIndex: =2

                conSession_TSD As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.Semilight
                    Fill: =ColorValue(varTheme.neutralBackground1)
                    FillPortions: =0
                    Height: =Self.PaddingBottom + btnCancel_TSD.Y + btnUpdate_TSD.Height 
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =var_LayoutProperties.gap.gap2
                    LayoutMinHeight: =100
                    LayoutMinWidth: =350
                    LayoutMode: =LayoutMode.Auto
                    LayoutOverflowY: =LayoutOverflow.Scroll
                    PaddingBottom: |-
                        =//Reponsive condition
                        If('Training Session Details Screen'.Size >= ScreenSize.Large,
                            var_LayoutProperties.innerPadding.bottom,
                            var_LayoutProperties.gap.gap3
                        )
                    PaddingLeft: |-
                        =//Reponsive condition
                        If('Training Session Details Screen'.Size >= ScreenSize.Large,
                            var_LayoutProperties.innerPadding.left,
                            var_LayoutProperties.gap.gap3
                        )
                    PaddingRight: |-
                        =//Reponsive condition
                        If('Training Session Details Screen'.Size >= ScreenSize.Large,
                            var_LayoutProperties.innerPadding.right,
                            var_LayoutProperties.gap.gap3
                        )
                    PaddingTop: |-
                        =//Reponsive condition
                        If('Training Session Details Screen'.Size >= ScreenSize.Large,
                            var_LayoutProperties.innerPadding.top,
                            var_LayoutProperties.gap.gap3
                        )
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Width: |-
                        =//Reponsive condition
                        If('Training Session Details Screen'.Size >= ScreenSize.Large,
                            (conDetails_TSD.Width * .4) - Parent.PaddingLeft,
                            Parent.Width- Parent.PaddingLeft - Parent.PaddingRight
                        )
                    ZIndex: =1

                    txtSession_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =false
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.B2.italic
                        Height: =Self.Size * 1.5
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: ="Session"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Bottom
                        Weight: =varThemeFont.B1.weightBold
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        Wrap: =false
                        X: =0
                        Y: =0
                        ZIndex: =1

                    txtDate_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =false
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.B2.italic
                        Height: =Self.Size * 2
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: ="Date"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Bottom
                        Weight: =varThemeFont.B2.weightBold
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =2

                    txtDatedetails_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =true
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.H3.italic
                        Height: =Self.Size * 1.5
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: |+
                            =Coalesce(
                                Text(
                                    var_SelectedTrainingSession.'Training Session'.'Start Date and Time',
                                    "ddd mmm dd, yyyy"
                                ),
                                "No data to display"
                            )
                            
                            
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                        Weight: =varThemeFont.B2.weight
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =3

                    txtTime_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =false
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.B2.italic
                        Height: =Self.Size * 2
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: ="Time"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Bottom
                        Weight: =varThemeFont.B2.weightBold
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =4

                    txtTimedetails_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =true
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.H3.italic
                        Height: =Self.Size * 1.5
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: |
                            =//Get the range of the session
                            Coalesce(Text(var_SelectedTrainingSession.'Training Session'.'Start Date and Time', "h:mm"), "No data to display")
                            &
                            "-"
                            &
                            Coalesce(Text(var_SelectedTrainingSession.'Training Session'.'End Date and Time', "h:mm"), "No data to display")
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                        Weight: =varThemeFont.B2.weight
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =5

                    txtInstructor_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =false
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.B2.italic
                        Height: =Self.Size * 2
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: ="Instructor"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                        Weight: =varThemeFont.B2.weightBold
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =6

                    conInstructor_TSD As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        FillPortions: =0
                        Height: =Max(conProfilePicture_TSD.Height, txtInstructorName_TSD.Height)
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutGap: =var_LayoutProperties.gap.gap1
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        ZIndex: =7

                        conProfilePicture_TSD As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: =var_LayoutProperties.prifileheight
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            Width: =var_LayoutProperties.profilewidth
                            X: =
                            Y: =
                            ZIndex: =1

                            imgProfilePicture_TSD As image:
                                AccessibleLabel: =
                                BorderColor: =App.Theme.Colors.Darker40
                                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                DisabledFill: =RGBA(244, 244, 244, 1)
                                DisplayMode: =DisplayMode.Disabled
                                Height: =Parent.Height
                                Image: =If(!IsBlank(var_TrainingSessionTrainerEmail)&& Office365Users.UserPhotoMetadata(var_TrainingSessionTrainerEmail).HasPhoto, Office365Users.UserPhotoV2(var_TrainingSessionTrainerEmail))
                                ImagePosition: =ImagePosition.Stretch
                                RadiusBottomLeft: =Self.Height
                                RadiusBottomRight: =Self.Height
                                RadiusTopLeft: =Self.Height
                                RadiusTopRight: =Self.Height
                                Visible: =!IsBlank(Self.Image)
                                Width: =Parent.Width
                                X: =
                                Y: =
                                ZIndex: =1

                            bdgInitials_TSD As Badge:
                                AccessibleLabel: ="Trainer initials"
                                Align: =""
                                Appearance: ='BadgeCanvas.Appearance'.Filled
                                BasePaletteColor: =
                                Content: |-
                                    =With(
                                       {
                                          wName: 
                                          Split(
                                             var_SelectedTrainingSession.'Training Session'.'Owning User'.'Full Name',
                                             " "
                                          )
                                       },
                                       Left(First(wName).Value, 1) & Left(Last(wName).Value, 1)
                                    )
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =Parent.Height
                                LayoutMinHeight: =32
                                LayoutMinWidth: =32
                                Shape: ='BadgeCanvas.Shape'.Circular
                                ThemeColor: ='BadgeCanvas.ThemeColor'.Brand
                                VerticalAlign: =""
                                Visible: =!imgProfilePicture_TSD.Visible
                                Width: =Parent.Width
                                X: =0
                                Y: =0
                                ZIndex: =2

                        txtInstructorName_TSD As Text:
                            Align: ='TextCanvas.Align'.Start
                            AutoHeight: =true
                            DisplayMode: =DisplayMode.Edit
                            Font: =""
                            FontColor: =
                            FontItalic: =varThemeFont.H3.italic
                            Height: =conProfilePicture_TSD.Height
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            Size: =varThemeFont.B2.size
                            Text: =Coalesce(var_SelectedTrainingSession.'Training Session'.'Owning User'.'Full Name', "No data to display")
                            VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                            Weight: =varThemeFont.B2.weight
                            Width: =Parent.Width - Parent.LayoutGap - conProfilePicture_TSD.Width
                            X: =0
                            Y: =0
                            ZIndex: =3

                    txtRegisteredon_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =false
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.B2.italic
                        Height: =Self.Size * 2
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: ="Registered on"
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Bottom
                        Weight: =varThemeFont.B2.weightBold
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =8

                    txtRegisteredOn_TSD As Text:
                        Align: ='TextCanvas.Align'.Start
                        AutoHeight: =true
                        DisplayMode: =DisplayMode.Edit
                        Font: =""
                        FontColor: =
                        FontItalic: =varThemeFont.H3.italic
                        Height: =Self.Size * 1.5
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =varThemeFont.B2.size
                        Text: =Coalesce(Text(var_SelectedTrainingSession.'Registered On', "ddd, mmm dd, yyyy"), "No data to display")
                        VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                        Weight: =varThemeFont.B2.weight
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =0
                        Y: =0
                        ZIndex: =9

                    btnUpdate_TSD As Button:
                        AccessibleLabel: =Self.Text
                        Align: =""
                        BasePaletteColor: =
                        DisplayMode: |-
                            =
                            //Change Displaymode according to condition
                            If(var_TrainingScreenType = "Completed" || var_TrainingScreenType = "View",
                                DisplayMode.Disabled,
                                var_TrainingScreenType = "Join",
                                DisplayMode.Edit,
                                If(DateAdd(var_SelectedTrainingSession.'Training Session'.'Start Date and Time', -1 ,TimeUnit.Days) < Now(),
                                    DisplayMode.Disabled,
                                    DisplayMode.Edit
                                )
                            )
                        Font: =""
                        FontColor: =
                        FontItalic: =
                        FontSize: =0
                        FontWeight: =""
                        Height: =conProfilePicture_TSD.Height
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =//Check if button is Update booking and navigate to update screen
                            If(
                                var_TrainingScreenType = "Update",
                                //PROCESS: UPDATE BOOKING
                                //Put the selected training session into variable
                                Clear(colSelectedTrainingSessions);
                                //Collect training items
                            ForAll(
                                    Filter(
                                        Trainings,
                                        Status = 'Status (Trainings)'.Active,
                                        Category.'Category Id' = var_SelectedTrainingSession.Training.Category.'Category Id'
                                    ) As varTrainingItems,
                                    With(
                                        {
                                            varExistingBooking: LookUp(
                                                Bookings,
                                                Status = 'Status (Bookings)'.Active And Training.'Training Id' = varTrainingItems.'Training Id' And 'Owning User'.'Primary Email' = varCurrentUser.'Primary Email' And 'Status Reason' = 'Status Reason (Bookings)'.Registered
                                            )
                                        },
                                        Collect(
                                            colSelectedTrainingSessions,
                                            {
                                                Name: varTrainingItems.Name,
                                                Training: varTrainingItems,
                                                Details: varTrainingItems.Details,
                                                Order: varTrainingItems.Order,
                                                ExistingBooking: varExistingBooking,
                                                ExistingTrainingSession: varExistingBooking.'Training Session',
                                                UpdatedTrainingSession: varExistingBooking.'Training Session'
                                            }
                                        )
                                    )
                                );
                                //Collect training session items
                                ClearCollect(
                                colTrainingSessions,
                                AddColumns(
                                    Filter(
                                        AddColumns('Training Sessions', session_date, Date(Year('Start Date and Time'),Month('Start Date and Time'), Day('Start Date and Time'))),
                                        Status = 'Status (Training Sessions)'.Active,
                                        'Available Slot' > 0 Or IsBlank('Available Slot'),
                                        session_date > Today(),
                                        Training.'Training Id' = LookUp(colSelectedTrainingSessions, Order = var_SelectedTrainingSession.Training.Order, Training.'Training Id')
                                    ),
                                    Existing_Session,
                                    ThisRecord.'Training Session Id' = LookUp(colSelectedTrainingSessions, Order = var_SelectedTrainingSession.Training.Order, ExistingTrainingSession.'Training Session Id'),
                                    Selected_Status,
                                    false
                                )
                            );
                            
                            Set(
                                varSelectedTraining,
                                LookUp(
                                    colSelectedTrainingSessions,
                                    Order = var_TrainingSessionDetails.Training.Order
                                )
                            );
                            
                            Navigate(
                                'Training Sessions Screen',
                                Transition.None,
                                {
                                    //Get prerequisite item, if available, as baseline to start date filter on succeeding training sessions
                                    var_PrerequisiteTraining: LookUp(
                                        colSelectedTrainingSessions,
                                        Order = var_SelectedTrainingSession.Training.Order - 1
                                    ),
                                    var_SelectedTraining: varSelectedTraining,
                                    //Get succeeding item, if available, to reset if the prerequisite item has been changed
                                    var_SucceedingTraining: LookUp(
                                        colSelectedTrainingSessions,
                                        Order = var_SelectedTrainingSession.Training.Order + 1
                                    )
                                }
                            );
                                ,
                                //PROCESS: JOIN SESSION
                                Self.Text = "Join this session",
                                If(
                                    //Launch if the link is available, and show error toast if not
                                    IsBlank(var_SelectedTrainingSession.'Training Session'.Link),
                                    Notify(
                                        "Link is not available, please contact your admin for assistance",
                                        NotificationType.Error
                                    ),
                                    Launch(var_SelectedTrainingSession.'Training Session'.Link)
                                )
                            )
                        Text: |-
                            =//Change button value depending on screen type
                            If(var_TrainingScreenType = "New",
                                "Update my booking",
                                var_TrainingScreenType = "Update",
                                "Update my booking",
                                var_TrainingScreenType = "Join",
                                "Join this session",
                                "Update my booking"
                            )
                        VerticalAlign: =""
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =909
                        Y: =401
                        ZIndex: =10

                    btnCancel_TSD As Button:
                        AccessibleLabel: =Self.Text
                        Align: =""
                        Appearance: ='ButtonCanvas.Appearance'.Secondary
                        BasePaletteColor: =
                        DisplayMode: |-
                            =//Change display mode depending on screen type
                            If(
                                var_TrainingScreenType = "Completed" || var_TrainingScreenType = "View",
                                    DisplayMode.Disabled,
                                var_TrainingScreenType = "Update",
                                If(DateAdd(var_SelectedTrainingSession.'Training Session'.'Start Date and Time', -1 ,TimeUnit.Days) < Now(),
                                    DisplayMode.Edit,
                                    DisplayMode.Edit
                                ,
                                    DisplayMode.Disabled
                                )
                            )
                        Font: =""
                        FontColor: =
                        FontItalic: =
                        FontSize: =0
                        FontWeight: =""
                        Height: =conProfilePicture_TSD.Height
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =//Navigate to Confirmation Screen with the required variables
                            Navigate(
                                'Confirmation Screen',
                                Transition.None,
                                {
                                    var_Header: "Cancel booking",
                                    var_message: "Are you sure you want to cancel your booking? You cannot undo this.",
                                    var_IsUpdate: false
                                }
                            );
                            //Set variable to identify which process to use in the confirmation screen
                            Concurrent(
                                Set(
                                    varBookingActionType,
                                    "Cancel"
                                ),
                                Set(
                                    varBookingRecordToCancel,
                                    var_SelectedTrainingSession
                                );
                                
                            )
                        Text: ="Cancel my booking"
                        VerticalAlign: =""
                        Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight
                        X: =909
                        Y: =444
                        ZIndex: =12

    cmpHeaderCompound_TSD As compHeaderCompound:
        HeaderHeight: =varComponenentLayoutProperties.headerheight
        HeaderWidth: =Parent.Width
        Height: =cmpHeaderCompound_TSD.HeaderHeight
        NavigateMenu: ='Booking Screen'
        Width: =cmpHeaderCompound_TSD.HeaderWidth
        ZIndex: =4

